<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>     潜伏在雷锋身上的幸福</title>
    <url>/2011-03-28-%E6%BD%9C%E4%BC%8F%E5%9C%A8%E9%9B%B7%E9%94%8B%E8%BA%AB%E4%B8%8A%E7%9A%84%E5%B9%B8%E7%A6%8F.html</url>
    <content><![CDATA[<h1 id="潜伏在雷锋身上的幸福"><a href="#潜伏在雷锋身上的幸福" class="headerlink" title="潜伏在雷锋身上的幸福"></a>潜伏在雷锋身上的幸福</h1><p>三月正是春意黯然的花香季节，乐于助人的雷锋便在不经意间与此搭上了关系。学习“雷锋”— 一种乐于助人的精神，也许你们抱着这样的精神，到生活中实践起来，大爱就会飘扬于四海，幸福就会弥漫在人间。</p>
<p>“雷锋”在我的认知范围内，它是两个可以用来号召，号召那些热爱助人与那些不那么热心助人的中国人去干一些挺有意义的活动的超实用的文字。但是，我看不到幸福会在活动过后便像受精卵那样顺利成人。可能它在子宫中无声地夭折了。如此，避孕式的行为—“只享受高潮，不需要结果”。但是，站在盼望人们能够拥有幸福的角度，我宁愿用真心真意地去为幸福的不流产而不使避孕工具。也许，幸福的人继续幸福，不幸福的人继续躲藏在黑暗的那一角落，蜷缩着……</p>
<p>从另一角度去量度，将追求幸福的行为以“学雷锋”命名，并且将它摆放在如此生机满布大地的初春季节，实在勇气可嘉。也不难地知晓其含义：幸福需要在生命最璀璨时追逐。因而，我也深深地感受到那种对幸福抱着热爱的美好信仰。我陶醉了。不由地我向内心发出了一个普遍人会提出的疑问：能否让“雷锋”生活在每个人的生命中的每一天。但是，我的脑部的某个区域—大脑皮层，迅速般做出解答了，通过突触前膜，突出间隙，突触后膜，树突等一系列的生物学专用名词，总结出了一个结论：这并不可能。 结果对我有点打击，但无畏地我会拿出勇气去追逐幸福，将“学雷锋”进行到底。因为，“学雷锋”是具有意义的行为，尽管有点儿违背阿迪达斯的广告词“Nothing is impossible”,但无关痛痒，它毕竟是广告词。</p>
<p>因此，我恍然大悟：雷锋身上潜伏着幸福。也弄懂那样的不可能缘故：幸福需要追逐。</p>
<p>虽然，我并不了解雷锋先生在古时候做了些什么，但时代赋予”雷锋“的涵义，我却清楚地认识到：以一颗助人为乐，与人为善，以集体利益高于个人利益的舍己为人精神来融入日常生活中的点点滴滴，去让生活在这个国度的我们更幸福一点。</p>
<p>为此那么崇尚朴实的“雷锋”精神，我必须，必需对外宣扬其重要性，不应该有贬斥。即使，有众多不理想的无奈。一方水土养活百样人，而百样人又不约而同地参与到“学雷锋”的活动当中，难免会有幸福上的分歧。</p>
<p>雷锋只是一个名字承载了一些东西罢了。</p>
<p>潜伏在雷锋身上的幸福是可以寻找的，中国人！</p>
]]></content>
      <categories>
        <category>point</category>
      </categories>
      <tags>
        <tag>life-point</tag>
      </tags>
  </entry>
  <entry>
    <title>     B的0706有点不一样了</title>
    <url>/2011-07-06-B%E7%9A%840706%E6%9C%89%E7%82%B9%E4%B8%8D%E4%B8%80%E6%A0%B7.html</url>
    <content><![CDATA[<h1 id="B的0706有点不一样了"><a href="#B的0706有点不一样了" class="headerlink" title="B的0706有点不一样了"></a>B的0706有点不一样了</h1><p>我的眼睛将外面的建筑物扫视一个小回 零下A度合后，发觉在她身体内外活动着的人们，包括那几只英文字母动物，他们的内心都带有着澎湃的激情。但是，这一切都掩饰得平淡而充实。我每天都要面对人们，人们每天都会做出按照自我思考而来的活动，因此我们有了不经意的生活交集。至于有无必要，就由个人去做结论了。</p>
<p>生活的历炼不多，没有口才上反驳斥骂的经验，只能用微笑与弱者言语保护自己。与此同时做到了缓解他人心理上宣泄的欲望，减轻了自己一部分本应与其分担宣泄的压力。但是，我希望用前者来解决。</p>
<p>那天，我与A动物有了不经意的生活交集。今天，我与B动物有了不经意的生活交集。将她们用同样的方式写在同一个二维空间里面，以至来彰显她们的共同性。巧合，你我会习惯地忽略，不给予太多的思索。然而，重复，你我会刻意地保留，添加自我的逻辑分析。我用上述保护自己的方式，重复保护了自己。所以，我思考了两起事件的缘由。我对其进行了相关的反问——她们的背后究竟是何种物质，或者是精神力量在支撑着她们泼话不是错的观点？相反，又是什么化学物质在驱使我分泌出勇气去安抚她们的情绪？</p>
<p>B动物，被我的直接性提问（跨级提问）影响了。也打破了以往一惯平静的生活，也许，她不会认为这是工作生活上的乐趣，便执着地将其重命名为烦扰。她不希望她的生活出现半点的不一样，也许过久的乏味而导致她的麻木。所以，我毫不犹豫地安抚其本人。希望能够化解她的怒气……从B身上，我明白到跨级提问的严重性——她位置会略显多余。但是，毕竟她是她，我是我。也许，我会在不久将来赞同她的观点，或者，会一如既往地否决她的重命名。</p>
<p>A动物，她在助人的过程中也宣泄一种怒气，我猜想她在接受任务的过程中接触了前者的不满。然而，化身为演员。在唯一观众——我的面前演绎了一翻……相对于B，对与A我有种难为情，毕竟我有着一种迟来的罪过。</p>
<p>我想说：我是一名学生。但是，众多的AB就活生生地参与着你我的生活。</p>
]]></content>
      <categories>
        <category>point</category>
      </categories>
      <tags>
        <tag>life-point</tag>
      </tags>
  </entry>
  <entry>
    <title>     macdown的使用方法总结</title>
    <url>/2015-09-13-hellomarkdown.html</url>
    <content><![CDATA[<h1 id="Hello-markdown"><a href="#Hello-markdown" class="headerlink" title="Hello markdown"></a>Hello markdown</h1><p>前言 :<br>  这是利用 macdown 编辑文本内容的测试。以下会总结一下，编辑技巧和要点：</p>
<h2 id="符号："><a href="#符号：" class="headerlink" title="符号："></a>符号：</h2><p>1.”&gt;” 段落竖状分隔线。</p>
<p>2.”#”为段落分级符号，数量代表级数，”##” 代表二级，依次递增共六级。</p>
<p>3.”–”段落分隔线 级数递减就会出现。</p>
<p>没完 后续补上……</p>
<h2 id="操作："><a href="#操作：" class="headerlink" title="操作："></a>操作：</h2><p>1.每一级段落，需要顶最右边编辑。</p>
<p>2.同级间换行，需要return键 ，空出一行。</p>
<p>没完 后续补上……</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>     bootstrap 笔记</title>
    <url>/2015-09-18-Bootstrap.html</url>
    <content><![CDATA[<h1 id="前言：bootstrap-是基于jQery搭建的css框架。"><a href="#前言：bootstrap-是基于jQery搭建的css框架。" class="headerlink" title="前言：bootstrap 是基于jQery搭建的css框架。"></a>前言：bootstrap 是基于jQery搭建的css框架。</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="HTML头部注入"><a href="#HTML头部注入" class="headerlink" title="HTML头部注入"></a>HTML头部注入</h3><a id="more"></a>
<p>在IE运行最新的渲染模式:<br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edag&quot;&gt;</code></p>
<p>初始化移动浏览显示:<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; initial=scale=1&quot;&gt;</code></p>
<p>bootstrap模板为使IE6、7、8版本（IE9以下版本）浏览器兼容html5新增的标签，引入下面代码文件即可:<br><code>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</code></p>
<p>同理为使IE6、7、8版本浏览器兼容css3样式，引入下面代码：<br><code>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</code></p>
<p>###HTML body底部依次注入<br><code>&lt;scirpt&gt;...js/jquery.mim.js&lt;/script&gt;</code><br><code>&lt;script&gt;...js/bootstrap.min.js&gt;&lt;/script&gt;</code><br>##常用的类</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>#####<code>&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;td&gt;-&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;``&lt;ul&gt;&lt;li&gt;&lt;ol&gt;</code><br><code>dl-horizontal</code>:大于 784px 文本水平居中</p>
<p><code>list-inline</code> :li标签 水平排列</p>
<p><code>tabal-striped</code>:斑马线样式表单</p>
<p>list-unstyled（没有样式）  （必须添加）table table-bordered（边框表格）、table-hover（鼠标经过高亮）、table-condensed(紧凑）table-responsive(div 父类中添加<br>）<br>###表单</p>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>     安装使用git</title>
    <url>/2015-09-20-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8git.html</url>
    <content><![CDATA[<p>#git的配置及操作小结</p>
<h2 id="安装git："><a href="#安装git：" class="headerlink" title="安装git："></a>安装git：</h2><p>最简单直接官网下载 本地解压安装git<br>其他方法 后补…</p>
<h2 id="git常用的基本操作指令："><a href="#git常用的基本操作指令：" class="headerlink" title="git常用的基本操作指令："></a>git常用的基本操作指令：</h2><p>终端 进入新建的本地文件位置 $ cd … $git init<br>接着切换界面 正常去修改文件夹的内容 …<br>然后 返回 终端操作git<br>###以下是重要操作思路 </p>
<a id="more"></a>
<h4 id="git-add-git-add-你的文件-后缀"><a href="#git-add-git-add-你的文件-后缀" class="headerlink" title="git add : git add 你的文件.后缀"></a>git add : git add 你的文件.后缀</h4><h4 id="git-commit-git-commit-m-“引号内是你自己操作描叙”"><a href="#git-commit-git-commit-m-“引号内是你自己操作描叙”" class="headerlink" title="git commit :git commit -m “引号内是你自己操作描叙”"></a>git commit :git commit -m “引号内是你自己操作描叙”</h4><p>git add 是将 “记录的修改——人” 放在一个空间 我把它叫候车区</p>
<p>git commit 是 将 上面 候车区 的 人 统一装车（推送到我们的master主分支）<br>####接下来如何推送到远程库？</p>
<h3 id="推送到远程库-以GitHub为例子："><a href="#推送到远程库-以GitHub为例子：" class="headerlink" title="推送到远程库 以GitHub为例子："></a>推送到远程库 以GitHub为例子：</h3><p>(首先要在 GitHub配置 SSH钥匙 在终端操作）</p>
<p>首次使用git 需要事先添加 用户名 和邮箱：</p>
<p> <code>$ git config --global user.name &quot;引号这里输入你的账号名字&quot;</code><br>  <code>$ git config --global user.email &quot;引号这里输入你的邮箱&quot;</code></p>
<p> 在终端获取SSH钥匙 命令：<br> <code>$ ssh-keygen -t rsa -C &quot;你的git的用户邮箱&quot;</code>  就凭感觉enter 下去<br> 接着<code>$cd ~/.ssh</code>  ——<code>$ls</code>——<code>$cat id_rsa.pub</code> </p>
<p>下面出现你眼前的就是SSH 钥匙的公匙 复制 到GitHub设置SSH钥匙的页面 去 add 就好。</p>
<p>最后回到终端 输入推送的命令：</p>
<p><code>$git remote add origin git@github.com:github账号/仓库名.git</code>.</p>
<h3 id="经验之谈："><a href="#经验之谈：" class="headerlink" title="经验之谈："></a>经验之谈：</h3><p><strong>001.</strong>  项目远程库与本地工作区的同步问题：在主远程库同步更新至本地工作区<br><code>$git fetch -all</code>—-&gt; <code>$git reset -hard origin/master</code><br>或者如果你在另外一个分支上：<code>git reset --hard origin/&lt;branch_name&gt;</code>.</p>
<h4 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h4><p>git fetch 从远程下载最新的文件，而不尝试合并或修改任何内容。</p>
<p>然后，git reset将主分支重置为您刚刚获取的内容。该–hard选项会更改您的工作树中的所有文件以匹配其中的文件origin/master</p>
<p> [*]：值得注意的是，可以通过master在重置之前创建一个分支来维护当前的本地提交：</p>
<p><code>git checkout master</code></p>
<p><code>git branch new-branch-to-save-current-commits</code></p>
<p><code>git fetch --all</code></p>
<p><code>git reset --hard origin/master</code><br>之后，所有的旧提交将被保留new-branch-to-save-current-commits。未提交的更改（甚至分段）将丢失。确保把你需要的任何东西藏起来。</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>     vue axios 封装理解</title>
    <url>/2016-04-10-vue%E5%B0%81%E8%A3%85%E7%90%86%E8%A7%A3.html</url>
    <content><![CDATA[<h1 id="封装的思路"><a href="#封装的思路" class="headerlink" title="封装的思路"></a>封装的思路</h1><h3 id="垃圾总结-阅读者可忽略"><a href="#垃圾总结-阅读者可忽略" class="headerlink" title="垃圾总结 阅读者可忽略"></a>垃圾总结 阅读者可忽略</h3><blockquote>
<p>封装之前 要完成一次数据请求的过程：</p>
</blockquote>
<ol>
<li><p>在vue的原型上 定义axios对象 给 vue实例调用：</p>
</li>
<li><p>view 页面触发事件<br>this.axios.get(请求的访问服务器地址的路由,{请求的数据})</p>
</li>
<li><p>router api:<br>创建生成访问服务器的地址（router.get(url,methods) methdos:controller中的方法 用来操作数据库的方法）</p>
</li>
<li><p>constoller 调用kenx.js</p>
</li>
</ol>
<p>导致：在每个页面 都直接调用 vue实例上axios对象；</p>
<h2 id="实现封装："><a href="#实现封装：" class="headerlink" title="实现封装："></a>实现封装：</h2><p><code>this.axios.get(methods)(url,data)):
Methods:axios对象的方法；
URL：访问服务器的地址；
data:请求所携带的参数；
将上面三者提取出来 （pageOBJ.Methods(require.methods,data);</code></p>
<hr>
<pre><code>本次项目对封装的误解原因： router api 路径 只要请求类型不一样路径相同不受影响 

试想一下  如果每次进行请求操作 路径都不相同 那么 封装路径 就变得毫无意义了  

请求所有客户： /api/user
请求修改客户：/api/user/edit/:id
删除单个客户：/api/user/del/:id

竟然封装的核心是提取公共部分，减少重复代码，和 便于 扩展 和维护代码 

那么 api 的路劲 必然是 统一的 /api/user

对于代码的封装 应该从 要封装的（执行过程开始到结束） 代码执行最后最尾最都督的位置 为突破口 
然后 慢慢 回退 利用模块的思想 

我中有你 一层一层嵌套  a&lt;b&lt;c </code></pre>]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill - vue</tag>
      </tags>
  </entry>
  <entry>
    <title>    页面模板渲染数据</title>
    <url>/2019-03-13-%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B.html</url>
    <content><![CDATA[<h2 id="逻辑混乱-阅读者可忽略"><a href="#逻辑混乱-阅读者可忽略" class="headerlink" title="逻辑混乱 阅读者可忽略"></a>逻辑混乱 阅读者可忽略</h2><h2 id="1-采用nunjucks第三方模板库渲染数据"><a href="#1-采用nunjucks第三方模板库渲染数据" class="headerlink" title="1.采用nunjucks第三方模板库渲染数据"></a>1.采用nunjucks第三方模板库渲染数据</h2><blockquote>
<p>结合继承的思想 我们引入模板引擎 进行页面开发 同时 引擎是拥有 数据绑定 的功能<br>这个功能在开发中起到很大的作用 </p>
</blockquote>
<p>在项目根目录下 npm install nunjucks –save 下载；</p>
<p>在app.js 引入nunjucks模板库  var nunjuck = require(‘nunjucks’)</p>
<p>并配置模板引擎：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'tpl'</span>);</span><br><span class="line"></span><br><span class="line">  nunjucks.configure(<span class="string">'views'</span>,&#123;</span><br><span class="line">      autoescape:<span class="literal">true</span>,</span><br><span class="line">      express:app,</span><br><span class="line">      watch:<span class="literal">true</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="2-路由Router"><a href="#2-路由Router" class="headerlink" title="2.路由Router"></a>2.路由Router</h2><blockquote>
<p>随着对页面进行操作，页面会发生变化。那么页面之间的跳转如何实现？数据如何在跳转中进行加载？</p>
</blockquote>
<p>引入 var router = express.Router();</p>
<p>页面中跳转的URL： /user/edit 对应路由中配置的路径  router.get(‘/user/edit’,methods);</p>
<p>路由请求中调用的方法（methods）：是控制跳转至URL后 需要对页面数据交换 进行的操作</p>
<p>遵行MVC模型，将其定义在根目录下 file://Controllers 而负责页面跳转路由,则定义在根目录下 file://Router; </p>
<p>关于Router，补充与一点，专门与服务器 请求数据的 我们独立分开成两个文件 将其命名api.js 而页面跳转<br>则命名为index.js  目的是 严谨代码逻辑，体现模块化的功能 下面Controllers Model 也有所体现。</p>
<h2 id="3-控制器Controllers-与-模块器Model"><a href="#3-控制器Controllers-与-模块器Model" class="headerlink" title="3.控制器Controllers 与 模块器Model"></a>3.控制器Controllers 与 模块器Model</h2><p>Controllers: 在里面定义 methods: async function(req,res,next){<br>调用封装后的Model里面定义的读取数据库的方法}</p>
<p>在方法里面 调用到Model的方法时 使用 await (async await的理解 后续补上)</p>
<p>res.locals.protype = value;</p>
<p>res.locals 是express中 对于单次请求响应的周期内 所使用的数据  </p>
<p>app.locals 则针对于 全局的 常量 来使用 </p>
<p>value 就是 Model 与数据库 连接后 所获取得到的数据。 </p>
<p>##本内容关注的是页面的渲染 只关注 从数据库获取数据#</p>
<p>res.render(‘index’) 服务器发出响应 要求 客户渲染模板的方法 事先在 app.js 中配置好模板引擎 可忽略 模板文件的后缀</p>
<p>index完整的信息是 ‘路径/index.tpl’</p>
<h2 id="4-模板调用数据"><a href="#4-模板调用数据" class="headerlink" title="4.模板调用数据"></a>4.模板调用数据</h2><p>上面操作中：res.locals.protype =value;</p>
<p>protype 对应tpl文件中的使用语法如下</p>
<p>加载数据 </p>
<p>####以上就是数据渲染到模板的流程</p>
<blockquote>
<p>深化请继续阅读<br>nunjuck.js 模版语法<br>  express.js request respones router 的API</p>
</blockquote>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>     落地页分析</title>
    <url>/2019-04-12-%E5%AE%9E%E6%88%98%E8%90%BD%E5%9C%B0%E9%A1%B5%E7%9A%84%E5%88%86%E6%9E%90.html</url>
    <content><![CDATA[<h1 id="关于落地页分析小结-应付版"><a href="#关于落地页分析小结-应付版" class="headerlink" title="关于落地页分析小结 (应付版)"></a>关于落地页分析小结 (应付版)</h1><blockquote>
<p>针对人群:!1-3年的前端开发工程师 学习的条件：时间！时间！时间！和一个学习连续性<br>以自我的经历为认知：这个阶段的职员，能保证上班时间内完成工作就已经算是 自身能力和身边的同事都是较为出色的<br>自身能力出色 公司项目优秀且盈利 同事又是积极向上 技术过硬 想必 并非这个课程的目标对象<br>然而我觉得 目标对象是： 好学！ 不安于现状！所处的工作环境不理想（工作氛围，自身工作内容）但是能快速完成工作,力求改变 而又 束手无策的 普通程序员 或是 自学中的 在校大学生。（本身工作内容简单，或是公司对职员的定位问题，需要包工头，泥水师傅，和搬砖）</p>
</blockquote>
<h2 id="针对这类群体再简单分析一下："><a href="#针对这类群体再简单分析一下：" class="headerlink" title="针对这类群体再简单分析一下："></a>针对这类群体再简单分析一下：</h2><blockquote>
<p>状况：目前在职程序员的现状（个人单方面见解）有可能是这样： 自我提升空间 很受（工作内容，同事的指引）影响和限制.刚进行业，激情 好奇心的驱使 会使 普通程序员 处于饥饿状态下 有什么 吃什么 导致 消化不良 容易跑遍 而又十分困惑（包括没进入社会的在校大学生）都有个共通点,我应该 “学什么，怎么学，是否工作所需？”</p>
</blockquote>
<h2 id="回归本次话题："><a href="#回归本次话题：" class="headerlink" title="回归本次话题："></a>回归本次话题：</h2><ol>
<li>课程的吸引力度： 内容描叙符合工作所需，</li>
<li>举一反三提示不足：应该尝试提示列举单元项目的横向性，如除了课程的案例以外的相似实例供参考。<br>（并不是 所有人的悟性和理解能力 都较高，应该方向性引导一下,避免为了完成任务而完成任务）</li>
<li>我比较喜欢看单元项目的任务拆解分析（文字部分）我觉得 那应该是开发者的思路和开发的步骤 是精华。我会    花多滴时间去揣摩 为何他要这么设计任务，和 步骤。 </li>
<li>关于请求问题的流程的建议（鉴于试学群的积极性交流问题而提出）：<br>试学群少有问题提出，按道理应该会有疑问（排除学习时间少 和 自身能够 解决大部分问题者）<br>突发奇想 ：因为线上课程，不如弄个老师学员的匿名问答功能 把问题丢到一个池里面 我觉得应该可以提高学员和学员之间，学员和老师之间 的 互动交流  </li>
<li>市面上估计也应该有同类型的 课程 ，但是 职场上依然存在很多同学付出了时间和金钱 达不到预期， 工作几年以后 技术还是渣渣 ，工作其实也不就是实战啊，但是为何还是会出现不理想的结果 我觉得课程 结合本项目的教学理念 融入  如何教你科学工作 别让落后的开发思维误导   如何识别技术渣渣同事 等等为突破口 哈哈~</li>
<li>超时提交了 怕耽误  本想写多 写着写着 感觉又有点跑题 就这样吧 ~</li>
</ol>
]]></content>
      <categories>
        <category>point</category>
      </categories>
      <tags>
        <tag>work-point</tag>
      </tags>
  </entry>
  <entry>
    <title>     Github代码提交和日常协同开发</title>
    <url>/2019-04-12-%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91.html</url>
    <content><![CDATA[<h1 id="Github代码提交-和-日常协同开发（远程仓：Github"><a href="#Github代码提交-和-日常协同开发（远程仓：Github" class="headerlink" title="Github代码提交 和 日常协同开发（远程仓：Github)"></a>Github代码提交 和 日常协同开发（远程仓：Github)</h1><h2 id="情况一：新建空仓库-（新建空仓库-不勾选自动生成Readme-md"><a href="#情况一：新建空仓库-（新建空仓库-不勾选自动生成Readme-md" class="headerlink" title="情况一：新建空仓库 （新建空仓库 不勾选自动生成Readme.md)"></a>情况一：新建空仓库 （<strong><em>新建空仓库 不勾选自动生成Readme.md</em></strong>)</h2><p>1.cd项目文件（初始化项目）<br>git init<br>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:你的账户/仓库名.git<br>git add .<br>git commit -m “nihao”<br>git push -u origin master （首次提交）<br>git push （之后提交）</p>
<h2 id="情况二：非空仓库（勾选自动生成Readme-md"><a href="#情况二：非空仓库（勾选自动生成Readme-md" class="headerlink" title="情况二：非空仓库（勾选自动生成Readme.md)"></a>情况二：非空仓库（<strong><em>勾选自动生成Readme.md</em></strong>)</h2><blockquote>
<p>注意不建议按照 情况一操作 因为会遇到问题 （稍后补充解决方法）</p>
</blockquote>
<p>1.cd 项目<br>git clone <a href="mailto:git@github.com">git@github.com</a>:你的账户/仓库名.git<br>2.把本地项目 放进 仓库<br>3.常规操作(不用初始化项目)<br>git add .<br>git commit -m “nihao”<br>git push </p>
<blockquote>
<p>结果是 GitHub 的仓库情况是: 你的账户名/仓库名<br>代码仓库code&gt; 项目(你的本地项目名)+ Readme.md<br>这样别人拷贝你的项目是 操作感会欠佳<br>建议的是用情况一的方法在 GitHub上新建空仓库</p>
</blockquote>
<h2 id="Git协同开发的常用操作"><a href="#Git协同开发的常用操作" class="headerlink" title="Git协同开发的常用操作"></a>Git协同开发的常用操作</h2><blockquote>
<p>Git 的分支开发管理 是一个非常实用的开发技能 日后协同工作中 会经常使用 </p>
</blockquote>
<ol>
<li>利用git 客户端操作 使用 ssh 的url 克隆仓库 避免用户密码验证等乱七八糟的错误 一不小心用了https 就会到终端进行操作</li>
<li>在客户端中 新建分支 和 一键（add . Commit)  和 push</li>
<li>git checkout master : 切换到主分支 </li>
<li>git<a href="https://backlog.com/git-tutorial/cn/stepup/stepup1_1.html" target="_blank" rel="noopener">高阶学习</a></li>
</ol>
<h4 id="避免冲突"><a href="#避免冲突" class="headerlink" title="避免冲突"></a>避免冲突</h4><ul>
<li>更新该分支最新代码，从远程分支仓库拉取 ：GitHub 客户端 操作 branch=》 update master</li>
</ul>
<h4 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h4><ul>
<li>根据提示 找出冲突部分代码 进行修改 再进行合并 客服端会出现 “ xxx form xxx into xxx “ into 后面为主分支</li>
</ul>
<h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h4><ul>
<li>这里使用Github 客户端 按照界面进行操作  History  revert This commit</li>
</ul>
<blockquote>
<p>前端开发者（非大神级） 建议专注重点 哪里方便自己使用的工具 就直接用 </p>
</blockquote>
<h4 id="日常开发注意事项"><a href="#日常开发注意事项" class="headerlink" title="日常开发注意事项"></a>日常开发注意事项</h4><ul>
<li><p>提交代码之前 保持代码处于最新状态 从远程仓库更新 （远程仓代表项目开发的主分支）</p>
</li>
<li><p>在进行代码操作之前时刻关注 当前所处分支（客户端 看 Current Branch )</p>
</li>
<li><p>常用的git 终端命令： </p>
<ul>
<li><p>查看当前分支： git  branch </p>
</li>
<li><p>查看远程仓库地址 ： git remote -v</p>
</li>
<li><p>切换本地项目的主分支： git checkout xxx(分支的名字)</p>
</li>
</ul>
</li>
</ul>
<h4 id="补充：commit-m-“提交信息常用规范”"><a href="#补充：commit-m-“提交信息常用规范”" class="headerlink" title="补充：commit - m “提交信息常用规范”"></a>补充：commit - m “提交信息常用规范”</h4><ul>
<li><p>feat: 新功能,而不是构建脚本的一个新功能</p>
</li>
<li><p>fix: 修复缺陷</p>
</li>
<li><p>refactor: 重构（即不是新增功能，也不是修改bug的代码变动）</p>
</li>
<li><p>chore: 架构配置或工具的变动（即不是新增功能，也不是修改bug的代码变动）</p>
</li>
<li><p>docs: 文档的变动</p>
</li>
<li><p>test: 测试(如单元测试 不包括定位缺陷的测试)</p>
</li>
<li><p>optimize: 优化项目（即不是新增功能，也不是修改bug的代码变动）</p>
</li>
<li><p>build: 项目打包</p>
</li>
<li><p>revert: 撤回修改</p>
</li>
<li><p>merge: 合并分支</p>
</li>
</ul>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>skill</tag>
      </tags>
  </entry>
  <entry>
    <title>     Hexo技术博客</title>
    <url>/2019-04-14-hexo%E5%89%8D%E7%AB%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A1%86%E6%9E%B6.html</url>
    <content><![CDATA[<h1 id="搭建快速发布文章的技术博客"><a href="#搭建快速发布文章的技术博客" class="headerlink" title="搭建快速发布文章的技术博客"></a>搭建快速发布文章的技术博客</h1><blockquote>
<p>基于GitHub Page 和 hexo 博客框架 </p>
</blockquote>
<h2 id="应用的知识：hexo-Github"><a href="#应用的知识：hexo-Github" class="headerlink" title="应用的知识：hexo + Github"></a>应用的知识：hexo + Github</h2><h3 id="搭建步骤："><a href="#搭建步骤：" class="headerlink" title="搭建步骤："></a>搭建步骤：</h3><h3 id="Github-github-page"><a href="#Github-github-page" class="headerlink" title="Github:github page"></a>Github:github page</h3><blockquote>
<p>生成 Github Page </p>
</blockquote>
<h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo:"></a>hexo:</h3><p><strong>1.安装hexo</strong></p>
<blockquote>
<p>npm install -g hexo-cli (全局安装)</p>
</blockquote>
<p><strong>2.cd到你的工作目录 （blog是你的hexo项目文件夹名字）</strong></p>
<blockquote>
<p> hexo init blog</p>
</blockquote>
<p><strong>3.为了简化流程 就直接先更换网站的主题</strong></p>
<blockquote>
<p> $ cd blog<br> $ git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next 旧版地址<br> $ git clone <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a> themes/next 新版地址</p>
</blockquote>
<blockquote>
<p>修改next主题样式 ：在主题文件夹next的配置文件scheme字段中修改</p>
</blockquote>
<p><strong>4.cd _config.yml 全局配置文件 修改theme属性</strong></p>
<blockquote>
<p>  theme:next</p>
</blockquote>
<p><strong>5.本地跑起hexo</strong></p>
<blockquote>
<p> $ hexo g  打包项目（没上线前可不执行）</p>
</blockquote>
<blockquote>
<p> $ hexo s  启动本地web服务器</p>
</blockquote>
<p><strong>6.打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 检查是否成功</strong></p>
<h2 id="推送到Github"><a href="#推送到Github" class="headerlink" title="推送到Github"></a>推送到Github</h2><p><strong>7.修改hexo项目的根目录，根目录，根目录， 下的全局配置文件_config.yml</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;hizeng&#x2F;hizeng.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><br><strong>8.为一键部署做准备 安装git hexo 发布插件</strong></p>
<blockquote>
<p>$ npm install hexo-deployer-git –save(<strong><em>页面显示问题</em></strong>save前面是两个-)</p>
</blockquote>
<p><strong>9.上线</strong></p>
<blockquote>
<p>$ hexo clean 清理缓存<br>$ hexo g     打包项目<br>$ hexo d     一键部署</p>
</blockquote>
<p><strong>10.发布文章</strong></p>
<blockquote>
<p> 采用md语法编写文章 原因简单易上手操作<br> 由于hexo打包（hexo g) 时候 会编译成 对应的html css js 等线上部署的文章<br> 那么 我们要对文章 和 项目的主题  进行相关的配置</p>
</blockquote>
<p><strong>10.1文章</strong></p>
<blockquote>
<p>进入根目录的souce文件下的_posts里 新增md文件xxx.md<br>文章最顶部插入以下代码 之后发布都 把这段代码加上<br><strong><em>这是YAML的语法 相关语法可以阅读教程<a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">yaml</a></em></strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout:     post                    # 使用的布局（不需要改）</span><br><span class="line">title:      零基础教你搭建技术博客   # 标题 </span><br><span class="line">subtitle:                         #副标题</span><br><span class="line">date:       2019-04-19             # 时间</span><br><span class="line">author:     lishujun                # 作者</span><br><span class="line"> # header-img: img&#x2F;post-bg-2015.jpg    这篇文章标题背景图片</span><br><span class="line">catalog: true                       # 是否归档</span><br><span class="line">categories: skill                   #分类</span><br><span class="line">tags:                                   </span><br><span class="line">     - work-skill                      #标签  </span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><strong>10.2项目主题</strong></p>
<blockquote>
<p>进入项目<strong>主题文件themes</strong> 目录下的_confiy.yml 文件 中menu注释部分 按下面的依次打开<br>目的为菜单栏的按钮 添加链接</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive</span><br></pre></td></tr></table></figure>

<p><strong>10.3日常发布</strong></p>
<blockquote>
<p>在_post文件夹中添加xxx.md文章后 只需要执行以下命令<br><strong>记得添加10.2中的代码片段 不然没标题和日期等等信息</strong> </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g </span><br><span class="line">$ hexo s (本地预览，可不执行)</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>



<p><strong>11.0关于域名配置</strong></p>
<h2 id="购买域名-阿里云"><a href="#购买域名-阿里云" class="headerlink" title="购买域名(阿里云)"></a>购买域名(阿里云)</h2><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><ol>
<li><p>$ ping hizeng.github.io 得到一个IP后 记得ctrl+c 退出命令</p>
</li>
<li><p>修改你的域名解析记录，添加一个A记录，用得到的IP</p>
</li>
<li><p>登录<a href="http://github.com&gt;进入项目&gt;Settings&gt;Custom" target="_blank" rel="noopener">http://github.com&gt;进入项目&gt;Settings&gt;Custom</a> domain&gt;输入你的域名&gt;Save。</p>
</li>
</ol>
<h2 id="hexo项目中添加-CNAME-文件"><a href="#hexo项目中添加-CNAME-文件" class="headerlink" title="hexo项目中添加 CNAME 文件"></a>hexo项目中添加 CNAME 文件</h2><p><strong>添加你的域名</strong></p>
<blockquote>
<p> 因为在下次 hexo d 部署的过程中 会把根目录下的CNAME 覆盖删除了 因为hexo并不会自动生成 CNAME 文件<br> 有两种方法可以解决</p>
</blockquote>
<ol>
<li>我们就需要这个 CNAME 工具hexo-generator-cname，这时会自动在 public 里生成一个 CNAME 文件，把你的域名加进去再部署一下吧！</li>
<li>在根目录下<strong>sourse</strong>文件中添加 （我采用的是第二种）</li>
</ol>
<p><strong>11.1 同一域名下挂载第二hexo博客</strong></p>
<blockquote>
<p>在全局配置文件中_config.yml 修改<br>如果您的网站放在子目录中，请将网址设置为”<a href="http://yoursite.com/child">http://yoursite.com/child</a> “，将root设置为”/child/“</p>
</blockquote>
<h2 id="12-拓展功能"><a href="#12-拓展功能" class="headerlink" title="12.拓展功能"></a>12.拓展功能</h2><p><strong>12.1 添加动画效果</strong></p>
<blockquote>
<p>在根目录下操作<br>$ npm install –save hexo-helper-live2d （安装时间比较长）</p>
</blockquote>
<blockquote>
<p>安装模板 在根目录下操作(例子是一只白猫 黑猫是hijiki)</p>
</blockquote>
<p>$ npm install live2d-widget-model-tororo</p>
<blockquote>
<p>开源作者 提供了10多个 模板 可以在下方 hexo-helper-live-2d 中查阅 对应名字可以在<br>这里阅览<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">模板</a></p>
</blockquote>
<blockquote>
<p>cd <strong>_config.yml</strong> 添加配置如下</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/xiazeyu/live2d-widget.js</span></span><br><span class="line"><span class="comment">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-tororo</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-20</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.2</span></span><br></pre></td></tr></table></figure>

<p><strong>12.2 草稿功能</strong></p>
<p>草稿相当于很多博客都有的“私密文章”功能。使用如下命令创建：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> draft <span class="string">"new draft"</span></span><br></pre></td></tr></table></figure>

<p>会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</p>
<p>如果你希望强行预览草稿，更改配置文件（_config.yml）：<br><code>render_drafts: true</code><br>或者如下方式启动server：<br><code>$ hexo server --drafts</code></p>
<p>下面这条命令可以把草稿变成文章，或者页面：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">`$ hexo publish [layout] &lt;filename&gt;`</span></span><br></pre></td></tr></table></figure>

<p><strong>12.3小结next主题插件</strong></p>
<blockquote>
<p>使用插件： 全局安装依赖（npm install –save hexo-helper-live2d ）到 package.json<br>全局配置： 在_config.yml 中根据对应的插件文档 进行配置<br>其他功能大家可以根据 next文档去尝试配置</p>
</blockquote>
<p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo文档</a><br><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">nexT主题文档</a><br><a href="https://www.markdown.cn/" target="_blank" rel="noopener">markdown文档</a><br><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">hexo-helper-live-2d</a></p>
<p><strong>延伸拓展</strong><br><a href="https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/" target="_blank" rel="noopener">浏览器工作原理</a><br><a href="https://juejin.im/entry/58c63c5061ff4b005d9f7a62" target="_blank" rel="noopener">Hexo源码设计模式</a></p>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>     小程序</title>
    <url>/2019-04-23-%E5%B0%8F%E7%A8%8B%E5%BA%8F.html</url>
    <content><![CDATA[<h2 id="小程序与web开发对比分析"><a href="#小程序与web开发对比分析" class="headerlink" title="小程序与web开发对比分析"></a>小程序与web开发对比分析</h2><h3 id="注册小程序开发账号-安装开发者工具等"><a href="#注册小程序开发账号-安装开发者工具等" class="headerlink" title="注册小程序开发账号 安装开发者工具等"></a>注册小程序开发账号 安装开发者工具等</h3><ol>
<li>在使用开发工具的过程中 注意 项目名称是唯一的 包括 代码片段 公众号 小游戏 </li>
</ol>
<h3 id="对于初始化的小程序-关注app-json-app-js-以及-pages文件夹"><a href="#对于初始化的小程序-关注app-json-app-js-以及-pages文件夹" class="headerlink" title="对于初始化的小程序 关注app.json app.js 以及 pages文件夹"></a>对于初始化的小程序 关注app.json app.js 以及 pages文件夹</h3><blockquote>
<p>app.json 全局的页面配置文件 ：主要负责定义所有页面的引用路径 和 基本的页面属性 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/config.html" target="_blank" rel="noopener">配置</a></p>
</blockquote>
<ol>
<li>添加属性tabBar 可以显示底部固定导航栏：注意list字段中的子项路径（pagePath） 在pages属性中要置顶，必须写在非tabBar页面路径之前 否则tab会显示异常(不显示)</li>
<li><strong>代码中存在注释</strong> 会引致语法错误 导致页面报错 谨慎使用 </li>
<li>每个属性的结尾 不能有任何符号</li>
</ol>
<blockquote>
<p>app.js 小程序项目入口文件 项目初始化init  </p>
</blockquote>
<blockquote>
<p>pages文件夹 内放置对应的 单一页面（每个页面文件都基本需要配置 .js .wxml .wxss. .json) </p>
</blockquote>
<h3 id="单一页面的生成"><a href="#单一页面的生成" class="headerlink" title="单一页面的生成"></a>单一页面的生成</h3><ul>
<li><strong>.js</strong> :处理逻辑业务 与web开发类似</li>
<li><strong>.wxml</strong> :具有模板数据绑定的功能 类似 Vue</li>
<li><strong>.wxss</strong> :等同css </li>
<li><strong>.json</strong> :此处添加配置会 将全局中相同的配置覆盖</li>
</ul>
<ol>
<li><strong>.js</strong> : Page({}) 页面实例<strong>必须</strong>正确初始化 否则页面会报错<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">    data:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 生命周期函数--监听页面加载</span><br><span class="line">     *&#x2F;</span><br><span class="line">    onLoad: function (options) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li>
<li><strong>.json</strong> : 同上 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h2 id="与web开发中的html-js-css-对比"><a href="#与web开发中的html-js-css-对比" class="headerlink" title="与web开发中的html js css 对比"></a>与web开发中的html js css 对比</h2><h4 id="由于小程序的界面空间有限且运行环境非浏览器-而是在微信app内置环境中-有以下地方需要注意"><a href="#由于小程序的界面空间有限且运行环境非浏览器-而是在微信app内置环境中-有以下地方需要注意" class="headerlink" title="由于小程序的界面空间有限且运行环境非浏览器 而是在微信app内置环境中 有以下地方需要注意:"></a>由于小程序的界面空间有限且运行环境非浏览器 而是在微信app内置环境中 有以下地方需要注意:</h4><h4 id="文档内容较全-初学者-第一天可着重阅读以下整理过后的文档"><a href="#文档内容较全-初学者-第一天可着重阅读以下整理过后的文档" class="headerlink" title="文档内容较全 初学者 第一天可着重阅读以下整理过后的文档"></a>文档内容较全 初学者 第一天可着重阅读以下整理过后的文档</h4><ul>
<li><p><strong>wxml:</strong> <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/" target="_blank" rel="noopener">小程序页面的结构</a>   <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html" target="_blank" rel="noopener">页面导航</a>     <a href="https://developers.weixin.qq.com/miniprogram/dev/api/wx.switchTab.html" target="_blank" rel="noopener">路由api</a> <a href="https://developers.weixin.qq.com/miniprogram/dev/api/wx.showToast.html" target="_blank" rel="noopener">界面交互：例如消息提示框 底部操作菜单等</a></p>
</li>
<li><p><strong>.js:</strong> <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html" target="_blank" rel="noopener">事件</a></p>
</li>
<li><p><strong>wxss:</strong> <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html" target="_blank" rel="noopener">wxss</a></p>
</li>
</ul>
<!-- ### 页面之间的跳转 -->

<hr>
<h2 id="进入小程序项目"><a href="#进入小程序项目" class="headerlink" title="进入小程序项目"></a>进入小程序项目</h2><h3 id="项目拆解"><a href="#项目拆解" class="headerlink" title="项目拆解"></a>项目拆解</h3><blockquote>
<p>combat-okr项目 文件内应该分为 sever（服务端即Koa框架） client（客户端 即小程序项目）开发时着重各自的开发环境 初学者 避免混淆</p>
</blockquote>
<h2 id="1-小程序登录"><a href="#1-小程序登录" class="headerlink" title="1.小程序登录"></a>1.小程序登录</h2><blockquote>
<p> 本次登录功能分为三部分 客户端（小程序项目） 本地服务端（koa)  微信服务端<br> 登录就是如何处理好 req res 请求和响应的数据接发<br> 区分这两者在不同的服务端的不同语法是关键</p>
</blockquote>
<h3 id="三者存在以下关系"><a href="#三者存在以下关系" class="headerlink" title="三者存在以下关系"></a>三者存在以下关系</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">客户端 &lt;&#x3D;&gt; 微信服务端 ／／code 的获取</span><br><span class="line"></span><br><span class="line">客户端 &lt;&#x3D;&gt; 本地服务器 &lt;&#x3D;&gt; 微信服务端 ／／</span><br></pre></td></tr></table></figure>

<ol>
<li>code : 由客服端直接向微信服务端 发起请求所得（<strong>wx.login()</strong>)</li>
<li>获取openId等数据: 由本地服作为中转，向第三方服务器 发起请求</li>
<li>操作数据</li>
</ol>
<h3 id="主要讲解-数据在-三者中的-获取方式-存储方式"><a href="#主要讲解-数据在-三者中的-获取方式-存储方式" class="headerlink" title="主要讲解 数据在 三者中的 获取方式 存储方式"></a>主要讲解 数据在 三者中的 获取方式 存储方式</h3><p>客户端： 这里是小程序项目的文件 为实际操作的目录<br>        主要是运用到小程序的API（请求语法/存取语法）</p>
<p>本地服： koa的中 ctx的理解和其API</p>
<h3 id="关于客户端请求-wx-login-amp-amp-wx-request-的分析"><a href="#关于客户端请求-wx-login-amp-amp-wx-request-的分析" class="headerlink" title="关于客户端请求 wx.login()&amp;&amp; wx.request 的分析"></a>关于客户端请求 <strong>wx.login()&amp;&amp; wx.request</strong> 的分析</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wx.login(&#123;</span><br><span class="line">  success(res) &#123;</span><br><span class="line">    if (res.code) &#123;</span><br><span class="line">      &#x2F;&#x2F; 发起网络请求</span><br><span class="line">      wx.request(&#123;</span><br><span class="line">        url: &#39;https:&#x2F;&#x2F;test.com&#x2F;onLogin&#39;,</span><br><span class="line">        data: &#123;</span><br><span class="line">          code: res.code</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      console.log(&#39;登录失败！&#39; + res.errMsg)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<ul>
<li><p>要有一个强硬的逻辑：发起请求 就必须 想到  响应 </p>
</li>
<li><p>去查找 发起者 和 接收者 的语法， 如上面是 小程序客户端向 本地服务（如koa)发起的请求  </p>
<p>那么接下来 就是想  本地服 如何 响应客户端的请求(数据怎么传递)</p>
</li>
<li><p>发请求的目的是要拿到什么数据？</p>
</li>
<li><p>本地服 在满足客服端的请求 是否需要向第三方或者 数据库 ？</p>
</li>
</ul>
<blockquote>
<p>带着以上的思路,找出服务端之间的请求和响应 的数据传递所运用的语法 就能很好的处理各种类型的客户端（前台） 服务端（后台） 之间的交互工作</p>
</blockquote>
<h3 id="目前用作前台类型有：-原生（html）-vue-小程序"><a href="#目前用作前台类型有：-原生（html）-vue-小程序" class="headerlink" title="目前用作前台类型有： 原生（html） vue 小程序"></a>目前用作前台类型有： 原生（html） vue 小程序</h3><h3 id="充当服务端角色类型有：-原生（ajax-是一种写法）-express-koa"><a href="#充当服务端角色类型有：-原生（ajax-是一种写法）-express-koa" class="headerlink" title="充当服务端角色类型有： 原生（ajax:是一种写法）  express koa."></a>充当服务端角色类型有： 原生（ajax:是一种写法）  express koa.</h3><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol>
<li>小程序的数据库表中字段命名：user-id user-name 在小程序的列表渲染中 会读取不到改字段的属性 用userID 取代</li>
</ol>
<h3 id="数据库操作和页面渲染数据"><a href="#数据库操作和页面渲染数据" class="headerlink" title="数据库操作和页面渲染数据"></a>数据库操作和页面渲染数据</h3><h6 id="杂记："><a href="#杂记：" class="headerlink" title="杂记："></a>杂记：</h6><ol>
<li>client 请求类型为（Get 或 Put )，通过 API 访问serever ，server (Koa框架 )通过ctx.request.body 获取到 client中 data字段中定义的对象（键值对）</li>
<li>client 请求类型为（Post )，通过 API 访问serever ，server (Koa框架 )：<strong>需要引入第三方库koa-bodyparser</strong> ctx.request.body 获取到 client中 data字段中定义的对象（键值对）</li>
<li>交互逻辑简述 稍后补充<ol>
<li>Client view中</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title>     mysql连接出错</title>
    <url>/2019-04-25-mysql%E8%BF%9E%E6%8E%A5%E5%87%BA%E9%94%99xampp.html</url>
    <content><![CDATA[<h3 id="连接mysql数据库出错"><a href="#连接mysql数据库出错" class="headerlink" title="连接mysql数据库出错"></a>连接mysql数据库出错</h3><blockquote>
<h5 id="本次案例是开发者-同时在本地安装了mysql-和-xampp-集成了mysql等的本地开发环境"><a href="#本次案例是开发者-同时在本地安装了mysql-和-xampp-集成了mysql等的本地开发环境" class="headerlink" title="本次案例是开发者 同时在本地安装了mysql 和 xampp(集成了mysql等的本地开发环境)"></a>本次案例是开发者 同时在本地安装了mysql 和 xampp(集成了mysql等的本地开发环境)</h5></blockquote>
<p><strong>问题描述:</strong></p>
<p><strong>开发者 系统更新后 使用sequel pro 连接xampp中的MySQL数据库 失败</strong><br><strong>xampp mysql database runing 绿灯显示正常！！！</strong></p>
<p><strong>解决办法：</strong></p>
<p><strong>第一步：</strong></p>
<p>打开terminal 输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo &#x2F;Applications&#x2F;XAMPP&#x2F;bin&#x2F;mysql.server start</span><br></pre></td></tr></table></figure>

<p><strong>第二步:</strong></p>
<p>更改xampp中访问MySQL的端口（3306=》3366） </p>
<p>进入xampp Manage Servers 控制面板,点击Configure  修改port的值 </p>
<p>或者 进入 my.cnf 文件中[client] [mysqld]中 port值 和 php.ini 中 mysqli.default_port= 3366 </p>
<p><strong>问题分析</strong></p>
<ol>
<li>在sequel pro 中配置如下<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">host: 127.0.0.1</span><br><span class="line">user: root</span><br><span class="line">passward: 默认空</span><br><span class="line">databade: 不填</span><br><span class="line">port:3366(已经修改)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Unable to connect to host 127.0.0.1, or the request timed out.</span><br><span class="line"></span><br><span class="line">Be sure that the address is correct and that you have the necessary privileges, or try increasing the connection timeout (currently 10 seconds).</span><br><span class="line"></span><br><span class="line">MySQL said: Can&#39;t connect to MySQL server on &#39;127.0.0.1&#39; (61)</span><br></pre></td></tr></table></figure>
修改port是避免xmapp中连接mysql的端口与本地连接mysql端口冲突</li>
</ol>
<p>回头小结： 由于本地mysql登录需要密码 那么如果不更改xampp中mysql默认的3306 在不输入密码的情况下 且 xampp mysql sever start . sequel pro 会自动选择连接xmapp中的数据库.(强烈建议修改端口，以免产生不必要的损失)</p>
<p><strong>*重点</strong> </p>
<p>关于两者之间切换问题 和 注意事项</p>
<p>开启本地mysql 步骤</p>
<ol>
<li>检查 xampp mysql database 的status 设置为stopped</li>
<li>去控制面板或者终端 启动本地mysql server </li>
</ol>
<p>开启xmapp mysql </p>
<ol>
<li>进入xmapp 按钮操作 start ，如果本地已经能够正常访问 且 xmpapp mysql server 成功跑起 就直接在sq中自由切换两者 </li>
</ol>
<p><strong>想自由切换两者 可以在活动监视器查看是否存在有两个mysald的进程</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cengpeiqindeMacBook-Pro:~ cengpeiqin$ sudo &#x2F;Applications&#x2F;XAMPP&#x2F;bin&#x2F;mysql.server start</span><br><span class="line">Starting MySQL</span><br><span class="line">.2019-04-25 21:51:41 28258 mysqld_safe Logging to &#39;&#x2F;Applications&#x2F;XAMPP&#x2F;xamppfiles&#x2F;var&#x2F;mysql&#x2F;cengpeiqindeMacBook-Pro.local.err&#39;.</span><br><span class="line">2019-04-25 21:51:41 28258 mysqld_safe Starting mysqld daemon with databases from &#x2F;Applications&#x2F;XAMPP&#x2F;xamppfiles&#x2F;var&#x2F;mysql</span><br><span class="line"> SUCCESS!</span><br><span class="line">cengpeiqindeMacBook-Pro:~ cengpeiqin$</span><br></pre></td></tr></table></figure>

<h6 id="关于本地mysql-控制面版"><a href="#关于本地mysql-控制面版" class="headerlink" title="关于本地mysql 控制面版"></a>关于本地mysql 控制面版</h6><h6 id="如果-在xampp-开启的情况下-点击stop-就可以终止-这时候控制面板会出现异常显示"><a href="#如果-在xampp-开启的情况下-点击stop-就可以终止-这时候控制面板会出现异常显示" class="headerlink" title="如果 在xampp 开启的情况下  点击stop 就可以终止 这时候控制面板会出现异常显示"></a>如果 在xampp 开启的情况下  点击stop 就可以终止 这时候控制面板会出现异常显示</h6><h6 id="（stop-server后，控制面板会继续亮绿灯-可以在活动监视器观察情况，是否真正退出myaqld进程）"><a href="#（stop-server后，控制面板会继续亮绿灯-可以在活动监视器观察情况，是否真正退出myaqld进程）" class="headerlink" title="（stop server后，控制面板会继续亮绿灯,可以在活动监视器观察情况，是否真正退出myaqld进程）"></a>（stop server后，控制面板会继续亮绿灯,可以在活动监视器观察情况，是否真正退出myaqld进程）</h6><h6 id="或者在-活动监视器-中退出mysqld"><a href="#或者在-活动监视器-中退出mysqld" class="headerlink" title="或者在 活动监视器 中退出mysqld"></a>或者在 活动监视器 中退出mysqld</h6><p>结语： 在开发前 必须把环境搭好 在开发过程中重点关注开发  </p>
<h6 id="数据库日常注意事项"><a href="#数据库日常注意事项" class="headerlink" title="数据库日常注意事项"></a><strong>数据库日常注意事项</strong></h6><ol>
<li><p>小程序的数据库表中字段命名：user-id user-name 在小程序的列表渲染中 会读取不到改字段的属性 用userID 取代</p>
<p>2.mac下使用sequel pro <a href="https://sequelpro.com/test-builds" target="_blank" rel="noopener">test-builds</a>（银色图片），解决了sequel pro（黄色图标）的不知明问题。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>work-skill</tag>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title>   Mac工作流工具推介</title>
    <url>/2019-05-05-mac%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D.html</url>
    <content><![CDATA[<h1 id="Mac-工作流"><a href="#Mac-工作流" class="headerlink" title="Mac 工作流"></a>Mac 工作流</h1><h2 id="掌握workflows后你会发现你一直在浪费你的Mac"><a href="#掌握workflows后你会发现你一直在浪费你的Mac" class="headerlink" title="掌握workflows后你会发现你一直在浪费你的Mac"></a>掌握workflows后你会发现你一直在浪费你的Mac</h2><a id="more"></a>
<blockquote>
<p>工欲善其事必先利其器! </p>
</blockquote>
<p><a href="http://louiszhai.github.io/2018/05/31/alfred/" target="_blank" rel="noopener">Alfred神器使用手册</a> <strong>极大的减少了程序之间的切换成本和重复按键成本</strong></p>
<ul>
<li>链接目前有问题:偶尔会打不开 </li>
<li>Alfred （带有Workflows功能的破解版本 找我要，workflows 是Alfred的核心 ）</li>
</ul>
<p><a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">mac键盘快捷键</a><strong>：熟悉你的电脑是基本操作</strong></p>
<p><a href="https://support.google.com/chrome/answer/157179?hl=zh-Hans" target="_blank" rel="noopener">谷歌浏览器快捷键</a><strong>:熟练运用浏览器快捷键 可以提升你的气质</strong></p>
<p><a href="https://www.typora.io/" target="_blank" rel="noopener">markdown编辑器</a> <strong>:可以提高3倍你书写文档的速度，让你乐意总结思路</strong> </p>
<p><a href="http://www.irradiatedsoftware.com/sizeup/" target="_blank" rel="noopener">sizeup分屏神器</a>:分屏提高你的工作视野 让你的视野集中在同一眼底下 所有所有的一切都是为了让你专注思考你的代码</p>
<h6 id="对于一般markdown-视图阅览编辑：-编辑的同时-只是阅览-并非在阅览的文章中编辑，对于书写文档的书写速度来说-是毫无帮助-一般的视图阅览是辅助编辑为主-让你的书写更加流畅-着重文字内容的质量才是这款编辑的有用之处"><a href="#对于一般markdown-视图阅览编辑：-编辑的同时-只是阅览-并非在阅览的文章中编辑，对于书写文档的书写速度来说-是毫无帮助-一般的视图阅览是辅助编辑为主-让你的书写更加流畅-着重文字内容的质量才是这款编辑的有用之处" class="headerlink" title="对于一般markdown 视图阅览编辑： 编辑的同时 只是阅览 并非在阅览的文章中编辑，对于书写文档的书写速度来说 是毫无帮助 一般的视图阅览是辅助编辑为主 让你的书写更加流畅 着重文字内容的质量才是这款编辑的有用之处"></a>对于一般markdown 视图阅览编辑： 编辑的同时 只是阅览 并非在阅览的文章中编辑，对于书写文档的书写速度来说 是毫无帮助 一般的视图阅览是辅助编辑为主 让你的书写更加流畅 着重文字内容的质量才是这款编辑的有用之处</h6><p><a href="https://chrome.google.com/webstore/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D-%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/cdonnmffkdaoajfknoeeecmchibpmkmg" target="_blank" rel="noopener">翻译插件</a> <a href="https://github.com/crimx/ext-saladict/wiki/Instructions#wiki-content" target="_blank" rel="noopener">注意事项</a><strong>:比谷歌翻译还优秀的翻译插件（此插件包含谷歌翻译）</strong></p>
<p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">谷粒插件英雄榜</a><strong>:优秀的插件都在这里</strong></p>
<p><a href="https://www.typingclub.com/" target="_blank" rel="noopener">打字练习工具</a><strong>:实测一个月打字速度提高2倍，编码思路更加顺畅（记住指键相对应的位置，前期慢也要保证正确率）</strong></p>
<h4 id="前端开发者安装谷歌插件："><a href="#前端开发者安装谷歌插件：" class="headerlink" title="前端开发者安装谷歌插件："></a>前端开发者安装谷歌插件：</h4><ul>
<li><p>Page Ruler 桌面尺子 测试浏览器界面的尺寸</p>
</li>
<li><p>WhatRuns 检测该网页应用的技术栈 同步了解主流开发技术</p>
</li>
<li><p>PageSpeed Insights 检测网页性能 </p>
</li>
</ul>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
        <tag>workflow</tag>
      </tags>
  </entry>
  <entry>
    <title> </title>
    <url>/2019-05-08-%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E7%89%88.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>      编程学习践行建议</title>
    <url>/2020-05-04-%E5%AD%A6%E4%B9%A0%E8%B7%B5%E8%A1%8C%E5%BB%BA%E8%AE%AE.html</url>
    <content><![CDATA[<p>编程与写作很类似，首先都是多学多看，多思考，然后就是多动手实践 <a id="more"></a></p>
<p>简单讲：</p>
<p>1.学习模仿+实验实践</p>
<p>学习和模仿大牛和值得学习的朋友，找到适合自己的方式方法，多多动手，不论测试，demo，还是项目，产品</p>
<p>2.清晰架构+完善细节</p>
<p>软件如建筑，首先要有个号的架构设计，它的整体骨架是清晰和稳固的，这点可参考通用的主流框架和架构模型，然后添砖加瓦，模块化，打磨细节，持续迭代，更多可重用。</p>
<p>3.分析复盘+最佳实践</p>
<p>分析已完成的产品项目，还存在哪些缺陷不足，经验收获是什么，不断积累沉淀，逐渐形成最佳实践，指导之后的产品项目。</p>
<p>总之，多学习，多思考，多动手，多复盘</p>
<p>github 是程序员学习和实践的宝库。</p>
<p>以上建议出自知识星球，灰狐。</p>
<h4 id="个人心得（会不断迭代）："><a href="#个人心得（会不断迭代）：" class="headerlink" title="个人心得（会不断迭代）："></a>个人心得（会不断迭代）：</h4><p>1.对于学习某样新的技术，最佳方案是阅读开发者提供的技术文档，而英文作者的便以英文原版的是优先的阅读对象。对于某些高手总结的学习资料，就为参考辅助。</p>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>   </title>
    <url>/2020-04-25-beta%E6%96%87%E7%AB%A0vue%E7%AC%94%E8%AE%B0.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>      js理解</title>
    <url>/2020-05-08-js%E5%8E%9F%E5%9E%8B%E7%90%86%E8%A7%A3.html</url>
    <content><![CDATA[<blockquote>
<p>记录是给自己看得，没打算在大平台上推广，否则会非常有压力，结果就导致没有下笔的可能性</p>
</blockquote>
<h4 id="js的重点"><a href="#js的重点" class="headerlink" title="js的重点"></a>js的重点</h4><p>核心：原型链</p>
<p>图表绘制出来的关系通常是非常有助于学习，不过对于这个东西，没理解清楚就看图会越看越乱。</p>
<p>概念描述：</p>
<ol>
<li>去读懂，js的数据类型。</li>
<li>用函数去窥探</li>
<li>构造函数，原型，原型对象，constructor,- - proto- -与[[prototype]],实例，实例对象这几个描述就是混乱的根源</li>
</ol>
<blockquote>
<p>抽象一下，链条是不具有数据信息，只是一个链接指向的左右</p>
</blockquote>
<p>其实，<strong>构造函数</strong>，是一个函数的名字。 <strong>constructor</strong>是描述构造函数的一个属性，就是一个名字。同理，<strong>原型</strong>也是一个属性，<strong>原型对象</strong>是属性的值是一个对象的意思。</p>
<p>原型链就看 constructor，原型对象，实例（- - proto- -） 。这三个</p>
<blockquote>
<p>要有关系，而且又保证自身不被随意遂改。那肯定要用自身的其他东西去做嫁接。</p>
</blockquote>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>      Markdown公众号代码编辑</title>
    <url>/2020-05-07-markdown%E5%85%AC%E4%BC%97%E5%8F%B7.html</url>
    <content><![CDATA[<h4 id="公众号编辑代码块"><a href="#公众号编辑代码块" class="headerlink" title="公众号编辑代码块"></a>公众号编辑代码块</h4><ol>
<li><p>使用typora编辑文字+代码 。编辑完后，目的复制markdown格式的内容 <code>command+/</code></p>
</li>
<li><p>在谷歌浏览器使用插件markdown here 。然后将1复制的内容，<code>command+v</code>至公众号在线编辑中，一键转换。</p>
<blockquote>
<p>问题来了：微信的pujie编辑器对我使用的这种方法不友好。导致，一键转化直接按保存，预览会导致代码块走样，不会换行。</p>
</blockquote>
</li>
<li><p>利用一个小巧劲，就可以解决：</p>
<ul>
<li>一键转换后 不要保存，也不要预览，不要急着群发。</li>
<li>直接<code>command+a</code>,<code>command+x</code>,<code>command+v</code>:就是剪切全部，再复制一次</li>
<li>做完这步，就可以保存，代码块的样式就不会走样。完美</li>
</ul>
</li>
</ol>
<p>一句话总结：一键转换后，剪切自己，粘贴自己。</p>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>      快速工作</title>
    <url>/2020-05-09-%E5%BF%AB%E9%80%9F%E5%B7%A5%E4%BD%9C.html</url>
    <content><![CDATA[<blockquote>
<p>在开发的过程中，由许多不必要的操作，会打乱工作的集中程度，会影响思考核心问题<br>为此，总结一些技巧性的东西</p>
</blockquote>
<h3 id="由无到有-开始计时"><a href="#由无到有-开始计时" class="headerlink" title="由无到有 开始计时"></a>由无到有 开始计时</h3><blockquote>
<p>由一个全栈的角度去开发一个项目进行 会慢慢迭代后续的所知</p>
</blockquote>
<h4 id="基本操作："><a href="#基本操作：" class="headerlink" title="基本操作："></a>基本操作：</h4><blockquote>
<p>就是工作的姿势</p>
</blockquote>
<p>编辑器 浏览器 终端 显示器 键盘</p>
<h5 id="编辑器：主流为sublimeText3-Vscode"><a href="#编辑器：主流为sublimeText3-Vscode" class="headerlink" title="编辑器：主流为sublimeText3  Vscode"></a>编辑器：主流为sublimeText3  Vscode</h5><h6 id="注重快捷键的使用，还有就是新建文件的默认模版的快速生成"><a href="#注重快捷键的使用，还有就是新建文件的默认模版的快速生成" class="headerlink" title="注重快捷键的使用，还有就是新建文件的默认模版的快速生成"></a>注重快捷键的使用，还有就是新建文件的默认模版的快速生成</h6><h5 id="终端：iterm2-oh-my-zsh"><a href="#终端：iterm2-oh-my-zsh" class="headerlink" title="终端：iterm2 + oh-my-zsh"></a>终端：iterm2 + oh-my-zsh</h5><h6 id="注重快速打开编辑器-，跳转系统文件的目录，cd时候的代码补全，文件的增删"><a href="#注重快速打开编辑器-，跳转系统文件的目录，cd时候的代码补全，文件的增删" class="headerlink" title="注重快速打开编辑器 ，跳转系统文件的目录，cd时候的代码补全，文件的增删"></a>注重快速打开编辑器 ，跳转系统文件的目录，cd时候的代码补全，文件的增删</h6><h5 id="浏览器，显示器，键盘：Sizeup-Alfred"><a href="#浏览器，显示器，键盘：Sizeup-Alfred" class="headerlink" title="浏览器，显示器，键盘：Sizeup  Alfred"></a>浏览器，显示器，键盘：Sizeup  Alfred</h5><h6 id="注重快速切换眼前看到的操作界面，和阅读舒服，目的增加开发的条理性"><a href="#注重快速切换眼前看到的操作界面，和阅读舒服，目的增加开发的条理性" class="headerlink" title="注重快速切换眼前看到的操作界面，和阅读舒服，目的增加开发的条理性"></a>注重快速切换眼前看到的操作界面，和阅读舒服，目的增加开发的条理性</h6><p>想起最近的一个纪录片，那个主角认为，在取舍之间，要舍弃一些繁枝末节，目的要让整个大局，是往前走。想想也是，对于编程来说，在没达到一定水准的时候，要让项目跑起来为首要的目标。</p>
<h4 id="工具的使用："><a href="#工具的使用：" class="headerlink" title="工具的使用："></a>工具的使用：</h4><p>工具的定义就是，辅助的。是提高效率的，是帮助你去解决某样问题的。</p>
<p>所以，工具的好坏，是由是否对自己的工作有帮助，解决问题的效率所决定。千万不要，为用工具而用工具。</p>
<h4 id="开始："><a href="#开始：" class="headerlink" title="开始："></a>开始：</h4><blockquote>
<p>针对自己而言的开始</p>
</blockquote>
<p>对于一个项目，由零开始，到开发者手上。沟通，跟负责想法的人。跟同事沟通，目的都是要知道，这个项目到底是舍，是干什么的？但是这里往往是个大问题，很多因素，和工作投入程度，效率，通常就在这里遇到了很大的麻烦。也是，自己深感痛恶的地方。</p>
<h5 id="页面的构成"><a href="#页面的构成" class="headerlink" title="页面的构成"></a>页面的构成</h5><p>ps切图，页面的主体框架，样式的制作。这是立业之基本。而一些，框架，最终的目的，是帮助我们更好的开发，也就是集多层面的东西（项目制作中的多个环节），由于针对性不同，知识不全面，用起来就会不那么愉快。</p>
<p>所以，基于目的去选择，去学习，去开发，是非常重要的一个前提。</p>
<h4 id="资源整理："><a href="#资源整理：" class="headerlink" title="资源整理："></a>资源整理：</h4><p>把编程开发，比喻成煮一道菜。那么，在烹饪的过程，我们需要准备好食材，调味料，锅具，餐具。所以，我们在开发的过程，同样地需要做好开发的 准备：</p>
<ol>
<li>食材：图片资源，文案资源，</li>
</ol>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>egret游戏项目</title>
    <url>/2020-07-08-egret%E6%B8%B8%E6%88%8F%E9%A1%B9%E7%9B%AE%E5%88%86%E6%9E%901.html</url>
    <content><![CDATA[<blockquote>
<p>这里的内容，主要是针对某一中型游戏项目为蓝本，尝试从多方面的角度去分析项目的细节问题。</p>
</blockquote>
<p>应该由哪里开始分析才是最合适的呢？或者说，是否结合web开发的项目去做比较，去总结两者之间的差异性和共同点。那么，就按照这样的思路去展开讨论。</p>
<p>在此，我想引用，《架构整洁之道》中的一段说话，将自己的思维带进这个计算机知识领域。</p>
<blockquote>
<p>我们现在都是用Java,c#,Rudy语言编程程序，并且大量采用面向对象的编程方式。这没错，但是最终产生的代码仍然只是顺序结构，分支结构，循环结构的组合，这方面和20世界60年代的程序是一模一样。 </p>
<p>即是，软件架构规则和其他变量（硬件性能，编程语言）完全无关。</p>
<p>-</p>
</blockquote>
<p>引用这段话的目的是什么？主要是想说明：分析不同项目，都可以从软件架构规则为基础，围绕它去发掘项目的整体全貌。</p>
<p><strong>若果只是，懂得实际项目的代码，分析其每一个部分的具体功能，相信我要花的时间会很多，并非是短期内摸清楚，所以，这里只能结合大体上的知识概念，慢慢地由模糊到清晰，整体上到细节上，遵从这个学习过程，去不断完善知识技能点，最终达到对于任何单一的项目的完全掌握</strong></p>
<p>说是这么简单，但是，该由哪里作为突破口，这里是不太清晰。也就只能，把自己目前的见解，作为分析的起点。</p>
<h5 id="关于项目的运行"><a href="#关于项目的运行" class="headerlink" title="关于项目的运行"></a>关于项目的运行</h5><p>1.程序是怎么跑起来？</p>
<p>从软件开发者的角度看，我们必须抓住，硬件的几个关键部件。<strong>cup，内存，I/O控制芯片</strong>。而跟目前工作中，最为核心的部分是内存。<u>内存的概念这里不讨论，而许多文档对于内存的描叙又有很多不同的描述方式，如主存，运存等等，但必须要理解</u>，内存，这里应该是指寄存器。</p>
<p>但是，这些，跟egret项目分析，似乎又没有一眼看出能有什么关系？是否，描叙显得有些莫名其妙，甚至是多余的呢？对于，程序的运行，这些都是核心，目前还不能用自己的言语，较好的描叙出来。</p>
<p>之于程序的运行，首先提出一个概念，运行环境。是的，程序，我们都可以把它整体上看做,最终被cup识别的机器代码。也可以成为指令集，当然是用高级程序语言通过一系列的转换，编译的过程。</p>
<p>那么，egretH5游戏项目的运行环境是什么呢？而H5，egret,两者身上我们可以发现出什么有价值的知识，方便去认识此类项目。</p>
<p>egret ,是一个游戏引擎，作用是提高游戏开发者的工作效率。</p>
<h5 id="关于项目的通信"><a href="#关于项目的通信" class="headerlink" title="关于项目的通信"></a>关于项目的通信</h5><p><strong>关于项目的性能</strong></p>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>关于情绪的认知</title>
    <url>/2020-09-03-%E5%85%B3%E4%BA%8E%E6%83%85%E7%BB%AA%E7%9A%84%E8%AE%A4%E7%9F%A5.html</url>
    <content><![CDATA[<p><strong>由于公众号不支持长期维护同一篇文章，不便于修改。并且在同一篇文章的基础上，不能够新增内容。所以，这个技术博客要重新用起来，因为，技术的知识总结，迟迟没有更新，导致浪费了地球的资源，深感愧疚。</strong></p>
<h3 id="情绪是何物？"><a href="#情绪是何物？" class="headerlink" title="情绪是何物？"></a>情绪是何物？</h3><p>根据维基百科的解释是：</p>
<blockquote>
<p><strong>情绪</strong>（又称<strong>情感</strong>），是对一系列<a href="https://zh.wikipedia.org/wiki/主觀" target="_blank" rel="noopener">主观</a>认知经验的通称，是多种<a href="https://zh.wikipedia.org/wiki/感覺" target="_blank" rel="noopener">感觉</a>、<a href="https://zh.wikipedia.org/wiki/思想" target="_blank" rel="noopener">思想</a>和<a href="https://zh.wikipedia.org/wiki/行为" target="_blank" rel="noopener">行为</a>综合产生的<a href="https://zh.wikipedia.org/wiki/心理" target="_blank" rel="noopener">心理</a>和<a href="https://zh.wikipedia.org/wiki/生理" target="_blank" rel="noopener">生理</a>状态。最普遍、通俗的情绪有喜、<a href="https://zh.wikipedia.org/wiki/憤怒" target="_blank" rel="noopener">怒</a>、哀、惊、恐、<a href="https://zh.wikipedia.org/wiki/爱" target="_blank" rel="noopener">爱</a>等，也有一些细腻微妙的情绪如<a href="https://zh.wikipedia.org/wiki/嫉妒" target="_blank" rel="noopener">嫉妒</a>、<a href="https://zh.wikipedia.org/w/index.php?title=惭愧&action=edit&redlink=1" target="_blank" rel="noopener">惭愧</a>、<a href="https://zh.wikipedia.org/wiki/羞耻" target="_blank" rel="noopener">羞耻</a>、<a href="https://zh.wikipedia.org/w/index.php?title=自豪&action=edit&redlink=1" target="_blank" rel="noopener">自豪</a>等。情绪常和<a href="https://zh.wikipedia.org/wiki/心情" target="_blank" rel="noopener">心情</a>、<a href="https://zh.wikipedia.org/wiki/性格" target="_blank" rel="noopener">性格</a>、脾气、<a href="https://zh.wikipedia.org/wiki/目的" target="_blank" rel="noopener">目的</a>等因素互相作用，也受到<a href="https://zh.wikipedia.org/wiki/荷尔蒙" target="_blank" rel="noopener">荷尔蒙</a>和<a href="https://zh.wikipedia.org/wiki/神经递质" target="_blank" rel="noopener">神经递质</a>影响。无论正面还是负面的情绪，都会引发人们行动的<a href="https://zh.wikipedia.org/wiki/动机" target="_blank" rel="noopener">动机</a>。尽管一些情绪引发的行为看上去没有经过<a href="https://zh.wikipedia.org/wiki/思考" target="_blank" rel="noopener">思考</a>，但实际上<a href="https://zh.wikipedia.org/wiki/意识" target="_blank" rel="noopener">意识</a>和思考是产生情绪重要的一环。</p>
</blockquote>
<h3 id="如何控制情绪？"><a href="#如何控制情绪？" class="headerlink" title="如何控制情绪？"></a>如何控制情绪？</h3><p>从医学院教授学生的角度分析：</p>
<p>医学院常教给学生用五种方法控制情绪：</p>
<ul>
<li>把可能激发情绪的事情转化为抽象的事物。比如把身体接触看做执行一系列常规操作。</li>
<li>关注正面意义。比如思考一套不成功的治疗能让我们学到什么。</li>
<li>把患者的事情留给患者，不要带进自己的生活。</li>
<li>保持乐观，常开玩笑。</li>
<li>避免不必要的接触。尽量少看、少碰患者。</li>
</ul>
<h3 id="情绪具体可以有哪些？"><a href="#情绪具体可以有哪些？" class="headerlink" title="情绪具体可以有哪些？"></a>情绪具体可以有哪些？</h3><p>2017年，加州大学伯克利分校的研究人员Alan Cowen和Dacher Keltner基于2185部短片，发现了27种情绪：钦佩，崇拜，审美欣赏，娱乐，愤怒，焦虑，敬畏，尴尬，无聊厌倦，镇定，困惑，轻蔑鄙视，渴望，失望厌恶，同情移情，痛苦，进取，兴奋，妒忌，刺激，恐惧，惊栗，内疚，喜悦快乐，怀旧，胜利，骄傲，解脱，浪漫，悲伤，满足，性欲，惊喜</p>
<p>为了生存，人类必须探索环境（好奇）、吐出不小心吃的异物（恶心）、建立社会关系（信任）、避免伤害（恐惧）、繁衍（爱）、战斗（愤怒）、寻求帮助（哭泣）、重复做对自己有利的事（欢乐）。在原始人类的日常生活中，情绪可以让人类自动趋利避害，做出更利于生存的选择。<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-22" target="_blank" rel="noopener">[22]</a> 尽管愤怒看起来没什么好处，但在原始<a href="https://zh.wikipedia.org/wiki/部落" target="_blank" rel="noopener">部落</a>里，可以让一个人被人害怕并建立起威望。<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-Gaulin_6-2" target="_blank" rel="noopener">[2]</a>羞耻和骄傲可以促使一个人维护自己的<a href="https://zh.wikipedia.org/wiki/社會地位" target="_blank" rel="noopener">社会地位</a>。<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-Gaulin_6-2" target="_blank" rel="noopener">[2]</a><a href="https://zh.wikipedia.org/wiki/情绪#cite_note-23" target="_blank" rel="noopener">[23]</a></p>
<p>在社会生活上，情绪帮助我们：<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-24" target="_blank" rel="noopener">[24]</a></p>
<ul>
<li>与其他人交流感情（如婴儿不会说话也能成功交流）。</li>
<li>影响其他人对我们的态度。</li>
<li>表示善意（如不是出于喜悦，只是礼貌性的微笑）。</li>
</ul>
<h3 id="从大脑神经分析情绪："><a href="#从大脑神经分析情绪：" class="headerlink" title="从大脑神经分析情绪："></a>从大脑神经分析情绪：</h3><p>因为，学习认知人类大脑的运转，是非常之有意义的</p>
<p>当代<a href="https://zh.wikipedia.org/wiki/神经心理学" target="_blank" rel="noopener">神经心理学</a>主要着重<a href="https://zh.wikipedia.org/wiki/大脑皮质" target="_blank" rel="noopener">大脑皮质</a>与情绪的关系。Hemispheric-asymmetry hypotheses则推测是因为右脑是专门处理情绪<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-41" target="_blank" rel="noopener">[41]</a>。透过观察出一些病人因为前右脑损伤而无法制造是语言上的<a href="https://zh.wikipedia.org/wiki/韵律_(语言学)" target="_blank" rel="noopener">韵律</a>，而后右脑损伤患者则失去理解语言上的<a href="https://zh.wikipedia.org/wiki/韵律_(语言学)" target="_blank" rel="noopener">韵律</a>的能力<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-42" target="_blank" rel="noopener">[42]</a>。而<a href="https://zh.wikipedia.org/w/index.php?title=Affective_neuroscience&action=edit&redlink=1" target="_blank" rel="noopener">Valence hypothesis</a>则左右脑都负责处理情绪，只是左脑多处理正面情绪、社交功能，而右脑则关于生存方面的情绪。也同时解释为何有些人对压力有不同的反应，因为个体间左右脑不对称情绪处理<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-43" target="_blank" rel="noopener">[43]</a>。而Vertical integration models则透过惧怕制约(fear conditioning)认为<a href="https://zh.wikipedia.org/w/index.php?title=Ventromedial_prefrontal_cortex&action=edit&redlink=1" target="_blank" rel="noopener">vmPFC</a>脑部抑制惧怕感觉，而<a href="https://zh.wikipedia.org/wiki/杏仁核" target="_blank" rel="noopener">杏仁核</a>则整合大脑皮质及皮质下的讯号<a href="https://zh.wikipedia.org/wiki/情绪#cite_note-44" target="_blank" rel="noopener">[44]</a>，<a href="https://zh.wikipedia.org/wiki/海马体" target="_blank" rel="noopener">海马体</a>则负责联系（记忆）惧怕感觉与刺激物。而<a href="https://zh.wikipedia.org/w/index.php?title=Somatic_marker_hypothesis&action=edit&redlink=1" target="_blank" rel="noopener">Somatic marker hypothesis</a>则研究情绪是决策时角色。透过<a href="https://zh.wikipedia.org/w/index.php?title=Iowa_gambling_task&action=edit&redlink=1" target="_blank" rel="noopener">Iowa gambling task</a>发现<a href="https://zh.wikipedia.org/w/index.php?title=Ventromedial_prefrontal_cortex&action=edit&redlink=1" target="_blank" rel="noopener">vmPFC</a>损伤病人比起正常人用更危险的策略（更高风险）</p>
<p>以上的内容，主要是对情绪有个初步的认知，并且用专业人士的方式去控制情绪。多次阅读这篇文章，必定会对你的生活和工作，有很大的帮助。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>    我想说</title>
    <url>/2020-09-06-%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%86%85%E5%AE%B9%E7%94%B1%E6%88%91%E8%AF%9D%E4%BA%8B.html</url>
    <content><![CDATA[<blockquote>
<p>碍于这里是写技术总结的地方，所以没有在此由太多频繁的更新。</p>
</blockquote>
<p>折腾了半天，在思考我应该在这里写下点什么，当要敲下文字的时候，脑海里漂浮着很多想法，但是，没有一个是相对清晰的。时间，已经过了12点半了，明天还是要工作，尤其是定下要晨跑的目标。</p>
<p>记得有次，求职面试，有个同行说看到我的这个技术博客，然后因此而邀约我过去。然后，现场打开我的界面，然后看到的是，任正非的记者采访长文总结。对方，有点不高兴地说，为什么要记录这些东西，这里不是应该你的技术笔记总结么？我当时回答的是，这可能是个人爱好，我会把我喜欢的东西，放在这里，方便自己重复看。至于技术总结，目前为止，写的不多，其实是没有这个习惯，或者说我的技术不太厉害，写出会是错误，误导自己，更甚至会误导阅读的人。</p>
<p>现在想起，写这样的文字，估计也会得到质问的声音。我想，若果太过于局限自己的思维，是很难能够创造出更有意义，对大众有帮助的东西。</p>
<p>踏入编程这个行业，已经有了一段时日了。但是，每当看到，比自己的水平高出一个等次，或者几何级别的差距时候，都会有过感叹。</p>
<p>明显，看这个博客的文章，就能够认证这个差距是怎么产生的。</p>
<p>等待更新……</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>      大脑神经科学系列001</title>
    <url>/2020-09-25%E5%A4%A7%E8%84%91%E7%A5%9E%E7%BB%8F%E8%AE%A4%E7%9F%A5%E7%A7%91%E5%AD%A6%E7%B3%BB%E5%88%97-1.html</url>
    <content><![CDATA[<h1 id="How-Our-Ancient-Brains-Are-Coping-in-the-Age-of-Digital-Distraction"><a href="#How-Our-Ancient-Brains-Are-Coping-in-the-Age-of-Digital-Distraction" class="headerlink" title="How Our Ancient Brains Are Coping in the Age of Digital Distraction"></a>How Our Ancient Brains Are Coping in the Age of Digital Distraction</h1><blockquote>
<p>I am very grateful for this article, so I reprint it for my own convenience. Involving copyright issues, you can notify me and delete it immediately.</p>
</blockquote>
<h2 id="Our-species-invented-the-internet-Can-we-handle-the-consequences"><a href="#Our-species-invented-the-internet-Can-we-handle-the-consequences" class="headerlink" title="Our species invented the internet. Can we handle the consequences?"></a>Our species invented the internet. Can we handle the consequences?</h2><p>By <a href="https://www.discovermagazine.com/author/kenneth-miller" target="_blank" rel="noopener">Kenneth Miller</a>April 20, 2020 9:00 PM<br><img src="https://images.ctfassets.net/cnu0m8re1exe/6NifPAvmW3NaVvG9rAgPc2/6bfab6ee91d61e944355392e27efa098/tamingtech_1.jpeg?w=650&h=433&fit=fill" alt="Technology Crazy Brain - Shutterstock"></p>
<p>(Credit: Pathdoc/Shutterstock)</p>
<h2 id="Newsletter"><a href="#Newsletter" class="headerlink" title="Newsletter"></a>Newsletter</h2><p>Sign up for our email newsletter for the latest science news</p>
<p>Sign up for the NewsletterSIGN UP</p>
<p><em>This story appeared in the May 2020 issue.</em> <a href="https://ssl.drgnetwork.com/ecom/KMB/app/live/subscriptions?org=KMB&publ=DS&key_code=AIF96D1&offerkey=AIF94D0&type=S" target="_blank" rel="noopener"><em>Subscribe to</em> Discover</a> <em>magazine for more stories like this.</em></p>
<hr>
<p>At our very foundation, says cognitive neuroscientist Adam Gazzaley, “humans are information-seeking creatures.” </p>
<p>And that may be the problem.</p>
<p>While the internet and smart devices give us unprecedented access to the data we covet, we seem clueless about coping with the deluge these technologies have unleashed.</p>
<p>According to a recent survey by the Nielsen market-research group, the average American spends nearly four hours a day on computers and mobile devices — and nearly a quarter of that time on social media. While the upsides of all this pixel-gazing are plentiful, the downsides can be scary. In the public arena, online filters generate bubbles that reinforce our preconceptions and amplify our anger. Brandishing tweets like pitchforks, we’re swept into virtual mobs; some of us move on to violence IRL. Our digitally enhanced tribalism upends political norms and sways elections.</p>
<p>On the homefront, the sound of thumbs tapping screens has replaced dinnertime conversation. Professors face classrooms full of Snapchatting zombies. A 2017 study found that on-the-job smartphone time cost companies $15 billion a week in lost productivity. Texting while driving causes more than 300,000 crashes each year. Hundreds of us are hospitalized annually for <em>walking into things</em> while texting. As our devices grow smarter, more efficient and more connected, they often appear to be making us dumber, more distracted and more divided.</p>
<p>A growing body of research suggests that this conundrum arises from a feature etched into our DNA: our unparalleled hunger to know stuff. “This is an ancient drive that leads to all sorts of complexities in how we interact with the world around us,” says Adam Gazzaley, a neuroscientist at the University of California, San Francisco, and co-author of <em>The Distracted Mind: Ancient Brains in a High-Tech World.</em></p>
<p>Our current predicament, Gazzaley and other experts suggest, involves the gap between our vast appetite for information and our limited capacity for attention. To grasp how we wound up here — and, perhaps, to find a way out — it’s crucial to understand how we got our brains.</p>
<p><img src="https://images.ctfassets.net/cnu0m8re1exe/SRWxhGboHJuLd5G59dfsF/e2a2a11616620b91ac2089415d8b3c67/tametech3.jpeg?w=650" alt="Man Phone Car Texting Driving - Shutterstock"></p>
<p>(Credit: Dusan Petkovic/Shutterstock)</p>
<h2 id="The-Computer-in-Our-Heads"><a href="#The-Computer-in-Our-Heads" class="headerlink" title="The Computer in Our Heads"></a>The Computer in Our Heads</h2><p>Neuroscientist Christof Koch of Seattle’s Allen Institute for Brain Science has called the human brain “the most complex object in the known universe.” The computer in our heads contains some 86 billion processing units, known as neurons, woven into a distributed network with hundreds of trillions of connections, or synapses. Over a lifetime, it can store about a billion bits of data: 50,000 times the information in the Library of Congress. It can compose novels and symphonies, figure out how to send spacecraft beyond the solar system, and invent electronic brains whose powers, in some ways, exceed its own. </p>
<p>Yet this wonder’s origins were strikingly humble. About 7 million years ago, hominins — our branch of the primate family tree — began the long transition to walking upright. Bipedalism, or walking on two legs, freed our hands for making and manipulating tools. It also allowed us to walk longer distances, key to our spread beyond Africa’s forests and savannas. “If you look at nonhuman primates, it’s like they have another set of hands down there,” notes Dean Falk, a professor of anthropology at Florida State University and senior scholar at Santa Fe’s School for Advanced Research, who specializes in brain evolution. “When our feet became weight-bearing instruments, that kicked everything off — no pun intended.”</p>
<p>Not that the effects were immediate. More than 3 million years ago, the braincase of <em>Australopithecus afarensis</em>, likely the first fully bipedal hominin, was only slightly larger than a chimpanzee’s. But by the time <em>Homo sapiens</em> emerged at least 300,000 years ago, brain volume had tripled. Our brain-to-body ratio is six times that of other mammals, and the neurons in our cerebral cortex (the brain’s outer layer, responsible for cognition) are more densely packed than those of any other creature on Earth.</p>
<p>In recent years, scientists have identified about two dozen genetic changes that might have helped make our brains not only bigger but incomparably capable. “It’s not just one quantum leap,” says University of Wisconsin-Madison paleoanthropologist John Hawks. “A lot of adaptations are at play, from metabolic regulation to neuron formation to timing of development.” A stretch of gene-regulating DNA called HARE5, for example, differs slightly between chimps and humans; when a team at Duke University introduced both versions into mouse embryos, the ones that got the human type developed brains that were 12 percent larger. Meanwhile, mutations in a gene called NOTCH2 increase our production of neural stem cells and delay their maturation into cortical neurons, which may be part of the reason our brains keep growing far longer than those of other primates. The FOXP2 gene, crucial for verbal communication in many species, diverges by two base pairs in humans and our nearest living ape relatives. Our mutation may explain why we can talk and chimps can’t. </p>
<p>Our brains were also shaped by external forces, which increased the odds of smarter hominins passing on their genes. Experts debate which factors mattered most. Falk, for one, hypothesizes that the loss of grasping feet was crucial: When infants could no longer cling to their mothers, as nonhuman primates do, the need to soothe them from a distance led to the development of language, which revolutionized our neural organization. Other researchers believe that dietary shifts, such as eating meat or cooking food in general, enabled us to get by with a shorter digestive tract, which freed up more energy for a calorie-hogging brain. Still others credit our cerebral evolution to growing social complexity or intensifying environmental challenges.</p>
<p>What’s clear is that our neural hardware took shape under conditions radically different from those it must contend with today. For millennia, we had to be on the alert for dangerous predators, hostile clans, potential sources of food and shelter — and that was about it. As McGill University neuroscientist Daniel J. Levitin put it in his book <em>The Organized Mind</em>: “Our brains evolved to focus on one thing at a time.”</p>
<p>Our digital devices, by design, make that almost impossible.</p>
<h2 id="Tech-vs-Brain"><a href="#Tech-vs-Brain" class="headerlink" title="Tech vs. Brain"></a>Tech vs. Brain</h2><p>The part of the brain that enables us to make elaborate plans and carry them through — the part, arguably, that makes us most human — is the prefrontal cortex. This region is only slightly larger in <em>H. sapiens</em> than in chimps or gorillas, but its connections with other brain regions are more extensive and intricate. Despite this advanced network, our planning ability is far stronger than our ability to remain focused on a given task. </p>
<p>One reason is that, like all animals, we evolved to switch attention instantly when we sense danger: the snapping twig that might signal an approaching predator, the shadow that could indicate an enemy behind a tree. Our goal-directed, or top-down, mental activities stand little chance against these bottom-up forces of novelty and saliency — stimuli that are unexpected, sudden or dramatic, or that evoke memories of important experiences.</p>
<p><img src="https://images.ctfassets.net/cnu0m8re1exe/1lgSh70Di4LDezFk6pe5NV/51f6443c2dbde64a02d20a1fd91868ac/tametech2.jpeg?w=650" alt="People on Phones - Shutterstock"></p>
<p>(Credit: Rawpixel.com/Shutterstock)</p>
<p>“Many technological devices use bottom-up stimuli to draw our attention from our goals, like buzzes and vibrations and flashes of light,” Gazzaley says. Even when they’re in silent mode, moreover, our devices tempt us with the promise of limitless, immediately available information. The data on tap may be newsy (our least-favorite politician’s latest gaffe), factual (our favorite actor’s filmography), social (the number of upvotes our selfie scored) or just plain fun (that video of the aardvark on a bobsled). But all of it stimulates our hardwired eagerness to be in the know.</p>
<p>This urge isn’t entirely unique to us. In higher primates, brain scans show that neural circuitry originally developed for foraging also governs higher-order cognitive behaviors. Even macaque monkeys respond to new information as they do to primitive rewards like fruit or water. When the animal finds a ripe mango in the jungle — or solves a problem in the lab — brain cells in what’s called the dopaminergic system light up, creating a sensation of pleasure. These cells also build durable connections with the brain circuits that helped earn the reward. By triggering positive feelings whenever these circuits are activated, the system promotes learning. </p>
<p>Humans, of course, forage for data more voraciously than any other animal. And, like most foragers, we follow instinctive strategies for optimizing our search. Behavioral ecologists who study animals seeking nourishment have developed various models to predict their likely course of action. One of these, the marginal value theorem (MVT), applies to foragers in areas where food is found in patches, with resource-poor areas in between. The MVT can predict, for example, when a squirrel will quit gathering acorns in one tree and move on to the next, based on a formula assessing the costs and benefits of staying put — the number of nuts acquired per minute versus the time required for travel, and so on. Gazzaley sees the digital landscape as a similar environment, in which the patches are sources of information — a website, a smartphone, an email program. He believes an MVT-like formula may govern our online foraging: Each data patch provides diminishing returns over time as we use up information available there, or as we start to worry that better data might be available elsewhere.</p>
<p>The call of the next data patch may keep us hopping from Facebook to Twitter to Google to YouTube; it can also interfere with the fulfillment of goals — meeting a work deadline, paying attention in class, connecting face-to-face with a loved one. It does this, Gazzaley says, in two basic ways. One is distraction, which he defines as “pieces of goal-irrelevant information that we either encounter in our external surroundings or generate internally within our own minds.” We try to ignore our phone’s pings and buzzes (or our fear of missing out on the data they signify), only to find our focus undermined by the effort.</p>
<p>The other goal-killer is interruption: We take a break from top-down activity to feed our information munchies. The common term for this is multitasking, which sounds as if we’re accomplishing several things at once — working on the quarterly report, answering client emails, staying on top of the politician’s gaffe count, taking a peek at that aardvark. In truth, it means we’re doing nothing well.</p>
<p>“There’s a conflict between what we want to do and what we’re actually capable of doing,” Gazzaley says. “With each switch [of our attention from one task to another], there’s a cost.” For example, one study found that it took 25 minutes, on average, for IT workers to resume a project after being interrupted. Besides putting a major crimp in efficiency, such juggling can lead to high levels of stress, frustration and fatigue. </p>
<p>It also wreaks havoc on working memory, the function that allows us to hold a few key bits of data in our heads just long enough to apply them to a task. Multiple studies have shown that “media multitasking” (the scientific term for toggling between digital data sources) overloads this mental compartment, making us less focused and more prone to mistakes. In 2012, for instance, Canadian researchers found that multitasking on a laptop hindered classroom learning not only for the user but for students sitting nearby. Heavy media multitasking has been associated with diminished cognitive control, higher levels of impulsivity and reduced volume in the anterior cingulate cortex, a brain region linked with error detection and emotional regulation.</p>
<h2 id="Us-vs-Them"><a href="#Us-vs-Them" class="headerlink" title="Us vs. Them"></a>Us vs. Them</h2><p>Emotional regulation is central to another of tech’s disruptive effects on our ancient brains: exacerbation of tribal tendencies. Our distant ancestors lived in small nomadic bands, the basic social unit for most of human history. “Groups that were competing for resources and space didn’t always do so peacefully,” says paleoanthropologist Hawks. “We’re a product of that process.”</p>
<p>These days, many analysts see tribalism asserting itself in the resurgence of nationalist movements worldwide and the sharp rise in political polarization in the U.S., with both trends playing out prominently online. A study published in the <em>American Journal of Political Science</em> in 2015 found that party affiliation had become a basic component of identity for Republicans and Democrats. Social media, which spurs us to publicly declare our passions and convictions, helps fuel what the authors call “the gradual encroachment of party preference into nonpolitical and hitherto personal domains.”</p>
<p>And we’re hardwired to excel at telling “us” from “them.” When we interact with in-group members, a release of dopamine gives us a rush of pleasure, while out-group members may trigger a negative response. Getting online “likes” only intensifies the experience.</p>
<p><img src="https://images.ctfassets.net/cnu0m8re1exe/4pbt6JPoTSJl7qdKUvB5Fa/16ff59397282f6d5cc4f4397a87b00bb/tame_tech_4.jpeg?w=650" alt="Facebook Likes Social Media Tech Addiction - Shutterstock"></p>
<p>(Credit: Monster Ztudio/Shutterstock)</p>
<p>Our retreat into tribal mode may also be a reaction to the data explosion that the web has ignited. In 2018, in the journal <em>Perspectives on Psychological Science</em>, psychologist Thomas T. Hills reviewed an array of earlier studies on the proliferation of information. He found that the upsurge in digitally mediated extremism and polarization may be a response to cognitive overload. Amid the onslaught, he suggested, we rely on ingrained biases to decide which data deserve our attention (see “Tribal Tech” sidebar). The result: herd thinking, echo chambers and conspiracy theories. “Finding information that’s consistent with what I already believe makes me a better member of my in-group,” Hills says. “I can go to my allies and say, ‘Look, here’s the evidence that we’re right!’ ”</p>
<p>In some cases, a bias in favor of one’s own tribe can spur a desire to see another tribe suffer. “Not all out-groups are equivalent,” says Harvard University psychologist Mina Cikara, who studies the factors that make one group take pleasure in another’s pain, a response known as schadenfreude. “Americans don’t react to Canadians, say, the way they do to people from Iran.” The factors driving this type of ill will, she explains, are “a sense that the group is against us, and that they’re capable of carrying out a threat.” For example, when Red Sox and Yankees fans watch their rival team fail to score, even against a third team, they show heightened activity in the ventral striatum, a brain region associated with reward response.</p>
<p>It’s surely no coincidence that during the 2016 presidential election, Russian hackers focused largely on convincing various groups of Americans that another group was out to get them. But foreign agents are hardly the top promoters of tribalism online. As anyone who’s spent time on social media knows, there’s plenty of homegrown schadenfreude on the web.</p>
<h2 id="Present-vs-Future"><a href="#Present-vs-Future" class="headerlink" title="Present vs. Future"></a>Present vs. Future</h2><p>Don’t expect Silicon Valley honchos to redesign their profitable products to be less exploitative of our old-school neural wiring. “The genie is out of the bottle,” says Gazzaley. “Putting it back is not a realistic plan.” </p>
<p>We can, however, evolve. The surest way to combat digital tribalism, Hills suggests, is to be wary of bias, embrace critical thinking and encourage others to do the same. Gazzaley, for his part, offers a variety of strategies for making our brains less vulnerable to distraction and interruption, and for modifying our behavior to tune out tech’s temptations (see “Taming Our Tech” sidebar). “By building healthier habits, we can change our relationship with technology for the better,” he says. “We’re a very adaptive species. I think we’ll be OK.”  </p>
<hr>
<hr>
<h2 id="Tribal-Tech"><a href="#Tribal-Tech" class="headerlink" title="Tribal Tech"></a>Tribal Tech</h2><p><img src="https://images.ctfassets.net/cnu0m8re1exe/23mCnIf4HOLz563Pv8yhJg/caa4dfd05ef752f9a8e9c790a5cbf1f2/tame_tech_5.jpeg?w=650" alt="Man on Phone - Shutterstock"></p>
<p>(Credit: Sam Wordley/Shutterstock)</p>
<p>Faced with tech’s cognitive overload, humans determine what’s worthy of attention by relying on biases shaped by evolution, says Thomas T. Hills, a professor of psychology at England’s University of Warwick. Those tendencies may have helped our ancestors survive, but they’re not always in our best interests today, Hills says. He identifies four types of “cognitive selection” that fuel digital tribalism.</p>
<p><strong>Selection for belief-consistent information.</strong> Also called confirmation bias, it inclines us to prefer data that align with what we already think. In prehistoric times, this might have led people to see a rainstorm as proof of a shaman’s power over the weather — an interpretation that strengthened social cohesion, even if it was wrong. Today, confirmation bias can lead to more consequential errors, such as seeing a cold snap as proof that climate change is a hoax.</p>
<p><strong>Selection for negative information.</strong> This tendency, also known as negativity bias, primed our ancestors’ brains to prioritize alertness for predators over other, less threatening types of attention. Today, it can lead us to privilege bad news over good — for example, by taking a single horrific crime by an out-group member more seriously than data showing that the group as a whole is law-abiding.</p>
<p><strong>Selection for predictive information.</strong> Pattern-recognition bias, as it’s often called, helps us discern order in chaos. Noticing that large prey animals tended to arrive in the savanna after the first summer rains would have given early humans an evolutionary advantage. Today, however, a predilection for patterns can lead us to detect conspiracies where none exist.</p>
<p><strong>Selection for social information.</strong> This “herd bias” prompts us, in uncertain environments, to follow the crowd. Back in the day, “if everyone else in your tribe was running toward the river, they probably had a good reason,” says Hills. But if everyone in your Reddit community says a famous politician is running a child-sex ring from the basement of a pizzeria, well, it would be wise to visit a fact-checking website before making up your mind.</p>
<hr>
<hr>
<h2 id="Taming-Our-Tech"><a href="#Taming-Our-Tech" class="headerlink" title="Taming Our Tech"></a>Taming Our Tech</h2><p><img src="https://images.ctfassets.net/cnu0m8re1exe/1bS8TBFs9OlV9hzaYXzjf1/4d0027cef5aa3b72eea92930fb8ab45a/tame_tech_6.jpeg?w=650" alt="Family in Nature Free - Shutterstock"></p>
<p>(Credit: Evgeny Atamanenko/Shutterstock)</p>
<p>Neuroscientist Adam Gazzaley suggests two basic approaches to protect our brains from tech’s downsides: enhancing how our neural circuitry functions, and changing our everyday behavior. While some tactics can be mastered by anyone, others remain experimental.</p>
<h2 id="Resisting-the-Siren-Call"><a href="#Resisting-the-Siren-Call" class="headerlink" title="Resisting the Siren Call"></a>Resisting the Siren Call</h2><p><em>These methods aim to improve our brains’ ability to ignore distractions and recover from interruptions.</em></p>
<ul>
<li><p><strong>Education.</strong> Researchers are developing a variety of classroom curricula designed to strengthen cognitive control — the capacity to stay on task, even under challenging conditions.</p>
</li>
<li><p><strong>Neurofeedback.</strong> Introduced in the 1960s, this technique teaches practitioners to control their brainwaves with the help of a brain-computer interface. Used with some success to treat disorders such as ADHD and anxiety, a few small studies have linked the method to improvements in attention and working memory.</p>
</li>
<li><p><strong>Nature.</strong> A growing body of research suggests that getting outside can help reset weary brains.</p>
</li>
<li><p><strong>Cognitive exercises.</strong> Clinical trials indicate that some mental exercises, including specially designed video games, can improve focus and resistance to distraction. Evidence for the efficacy of commercially available “brain games,” however, remains sketchy.</p>
</li>
<li><p><strong>Meditation.</strong> Multiple studies suggest that meditation can enhance attention, memory and processing speed.</p>
</li>
<li><p><strong>Physical exercise.</strong> A large body of research shows that aerobic activity bolsters the brain’s agility and resilience.</p>
</li>
</ul>
<h2 id="Everyday-Evolution"><a href="#Everyday-Evolution" class="headerlink" title="Everyday Evolution"></a>Everyday Evolution</h2><p><em>These evidence-based behavior modifications lessen the temptations of tech by limiting its easy appeal and accessibility.</em></p>
<ul>
<li><p><strong>While driving,</strong> talk to a passenger, listen to an audiobook or enjoy music (all less distracting than phone conversations or texting). Set expectations with friends, family and colleagues that you will not use your phone while on the road, except in true emergencies.</p>
</li>
<li><p><strong>While working,</strong> limit yourself to a single screen, and put away all nonessential work materials on your desk. Decide which programs or apps you need to complete a task, and close all others. Avoid using tabs; when you’re finished with a website, shut it down. Shut down email, too, and check electronic correspondence and social media only at designated times. A variety of apps can block access to sites to keep you from cheating. Silence your smartphone; if you still feel the pull, move it to another room. Take frequent breaks to reboot your brain; go for a walk or just stare into space and daydream.</p>
</li>
<li><p><strong>While hanging out with friends or family,</strong> ask everyone present to turn off their phones. If that’s too much, try using “tech breaks,” allowing each person to check their phone briefly every 15 minutes. Make certain areas device-free zones — especially the dinner table and the bedroom. But watching TV or playing video games together, Gazzaley says, can actually build closeness.</p>
</li>
</ul>
<p><em>Adapted from</em> The Distracted Mind: Ancient Brains in a High-Tech World<em>, by Adam Gazzaley and Larry D. Rosen. The MIT Press, 2016.</em></p>
]]></content>
      <categories>
        <category>brain</category>
      </categories>
      <tags>
        <tag>brain</tag>
      </tags>
  </entry>
  <entry>
    <title>        睡眠不足，多梦的原因分析和解决方式</title>
    <url>/2020-11-08%E7%9D%A1%E7%9C%A0%E8%B4%A8%E9%87%8F%E7%B3%BB%E5%88%97.html</url>
    <content><![CDATA[<h5 id="睡眠不足，多梦的原因分析和解决方式"><a href="#睡眠不足，多梦的原因分析和解决方式" class="headerlink" title="睡眠不足，多梦的原因分析和解决方式"></a>睡眠不足，多梦的原因分析和解决方式</h5><p>原因：身体缺乏钙元素，和维生素B1</p>
<blockquote>
<p>由于钙对人体生理功能起着重要作用，<strong>长期缺钙还会导致免疫力低下、发育不良、四肢无力、精神疲乏、烦躁不安等，甚至引起惊厥、心脏骤停、呼吸衰竭等严重疾病。</strong></p>
</blockquote>
<p><strong>深色蔬菜的含钙量仅次于牛奶，比如甘蓝、荠菜、苋菜、小白菜、油菜、茴香、芹菜等。深色菜中，有很多同时是维生素K含量较高的食物，比如西蓝花、甘蓝。维生素K能激活骨钙素，促进钙沉积在骨骼中。</strong></p>
<p><strong>多摄入大豆及其制品，如豆腐、豆浆、素鸡等。</strong>大豆富含蛋白质、不饱和氨基酸、维生素和异黄酮等，对骨骼颇有益处。因为，骨骼中22%的成分是蛋白质，为钙沉积提供了骨架。当然，豆制品里的含钙量本身就很丰富哦。</p>
<p><strong>适当吃些虾皮、虾米、海带、紫菜等海产品，</strong>它们含有丰富的钙。但由于它们含盐量较高，也要控制住摄入量哦。此外，<strong>黑木耳、芝麻酱也是美味的高钙食物</strong>，平时也留意多吃些。</p>
<p>钾能够维持酸碱平衡，防止钙流失。所以，咱们也要多吃高钾食物，比如香蕉、橙子、小米等。</p>
<p>除了钾，还应适当补充镁含量较高的食物，如紫菜、全麦食品、杏仁、花生等。镁能帮助转运钙，把细胞外的钙转运到细胞内，把血钙搬入骨骼。</p>
<h4 id="蔬菜"><a href="#蔬菜" class="headerlink" title="蔬菜"></a>蔬菜</h4><h5 id="甘蓝、荠菜、苋菜、小白菜、油菜、茴香、芹菜"><a href="#甘蓝、荠菜、苋菜、小白菜、油菜、茴香、芹菜" class="headerlink" title="甘蓝、荠菜、苋菜、小白菜、油菜、茴香、芹菜"></a><strong>甘蓝、荠菜、苋菜、小白菜、油菜、茴香、芹菜</strong></h5><h4 id="海产品"><a href="#海产品" class="headerlink" title="海产品"></a>海产品</h4><p><strong>虾皮、虾米、海带、紫菜</strong></p>
<h4 id="高钾食物"><a href="#高钾食物" class="headerlink" title="高钾食物"></a>高钾食物</h4><p><strong>香蕉、橙子、小米</strong></p>
<h4 id="高镁食物"><a href="#高镁食物" class="headerlink" title="高镁食物"></a>高镁食物</h4><p><strong>紫菜、全麦食品、杏仁、花生</strong></p>
<blockquote>
<p>吃了就能吸收吗？不是的，要想法子让它能有效转化</p>
</blockquote>
<p>即使我们摄入了足够的钙，并不能保证就不缺钙了。因为，<strong>钙的吸收受到很多因素的影响</strong>。比如，钙的吸收与年龄有关。老人对钙的吸收能力减弱，很容易缺钙。</p>
<p>人体对不同食物中的钙吸收率千差万别。比如，牛奶中的钙，大概有30%能被我们吸收。一些草酸含量较高的蔬菜，如菠菜，钙吸收率更低，大约只有5%。另外，食物中的植酸水平，主要是各种谷物、豆类、坚果里的植酸，也会影响我们吸收钙。高脂或高盐饮食使钙在肠道内沉积，不利于吸收；若蛋白质摄入不足，也会影响肠道对钙的吸收。</p>
<p>维生素D和维生素K能促进钙的吸收。当含量不足时，钙的吸收也会受到影响。维生素D和维生素K都是脂溶性的，所以长期低脂饮食也会影响钙的吸收。另外，合成维生素D需要晒足够的太阳。但很多人户外时间较少，不能合成足量的维生素D，也会出现缺钙，甚至引起佝偻病。<strong>所以，如果补钙的效果不好，要看看是不是缺乏维D了。</strong></p>
<p>钙流失，是另一个缺钙的重要因素。比如，血糖不稳定时，会促进骨骼中钙分解，造成钙流失。另外，一些药物也会导致钙流失，常常被我们忽视。比如，长期服用某些激素类药物，会加速钙的流失，引起骨质疏松。</p>
<p><strong>我们若能从食物中摄取足够的钙，同时经常户外活动，应该不会缺钙，一般情况下并不需要额外补钙</strong>.</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>    大脑神经认知科学系列002</title>
    <url>/2020-09-27%E5%A4%A7%E8%84%91%E7%A5%9E%E7%BB%8F%E8%AE%A4%E7%9F%A5%E7%A7%91%E5%AD%A6%E7%B3%BB%E5%88%97-2.html</url>
    <content><![CDATA[<blockquote>
<p>本想继续写半小时的1000字文章，但是，有太多事要写，或者说，不知道如何选择写什么。昨晚看到一篇非常有意义关于大脑神经认知科学的文章，这也是自己在今后会特别注重的一个知识领域。所以，便多用了一点时间，对它进行翻译。</p>
</blockquote>
<h4 id="我们人类发明了互联网，我们能够承担其带来的后果吗？"><a href="#我们人类发明了互联网，我们能够承担其带来的后果吗？" class="headerlink" title="我们人类发明了互联网，我们能够承担其带来的后果吗？"></a>我们人类发明了互联网，我们能够承担其带来的后果吗？</h4><p>认知神经学家亚当 · 加扎利说，在我们的基础上，“人类是寻求信息的生物。”这可能就是问题所在。虽然互联网和智能设备给了我们前所未有的途径来获取我们渴望的数据，但我们似乎对这些技术带来的洪水束手无策。</p>
<p>尼尔森市场研究集团(Nielsen market-research group)最近的一项调查显示，美国人平均每天花在电脑和移动设备上的时间接近4个小时，其中将近四分之一的时间花在社交媒体上。虽然所有这些像素注视的好处很多，但坏处可能是可怕的。在公共场合，网络过滤器产生的泡沫强化了我们的先入之见，放大了我们的愤怒。</p>
<p>有些时候，拇指敲击屏幕的声音已经取代了晚餐时间的谈话。教授们面对的教室里全是用 app 聊天的僵尸。2017年的一项研究发现，在职的智能手机时间每周给公司造成的生产力损失高达150亿美元。开车时发短信导致每年超过30万起交通事故。每年有数百人因为在发短信的时候撞到东西而住院。随着我们的设备变得越来越智能，越来越有效率，越来越多的连接，它们似乎经常让我们变得更笨，更分心，更分裂。</p>
<p>越来越多的研究表明，这个难题源于刻在我们 DNA 中的一个特征: 我们无与伦比的对知识的渴望。加州大学旧金山分校的神经科学家亚当 · 加扎利说: “这是一种古老的驱动力，它导致了我们与周围世界互动的各种复杂性。”他也是《分心的思想: 高科技世界中的古代大脑》一书的合著者。</p>
<p>他与其他专家认为，我们目前的困境涉及我们对信息的巨大需求和我们有限的注意力之间的差距。为了弄清楚我们是如何走到这一步的ーー或许还要找到一条出路ーー理解我们是如何获得大脑的至关重要。</p>
<h4 id="大脑类比计算机的cup"><a href="#大脑类比计算机的cup" class="headerlink" title="大脑类比计算机的cup"></a>大脑类比计算机的cup</h4><p>西雅图艾伦脑科学研究所的神经科学家克里斯托夫 · 科赫称人类大脑是“已知宇宙中最复杂的物体”我们大脑中的计算机包含大约860亿个处理单元，被称为神经元，它们编织成一个由数百万亿个连接或突触组成的分布式网络。在一生中，它可以存储大约10亿比特的数据: 是国会图书馆信息量的5万倍。它可以创作小说和交响曲，可以计算出如何将宇宙飞船送到太阳系之外，还可以发明电子大脑，这些电子大脑的能力在某些方面超过了它自己。</p>
<p>然而，这个奇迹的起源却极其卑微。大约700万年前，人类——我们灵长类家族的分支——开始了向直立行走的漫长过渡。两足行走，也就是用两条腿走路，使我们的双手能够自由地制造和操作工具。它还使我们能够走更远的路，这是我们走出非洲森林和热带稀树草原的关键。佛罗里达州立大学(Florida State University)人类学教授、圣达菲高级研究学院(Santa Fe’s School for Advanced Research)专门研究大脑进化的高级学者迪安 · 福尔克(Dean Falk)指出: “如果你观察非人类的灵长类动物，就好像它们的下面还有一双手。”。“当我们的脚变成了负重的工具时，一切都被踢开了ーー没有双关语的意思。”</p>
<p>这种影响并不是立竿见影的。300多万年前，可能是第一个完全两足人类的南方古猿阿法种的脑壳，只比黑猩猩的大一点点。但是直到智人至少在30万年前出现的时候，脑容量已经翻了三倍。我们的大脑与身体的比例是其他哺乳动物的六倍，而且我们大脑皮层(大脑的外层，负责认知)的神经元比地球上任何其他生物的神经元都密集。</p>
<p>近年来，科学家已经发现了二十多种基因变化，这些变化可能帮助我们的大脑不仅变得更大，而且具有无可比拟的能力。威斯康星大学麦迪逊分校的古人类学家 John Hawks 说: “这不仅仅是一次质的飞跃。“从新陈代谢调节到神经元形成，再到发育时间，许多适应性因素都在发挥作用。”例如，一段名为 HARE5的基因调控 DNA 片段在黑猩猩和人类之间略有不同; 当杜克大学(Duke University)的一个研究小组将这两种 DNA 片段同时植入小鼠胚胎时，那些获得人类类型的胚胎发育出的大脑要大12% 。与此同时，NOTCH2基因的突变增加了神经干细胞的产量，并延迟了它们向皮层神经元的成熟，这可能是我们的大脑比其他灵长类动物长得更长的部分原因。在许多物种中，FOXP2基因对语言交流至关重要，但在人类和我们最近的类人猿亲戚中，FOXP2基因因两个碱基对而分化。我们的基因突变可以解释为什么我们能说话而黑猩猩不能。</p>
<p>我们的大脑也受到外部力量的影响，这增加了更聪明的人类遗传基因的几率。专家们争论哪些因素最重要。福尔克假设失去抓握的脚是至关重要的: 当婴儿不再像非人类灵长类动物那样依附在母亲身上时，从远处抚慰他们的需要导致了语言的发展，这彻底改变了我们的神经组织。其他研究人员认为，饮食的变化，如吃肉或烹饪食物，使我们能够以较短的消化道，这释放了更多的能量，传输给我们的大脑。还有一些人认为我们大脑的进化是由于社会复杂性的增加或环境挑战的加剧。</p>
<p>可以肯定的是，我们的神经硬件是在与今天完全不同的条件下形成的。几千年来，我们不得不时刻警惕危险的掠食者、敌对的氏族、潜在的食物来源和庇护所ーー仅此而已。正如麦吉尔大学的神经系统科学家 Daniel j. Levitin 在他的书《有组织的大脑》中所说: “我们的大脑进化到一次只关注一件事情。”</p>
<p>我们的数字设备，从设计上来说，使得这几乎不可能。</p>
<h4 id="科技vs大脑"><a href="#科技vs大脑" class="headerlink" title="科技vs大脑"></a>科技vs大脑</h4><p>大脑中能够让我们制定详细计划并贯彻执行的那部分—- 可以说是让我们成为最具人性的那部分—- 是脑前额叶外皮。这个区域在智人中只比黑猩猩或大猩猩稍大一点，但是它与其他脑区的联系更广泛和复杂。尽管有这个先进的网络，我们的计划能力远远强于我们专注于一个特定任务的能力。</p>
<p>其中一个原因是，像所有动物一样，我们进化到当我们感觉到危险时立即转移注意力: 可能预示着一个接近的捕食者的折断的树枝，树后的阴影可能预示着一个敌人。我们以目标为导向，或者自上而下的思维活动，在这些自下而上的新奇和显著的力量面前几乎没有机会，这些刺激是意想不到的、突然的或戏剧性的，或者唤起了重要经历的记忆。</p>
<p>“许多技术设备使用自下而上的刺激来吸引我们的注意力，从我们的目标，如嗡嗡声、振动和闪光，” Gazzaley 说。此外，即使当它们处于静默模式时，我们的设备也以无限的、立即可用的信息吸引着我们。可以随时获取的数据可能是新闻(我们最不喜欢的政客的最新失态)、事实(我们最喜欢的演员的从影记录)、社交(我们自拍得到的赞成票数) ，或者仅仅是纯粹的乐趣(有舵雪橇上的土豚视频)。但是所有这些都激发了我们对知识的渴望。</p>
<p>这种冲动并不是我们所特有的。在高等灵长类动物中，脑部扫描显示，最初为觅食而开发的神经回路也控制着高级认知行为。即使是猕猴对新信息的反应也和它们对水果或水等原始奖励的反应一样。当动物在丛林中发现一个成熟的芒果，或者在实验室中解决了一个问题时，被称为多巴胺能系统的脑细胞就会活跃起来，产生愉悦感。这些细胞还与帮助获得奖励的大脑回路建立持久的联系。当这些回路被激活时，通过触发积极的感觉，这个系统促进了学习。</p>
<p>当然，人类比其他任何动物都更贪婪地搜寻数据。而且，像大多数觅食者一样，我们遵循优化搜索的本能策略。研究寻求营养的动物的行为生态学家已经开发出各种模型来预测它们可能的行为过程。其中之一，边际价值定理(MVT) ，适用于在食物被发现的地区的觅食者，与资源贫乏的地区之间。例如，根据一个评估呆在原地的成本和收益的公式，MVT 可以预测松鼠何时会停止在一棵树上采集橡子，转而采集下一棵树上的橡子ーー每分钟采集的坚果数量与旅行所需的时间等等。Gazzaley 认为数字领域也是一个类似的环境，其中的补丁是信息的来源ーー网站、智能手机、电子邮件程序。他相信一个类似 mvt 的公式可能会控制我们的在线搜索: 每个数据补丁提供的报酬递减都是随着时间的推移，当我们用尽那里的可用信息，或者当我们开始担心更好的数据可能在其他地方获得。</p>
<p>下一个数据补丁的召唤可能会让我们从 Facebook 跳到 Twitter、谷歌(Google)再到 YouTube; 它还会干扰目标的实现——赶上工作截止日期、在课堂上集中注意力、与心爱的人面对面交流。它以两种基本的方式做到了这一点，加扎利说。一种是分心，他将其定义为“我们要么在外部环境中遇到，要么在自己头脑中产生的与目标无关的信息片段”我们试图忽略手机的信号和嗡嗡声(或者我们害怕错过它们所代表的数据) ，结果却发现我们的注意力被这种努力削弱了。</p>
<p>另一个目标杀手是干扰: 我们从自上而下的活动中休息一下，以满足我们的信息饥渴。这种情况通常被称为多任务处理，听起来好像我们在同时完成几件事情ーー编写季度报告、回复客户电子邮件、密切关注娱乐明星的失态行为、偷看影视剧。事实上，这意味着我们一事无成。</p>
<p>“在我们想做的和我们实际能够做的之间存在着冲突，”加扎利说。“(我们的注意力)每从一个任务转移到另一个任务上，都有代价。”例如，一项研究发现，IT 工作者在被打断后恢复一个项目平均需要25分钟。除了使效率大打折扣之外，这样的杂耍还会导致高度的压力、挫折和疲劳。</p>
<p>它还会对工作记忆造成严重破坏，而工作记忆是一种让我们在大脑中保存一些关键数据的功能，这些数据只够我们将它们应用到一项任务中。多项研究表明，“媒体多任务处理”(用于在数字数据源之间切换的科学术语)过载了这个思维空间，使我们不那么专注，更容易出错。例如，2012年，加拿大研究人员发现，笔记本电脑的多任务处理不仅阻碍了用户的课堂学习，也阻碍了坐在附近的学生的课堂学习。重度多任务处理与认知控制能力下降、前扣带皮层冲动性增强和容量减少有关，前扣带皮层是大脑中与错误检测和情绪调节相关的区域。</p>
<h4 id="我们vs他们"><a href="#我们vs他们" class="headerlink" title="我们vs他们"></a>我们vs他们</h4><p>情绪调节是科技对我们古老大脑的另一个破坏性影响的核心: 部落倾向的加剧。我们的远古祖先生活在小型的游牧群体中，这是人类历史上大部分时期的基本社会单位。古人类学家霍克斯说: “争夺资源和空间的族群并不总是那么和平。”。“我们就是这个过程的产物。”</p>
<p>如今，许多分析人士认为，部落主义在世界范围内民族主义运动的复苏和美国政治两极分化的急剧加剧中得到了体现，这两种趋势在网络上都有突出表现。2015年发表在《美国政治科学杂志》(American Journal of Political Science)上的一项研究发现，党派归属已经成为共和党人和民主党人身份的一个基本组成部分。社交媒体促使我们公开表达自己的激情和信念，它助长了作者所说的“党派偏好对非政治领域和迄今为止的个人领域的逐渐侵蚀”</p>
<p>我们天生擅长区分“我们”和“他们”当我们与团队内的成员互动时，多巴胺的释放会给我们带来一阵快感，而团队外的成员可能会引发消极的反应。在网上获得“赞”只会加强这种体验。</p>
<p>我们退回到部落模式也可能是对网络点燃的数据爆炸的反应。2018年，心理学家托马斯 · 希尔斯在《心理科学展望》杂志上回顾了一系列关于信息增殖的早期研究。他发现，数字媒介极端主义和极化的高涨可能是认知超负荷的反应。他认为，在这场冲击中，我们依靠根深蒂固的偏见来决定哪些数据值得我们关注。其结果是: 群体思维、回音室和阴谋论。希尔斯说: “找到与我已经相信的信息一致的信息，会让我成为内部团队中更好的成员。”。“我可以告诉我的盟友，‘看，这就是我们是正确的证据! ”’</p>
<p>在某些情况下，对自己部落的偏爱会激发看到另一个部落受苦的欲望。哈佛大学心理学家 Mina Cikara 说: “并不是所有的群体都是一样的。”她研究的是让一个群体从另一个群体的痛苦中获得快乐的因素，这种反应被称为幸灾乐祸。“比如说，美国人对加拿大人的反应，不会像对待伊朗人那样。”她解释说，造成这种恶意的因素是“这个组织在反对我们，他们有能力实施威胁。”例如，当湖人队和火箭队的球迷看到他们的对手球队没有得分，即使是对第三支球队，他们的腹侧纹状体活动增强，这是一个与奖励反应相关的大脑区域。</p>
<h4 id="现在vs未来"><a href="#现在vs未来" class="headerlink" title="现在vs未来"></a>现在vs未来</h4><p>别指望硅谷的老板们会重新设计他们的盈利产品，以减少对我们老式神经线路的剥削。“妖怪已经从瓶子里跑出来了，”加扎利说。“把它放回去不是一个现实的计划。”</p>
<p>然而，我们可以进化。希尔斯认为，对抗数字部落主义最可靠的方法就是警惕偏见，拥抱批判性思维，并鼓励其他人也这样做。对于 Gazzaley 来说，他提供了各种各样的策略，让我们的大脑不那么容易受到干扰和干扰，并且改变我们的行为以抵制科技的诱惑(参见“驯服我们的科技”侧栏)。“通过养成更健康的习惯，我们可以改善我们与科技的关系，”他说。“我们是非常适应环境的物种。我想我们会没事的。”</p>
<p>面对科技的认知超载，人类通过依赖进化形成的偏见来决定什么是值得关注的，英国华威大学的心理学教授 Thomas t. Hills 说。这些倾向可能帮助我们的祖先生存下来，但他们并不总是我们今天的最大利益，希尔斯说。他指出了四种助长数字部落主义的“认知选择”。</p>
<p><strong>选择信念一致信息</strong></p>
<p>也被称为确认偏见，它使我们倾向于选择与我们已有想法一致的数据。在史前时期，这可能会让人们把暴风雨视为萨满巫师对天气的控制力的证据ーー这种解释加强了社会凝聚力，即使它是错误的。今天，确认偏差可能会导致更多的后果性错误，比如将寒流视为气候变化是一场骗局的证据。</p>
<p><strong>选择负面信息</strong></p>
<p>这种倾向，也被称为消极偏见，促使我们的祖先的大脑优先警惕掠食者，而不是其他类型，威胁性较小的注意力。今天，它可能会让我们把坏消息看得比好消息更重要ーー例如，比起显示整个团体遵纪守法的数据，我们更认真地对待一个团体外成员犯下的一起骇人听闻的罪行。</p>
<p><strong>选择预测信息</strong></p>
<p>人们常说的模式识别偏见，帮助我们在混乱中辨别秩序。注意到大型猎物往往在第一场夏季雨后到达热带草原，可能会给早期人类带来进化上的优势。然而，今天，对模式的偏爱可以让我们发现根本不存在的阴谋。</p>
<p><strong>社交信息的选择</strong></p>
<p>这种“群体偏见”促使我们在不确定的环境中随大流。回到过去，“如果你部落里的其他人都跑向河流，他们可能有一个很好的理由，”希尔斯说。但是，如果你所在的 Reddit 社区的每个人都说一位著名的政治家正在一家披萨店的地下室经营一个儿童性交易集团，那么，在你下定决心之前，最好先访问一下事实核查网站。</p>
<h4 id="驯服我们的技术"><a href="#驯服我们的技术" class="headerlink" title="驯服我们的技术"></a>驯服我们的技术</h4><p>神经科学家亚当 · 加扎利提出了两种基本的方法来保护我们的大脑免受科技带来的负面影响: 增强我们的神经回路功能，以及改变我们的日常行为。虽然有些策略可以被任何人掌握，但其他的仍然处于试验阶段。</p>
<h5 id="抵制诱惑"><a href="#抵制诱惑" class="headerlink" title="抵制诱惑"></a>抵制诱惑</h5><p>这些方法旨在提高我们的大脑忽略干扰和从干扰中恢复的能力。</p>
<ul>
<li>教育。研究人员正在开发各种各样的课堂课程，旨在加强认知控制能力——即使在具有挑战性的条件下也能坚持完成任务的能力。</li>
<li>神经反馈。这项技术于20世纪60年代引入，教导从业者在脑机接口的帮助下控制脑电波。一些小型研究已经将这种方法与注意力和工作记忆的改善联系起来，并成功地用于治疗诸如多动症和焦虑症等疾病。</li>
<li>越来越多的研究表明，户外活动可以帮助恢复疲惫的大脑。</li>
<li>认知练习。临床试验表明，一些心理练习，包括专门设计的电子游戏，可以提高注意力和抵抗分心。然而，商业化的“脑力游戏”的有效性证据仍然很粗略。</li>
<li>多项研究表明，冥想可以提高注意力、记忆力和处理速度。</li>
<li>大量的研究表明，有氧运动可以提高大脑的灵活性和适应能力。</li>
</ul>
<h5 id="日常进化"><a href="#日常进化" class="headerlink" title="日常进化"></a>日常进化</h5><p>这些以证据为基础的行为调整通过限制科技的吸引力和可获得性来减少科技的诱惑。</p>
<ul>
<li>在开车的时候，和乘客聊天，听有声读物或者听音乐(这些都比打电话或者发短信少一些干扰)。与朋友、家人和同事设定一个期望: 除非真的有紧急情况，否则在路上不要使用手机。</li>
<li>在工作的时候，把你自己限制在一个屏幕上，把所有不重要的工作材料放在你的桌子上。决定完成一项任务需要哪些程序或应用程序，并关闭所有其他程序。避免使用标签页; 当你完成一个网站，关闭它。关闭电子邮件，只在指定时间检查电子信件和社交媒体。各种各样的应用程序可以阻止访问网站，防止你作弊。静音你的智能手机; 如果你仍然感觉到拉力，把它移到另一个房间。经常休息以重新启动你的大脑; 去散散步或者只是盯着太空做白日梦。</li>
<li>和朋友或家人出去玩的时候，要求在场的每个人都关掉手机。如果太多了，可以尝试使用“技术休息” ，允许每个人每15分钟查看一下手机。确定某些区域为无设备区ーー特别是餐桌和卧室。但是，加扎利说，一起看电视或玩电子游戏，实际上可以建立亲密关系。</li>
</ul>
<p><strong>以上内容翻译改编自亚当 · 加扎利和拉里 · d · 罗森合著的《心烦意乱: 高科技世界中的古代大脑》</strong></p>
]]></content>
      <categories>
        <category>brain</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>    计算机理论知识概念001</title>
    <url>/2020-09-28%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86%E7%B3%BB%E5%88%97-1.html</url>
    <content><![CDATA[<blockquote>
<p>内容来源于维基，相对有参考的价值，越是基础，越不能有半点差池。</p>
<p>计算机存储器，存储结构，虚拟内存，寄存器，CPU缓存</p>
</blockquote>
<h4 id="计算机存储器"><a href="#计算机存储器" class="headerlink" title="计算机存储器"></a>计算机存储器</h4><p><strong>计算机存储器</strong>（英语：Computer memory）是一种利用<a href="https://zh.m.wikipedia.org/wiki/半導體" target="_blank" rel="noopener">半导体</a>、磁性介质等技术制成的存储<a href="https://zh.m.wikipedia.org/wiki/資料" target="_blank" rel="noopener">资料</a>的电子设备。其<a href="https://zh.m.wikipedia.org/wiki/電子電路" target="_blank" rel="noopener">电子电路</a>中的资料以<a href="https://zh.m.wikipedia.org/wiki/二进制" target="_blank" rel="noopener">二进制</a>方式存储，不同存储器产品中基本单元的名称也不一样。</p>
<p>计算机存储器可分为内部存储器（又称内存或主存）和外部存储器，其中内存是CPU能直接寻址的储存空间，由半导体器件制成。内存的特点是访问速率快。我们平常使用的程序，如Windows操作系统、打字软件、游戏软件等，一般都是安装在硬盘等外部记忆体上的，但必须把它们调入内存中运行，才能真正使用其功能，我们平时输入一段文字，或玩一个游戏，其实都是在内存中进行的，数据产生后不断地由内存向外部记忆体进行读写。就好比在一个书房里，存放书籍的书架和书柜相当于电脑的外部记忆体，而我们工作的办公桌就是内存。通常我们把要永久保存的、大量的数据储存在外部记忆体上，而把一些临时的或少量的数据和程序放在内存上，当然内存的好坏会直接影响电脑的运行速度</p>
<h5 id="容量"><a href="#容量" class="headerlink" title="容量"></a>容量</h5><p>存储器以二进制计算容量，基本单位是<a href="https://zh.m.wikipedia.org/wiki/Byte" target="_blank" rel="noopener">Byte</a>：</p>
<ul>
<li>1 Kilobyte(KB) =1,024B=210B</li>
<li>1 Megabyte(MB)=1,024KiB=220B=1,048,576B</li>
<li>1 Gigabyte(GB)=1,024MiB=230B=1,073,741,824B</li>
<li>1 Terabyte(TB)=1,024GiB=240B=1,099,511,627,776B</li>
<li>1 Petabyte(PB)=1,024TiB=250B=1,125,899,906,842,624B</li>
<li>1 Exabyte(EB) =1,024PiB=260B=1,152,921,504,606,846,976B</li>
<li>1 Zettabyte(ZB)=1,024EiB=270B</li>
<li>1 Yottabyte(YB)=1,024ZiB=280B</li>
</ul>
<p>根据<a href="https://zh.m.wikipedia.org/wiki/电气电子工程师协会" target="_blank" rel="noopener">电气电子工程师协会</a>（IEEE 1541）和<a href="https://zh.m.wikipedia.org/wiki/歐洲聯盟" target="_blank" rel="noopener">欧洲联盟</a>(HD 60027-2:2003-03)的标准，<a href="https://zh.m.wikipedia.org/wiki/二进制乘数词头" target="_blank" rel="noopener">二进制乘数词头</a>的缩写为“Ki”、“Mi”、“Gi”，以避免与<a href="https://zh.m.wikipedia.org/wiki/国际单位制" target="_blank" rel="noopener">SI Unit</a>国际单位制混淆。但二进制乘数词头没有广泛被制造业和个人采用，标示为4GB的内存实际上已经是4GiB，但标示为4.7GB的<a href="https://zh.m.wikipedia.org/wiki/DVD" target="_blank" rel="noopener">DVD</a>实际上是4.37GiB。</p>
<p>对于32位的操作系统，最多可使用232个地址，即是4GiB。<a href="https://zh.m.wikipedia.org/wiki/物理地址扩展" target="_blank" rel="noopener">物理地址扩展</a>可以让处理器在32位操作系统访问超过4GiB存储器，发展64位处理器则是根本的解决方法，但<a href="https://zh.m.wikipedia.org/wiki/作業系統" target="_blank" rel="noopener">操作系统</a>、<a href="https://zh.m.wikipedia.org/wiki/驅動程式" target="_blank" rel="noopener">驱动程序</a>和<a href="https://zh.m.wikipedia.org/wiki/應用程式" target="_blank" rel="noopener">应用程序</a>都会有<a href="https://zh.m.wikipedia.org/wiki/相容性" target="_blank" rel="noopener">兼容性</a>问题。</p>
<h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><p>计算机存储器可以根据存储能力与电源的关系可以分为以下两类：</p>
<h6 id="易失性存储器"><a href="#易失性存储器" class="headerlink" title="易失性存储器"></a>易失性存储器</h6><p>易失性存储器（Volatile memory）是指当电源供应中断后，存储器所存储的资料便会消失的存储器。主要有以下的类型：</p>
<p><a href="https://zh.m.wikipedia.org/wiki/隨機存取記憶體" target="_blank" rel="noopener">随机存取存储器</a></p>
<ul>
<li><a href="https://zh.m.wikipedia.org/wiki/動態隨機存取記憶體" target="_blank" rel="noopener">动态随机存取存储器</a>，英文缩写写作DRAM，一般每个单元由一个晶体管和一个电容组成（后者在集成电路上可以用两个晶体管模拟）。特点是单元占用资源和空间小，速度比SRAM慢，需要刷新。一般计算机<a href="https://zh.m.wikipedia.org/wiki/主内存" target="_blank" rel="noopener">主内存</a>即由DRAM组成。在PC上，DRAM以内存条的方式出现，DRAM颗粒多为4位或8位位宽，而载有多个颗粒的单根内存条的位宽为64位。</li>
<li><a href="https://zh.m.wikipedia.org/wiki/静态随机存取存储器" target="_blank" rel="noopener">静态随机存取存储器</a>，英文缩写写作SRAM，一般每个单元由6个晶体管组成，但近来也出现由8个晶体管构成的SRAM单元。特点是速度快，但单元占用资源比DRAM多。一般<a href="https://zh.m.wikipedia.org/wiki/CPU" target="_blank" rel="noopener">CPU</a>的<a href="https://zh.m.wikipedia.org/wiki/CPU缓存" target="_blank" rel="noopener">CPU缓存</a>即由SRAM构成。</li>
</ul>
<h6 id="非易失性存储器"><a href="#非易失性存储器" class="headerlink" title="非易失性存储器"></a>非易失性存储器</h6><p>非易失性存储器（Non-volatile memory）是指即使电源供应中断，存储器所存储的资料并不会消失，重新供电后，就能够读取存储器中的资料。 主要种类如下：</p>
<ul>
<li><p>只读存储器</p>
<p>（ROM）</p>
<ul>
<li><a href="https://zh.m.wikipedia.org/wiki/可規化式唯讀記憶體" target="_blank" rel="noopener">可编程式只读存储器</a>（PROM）</li>
<li><a href="https://zh.m.wikipedia.org/wiki/可擦除可規劃式唯讀記憶體" target="_blank" rel="noopener">可擦除可规划式只读存储器</a>（EPROM）</li>
<li><a href="https://zh.m.wikipedia.org/wiki/電子抹除式可複寫唯讀記憶體" target="_blank" rel="noopener">电子抹除式可复写只读存储器</a>（EEPROM）</li>
<li><a href="https://zh.m.wikipedia.org/wiki/快閃記憶體" target="_blank" rel="noopener">Flash</a> ROM</li>
</ul>
</li>
<li><p>磁存储</p>
<ul>
<li><a href="https://zh.m.wikipedia.org/wiki/硬碟" target="_blank" rel="noopener">硬盘</a></li>
<li><a href="https://zh.m.wikipedia.org/wiki/軟碟" target="_blank" rel="noopener">软盘</a></li>
<li><a href="https://zh.m.wikipedia.org/wiki/磁帶" target="_blank" rel="noopener">磁带</a></li>
</ul>
</li>
<li><p><a href="https://zh.m.wikipedia.org/wiki/3D_XPoint" target="_blank" rel="noopener">3D XPoint</a></p>
</li>
<li><p><a href="https://zh.m.wikipedia.org/wiki/固态硬盘" target="_blank" rel="noopener">固态硬盘</a></p>
</li>
<li><p>光存储</p>
<ul>
<li><a href="https://zh.m.wikipedia.org/wiki/光碟" target="_blank" rel="noopener">光盘</a></li>
</ul>
</li>
</ul>
<h4 id="存储层次"><a href="#存储层次" class="headerlink" title="存储层次"></a>存储层次</h4><p><strong>存储层次</strong>是在<a href="https://zh.m.wikipedia.org/wiki/電腦架構" target="_blank" rel="noopener">计算机体系结构</a>下<a href="https://zh.m.wikipedia.org/wiki/儲存系統" target="_blank" rel="noopener">存储系统</a>层次结构的排列顺序。每一层于下一层相比都拥有较高的<a href="https://zh.m.wikipedia.org/wiki/速度" target="_blank" rel="noopener">速度</a>和较低<a href="https://zh.m.wikipedia.org/w/index.php?title=延遲性&action=edit&redlink=1" target="_blank" rel="noopener">延迟性</a>，以及较小的容量（也有少量例外，如AMD早期的<a href="https://zh.m.wikipedia.org/wiki/Duron" target="_blank" rel="noopener">Duron</a> CPU）。大部分现今的<a href="https://zh.m.wikipedia.org/wiki/中央處理器" target="_blank" rel="noopener">中央处理器</a>的速度都非常的快。大部分程序工作量需要存储器访问。由于<a href="https://zh.m.wikipedia.org/wiki/快取" target="_blank" rel="noopener">高速缓存</a>的效率和存储器传输位于层次结构中的不同等级，所以实际上会限制处理的速度，导致中央处理器花费大量的时间等待存储器I/O完成工作。</p>
<p>大部分电脑中的存储层次如下四层：</p>
<p>1) <a href="https://zh.m.wikipedia.org/wiki/暫存器" target="_blank" rel="noopener">寄存器</a>–可能是最快的访问。在32位处理器，每个寄存器就是32位。<a href="https://zh.m.wikipedia.org/wiki/X86" target="_blank" rel="noopener">x86</a>处理器共有16个寄存器。</p>
<p>2) <a href="https://zh.m.wikipedia.org/wiki/快取" target="_blank" rel="noopener">高速缓存</a>（L1-L3: <a href="https://zh.m.wikipedia.org/wiki/靜態隨機存取記憶體" target="_blank" rel="noopener">SRAM</a>）</p>
<p>3) <a href="https://zh.m.wikipedia.org/wiki/隨機存取記憶體" target="_blank" rel="noopener">主存</a>（<a href="https://zh.m.wikipedia.org/wiki/DRAM" target="_blank" rel="noopener">DRAM</a>）–访问需要几百个周期，可以大到数十GB。</p>
<p>4) <a href="https://zh.m.wikipedia.org/wiki/磁碟儲存" target="_blank" rel="noopener">磁盘存储</a>–需要成千上百个周期，容量非常大。</p>
<h4 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h4><p><strong>虚拟内存</strong>是计算机系统内存管理的一种技术。它使得应用程序认为它拥有连续可用的内存（一个连续完整的地址空间），而实际上，它通常是被分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上，在需要时进行数据交换。与没有使用虚拟内存技术的系统相比，使用这种技术的系统使得大型程序的编写变得更容易，对真正的<a href="https://zh.m.wikipedia.org/wiki/物理内存" target="_blank" rel="noopener">物理内存</a>（例如<a href="https://zh.m.wikipedia.org/wiki/隨機存取記憶體" target="_blank" rel="noopener">RAM</a>）的使用也更有效率。</p>
<p>注意：<strong>虚拟内存</strong>不只是“用磁盘空间来扩展物理内存”的意思——这只是扩充<a href="https://zh.m.wikipedia.org/wiki/記憶體階層" target="_blank" rel="noopener">内存级别</a>以使其包含<a href="https://zh.m.wikipedia.org/wiki/硬盘驱动器" target="_blank" rel="noopener">硬盘驱动器</a>而已。把内存扩展到磁盘只是使用虚拟内存技术的一个结果，它的作用也可以通过<a href="https://zh.m.wikipedia.org/wiki/覆盖_(编程)" target="_blank" rel="noopener">覆盖</a>或者把处于不活动状态的程序以及它们的数据全部交换到磁盘上等方式来实现。对虚拟内存的定义是基于对<a href="https://zh.m.wikipedia.org/wiki/地址空间" target="_blank" rel="noopener">地址空间</a>的重定义的，即把地址空间定义为“连续的虚拟内存地址”，以借此“欺骗”程序，使它们以为自己正在使用一大块的“连续”地址。</p>
<p>现代所有用于一般应用的<a href="https://zh.m.wikipedia.org/wiki/操作系统" target="_blank" rel="noopener">操作系统</a>都对普通的应用程序使用虚拟内存技术，例如文字处理软件，电子制表软件，多媒体播放器等等。老一些的操作系统，如<a href="https://zh.m.wikipedia.org/wiki/DOS" target="_blank" rel="noopener">DOS</a>和1980年代的<a href="https://zh.m.wikipedia.org/wiki/Windows" target="_blank" rel="noopener">Windows</a>，或者那些1960年代的<a href="https://zh.m.wikipedia.org/wiki/大型机" target="_blank" rel="noopener">大型机</a>，一般都没有虚拟内存的功能——但是<a href="https://zh.m.wikipedia.org/w/index.php?title=Atlas_(電腦)&action=edit&redlink=1" target="_blank" rel="noopener">Atlas</a>（英语：<a href="https://en.wikipedia.org/wiki/Atlas_(computer)" target="_blank" rel="noopener">Atlas_(computer)</a>），<a href="https://zh.m.wikipedia.org/w/index.php?title=B5000&action=edit&redlink=1" target="_blank" rel="noopener">B5000</a>（英语：<a href="https://en.wikipedia.org/wiki/Burroughs_large_systems#B5000" target="_blank" rel="noopener">Burroughs_large_systems#B5000</a>）和<a href="https://zh.m.wikipedia.org/wiki/苹果" target="_blank" rel="noopener">苹果公司</a>的<a href="https://zh.m.wikipedia.org/wiki/Apple_Lisa" target="_blank" rel="noopener">Lisa</a>都是很值得注意的例外。<a href="https://zh.m.wikipedia.org/wiki/虚拟内存#cite_note-1" target="_blank" rel="noopener">[1]</a></p>
<p>那些需要快速访问或者反应时间非常一致的<a href="https://zh.m.wikipedia.org/wiki/嵌入式" target="_blank" rel="noopener">嵌入式</a>系统，和其他的具有特殊应用的计算机系统，可能会为了避免让<a href="https://zh.m.wikipedia.org/wiki/确定性算法" target="_blank" rel="noopener">运算结果的可预测性</a>降低，而选择不使用虚拟内存。</p>
<h4 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h4><p><strong>寄存器</strong>（Register）是<a href="https://zh.m.wikipedia.org/wiki/中央處理器" target="_blank" rel="noopener">中央处理器</a>内用来暂存指令、<a href="https://zh.m.wikipedia.org/wiki/數據" target="_blank" rel="noopener">数据</a>和<a href="https://zh.m.wikipedia.org/wiki/内存地址" target="_blank" rel="noopener">地址</a>的<a href="https://zh.m.wikipedia.org/wiki/電腦記憶體" target="_blank" rel="noopener">电脑存储器</a>。寄存器的存贮容量有限，读写速度非常快。在<a href="https://zh.m.wikipedia.org/wiki/電腦架構" target="_blank" rel="noopener">计算机体系结构</a>里，寄存器存储在已知时间点所作计算的中间结果，通过快速地访问数据来加速<a href="https://zh.m.wikipedia.org/wiki/電腦程式" target="_blank" rel="noopener">计算机程序</a>的运行。</p>
<p>寄存器位于<a href="https://zh.m.wikipedia.org/wiki/記憶體階層" target="_blank" rel="noopener">存储器层次结构</a>的最顶端，也是CPU可以读写的最快的存储器。寄存器通常都是以他们可以保存的<a href="https://zh.m.wikipedia.org/wiki/位元" target="_blank" rel="noopener">比特</a>数量来计量，举例来说，一个<a href="https://zh.m.wikipedia.org/wiki/8位元" target="_blank" rel="noopener">8位</a>寄存器或<a href="https://zh.m.wikipedia.org/wiki/32位元" target="_blank" rel="noopener">32位</a>寄存器。在中央处理器中，包含寄存器的部件有<a href="https://zh.m.wikipedia.org/wiki/指令寄存器" target="_blank" rel="noopener">指令寄存器</a>（IR）、<a href="https://zh.m.wikipedia.org/wiki/程序計數器" target="_blank" rel="noopener">程序计数器</a>和<a href="https://zh.m.wikipedia.org/wiki/累加器" target="_blank" rel="noopener">累加器</a>。寄存器现在都以<a href="https://zh.m.wikipedia.org/w/index.php?title=暫存器陣列&action=edit&redlink=1" target="_blank" rel="noopener">寄存器数组</a>的方式来实现，但是他们也可能使用单独的<a href="https://zh.m.wikipedia.org/wiki/正反器" target="_blank" rel="noopener">触发器</a>、高速的<a href="https://zh.m.wikipedia.org/w/index.php?title=核心記憶體&action=edit&redlink=1" target="_blank" rel="noopener">核心存储器</a>、<a href="https://zh.m.wikipedia.org/w/index.php?title=薄膜記憶體&action=edit&redlink=1" target="_blank" rel="noopener">薄膜存储器</a>以及在数种机器上的其他方式来实现出来。</p>
<p><strong>寄存器</strong>也可以指代由一个<a href="https://zh.m.wikipedia.org/wiki/指令" target="_blank" rel="noopener">指令</a>之输出或输入可以直接索引到的寄存器组群，这些寄存器的更确切的名称为“架构寄存器”。例如，<a href="https://zh.m.wikipedia.org/wiki/X86" target="_blank" rel="noopener">x86</a>指令集定义八个32位寄存器的集合，但一个实现<a href="https://zh.m.wikipedia.org/wiki/X86" target="_blank" rel="noopener">x86</a><a href="https://zh.m.wikipedia.org/wiki/指令集" target="_blank" rel="noopener">指令集</a>的<a href="https://zh.m.wikipedia.org/wiki/CPU" target="_blank" rel="noopener">CPU</a>内部可能会有八个以上的寄存器。</p>
<h6 id="寄存器的种类"><a href="#寄存器的种类" class="headerlink" title="寄存器的种类"></a>寄存器的种类</h6><p>资料寄存器</p>
<p>用来存储<a href="https://zh.m.wikipedia.org/wiki/整數" target="_blank" rel="noopener">整数</a>数字（参考以下的浮点寄存器）。在某些简单（或旧）的CPU，特别的资料寄存器是用于数学计算的<a href="https://zh.m.wikipedia.org/wiki/累加器" target="_blank" rel="noopener">累加器</a>。</p>
<p>地址寄存器</p>
<p>持有存储器地址，以及用来访问<a href="https://zh.m.wikipedia.org/wiki/記憶體" target="_blank" rel="noopener">存储器</a>。在某些简单/旧的CPU里，特别的地址寄存器是<a href="https://zh.m.wikipedia.org/w/index.php?title=索引暫存器&action=edit&redlink=1" target="_blank" rel="noopener">索引寄存器</a>（可能出现一个或多个）。</p>
<p>通用目的寄存器</p>
<p>（<strong>GPR</strong>s）- 可以保存资料或地址两者，也就是说他们是结合 资料/地址 寄存器的功用。</p>
<p>浮点寄存器</p>
<p>（<strong>FPR</strong>s）- 用来存储<a href="https://zh.m.wikipedia.org/wiki/浮点" target="_blank" rel="noopener">浮点</a>数字。</p>
<p>常量寄存器</p>
<p>用来持有只读的数值（例如0、1、圆周率等等）。由于“其中的值不可更改”这一特殊性质，这些寄存器未必会有实体的硬件电路相对应，例如将从零常数寄存器读的操作实现为接通目标寄存器的<a href="https://zh.m.wikipedia.org/wiki/下拉电阻" target="_blank" rel="noopener">下拉电阻</a>。</p>
<p>一般而言，即使真正在硬件中放置常数寄存器也未必会是出于体系结构理论上的考虑，而很可能是由<a href="https://zh.m.wikipedia.org/wiki/硬件描述语言" target="_blank" rel="noopener">硬件描述语言</a>为了简化操作而自动生成的电路。</p>
<p>向量寄存器</p>
<p>用来存储由向量处理器运行<a href="https://zh.m.wikipedia.org/wiki/SIMD" target="_blank" rel="noopener">SIMD</a>指令所得到的资料。</p>
<p>特殊目的寄存器</p>
<p>存储CPU内部的资料，像是<a href="https://zh.m.wikipedia.org/wiki/程式計數器" target="_blank" rel="noopener">程序计数器</a>（或称为<a href="https://zh.m.wikipedia.org/wiki/指令指针" target="_blank" rel="noopener">指令指针</a>），<a href="https://zh.m.wikipedia.org/wiki/堆栈" target="_blank" rel="noopener">堆栈寄存器</a>，以及<a href="https://zh.m.wikipedia.org/w/index.php?title=狀態暫存器&action=edit&redlink=1" target="_blank" rel="noopener">状态寄存器</a>（或称微处理器状态字组）。</p>
<ul>
<li><p><strong><a href="https://zh.m.wikipedia.org/wiki/指令寄存器" target="_blank" rel="noopener">指令寄存器</a></strong> - 存储现在正在被运行的指令</p>
</li>
<li><p><strong><a href="https://zh.m.wikipedia.org/w/index.php?title=变址寄存器&action=edit&redlink=1" target="_blank" rel="noopener">变址寄存器</a>（英语：<a href="https://en.wikipedia.org/wiki/Index_register" target="_blank" rel="noopener">Index_register</a>）</strong> - 是在程序运行时用来更改操作数地址之用。</p>
</li>
<li><p>在某些架构下，<strong>模式指示寄存器</strong>（也称为“机器指示寄存器”）存储和设置跟处理器自己有关的资料。由于他们的意图目的是附加到特定处理器的设计，因此他们并不被预期会成微处理器世代之间保留的标准。</p>
</li>
<li><p>有关从</p>
<p>随机存取存储器</p>
<p>提取信息的寄存器与CPU（位于不同芯片的存储寄存器集合）</p>
<ul>
<li><a href="https://zh.m.wikipedia.org/w/index.php?title=記憶體緩衝寄存器&action=edit&redlink=1" target="_blank" rel="noopener">存储器缓冲寄存器</a>（英语：<a href="https://en.wikipedia.org/wiki/Memory_buffer_register" target="_blank" rel="noopener">Memory buffer register</a>）</li>
<li><a href="https://zh.m.wikipedia.org/wiki/記憶體資料寄存器" target="_blank" rel="noopener">存储器资料寄存器</a></li>
<li><a href="https://zh.m.wikipedia.org/w/index.php?title=記憶體位址寄存器&action=edit&redlink=1" target="_blank" rel="noopener">存储器地址寄存器</a>（英语：<a href="https://en.wikipedia.org/wiki/Memory_address_register" target="_blank" rel="noopener">Memory address register</a>）</li>
<li><a href="https://zh.m.wikipedia.org/w/index.php?title=記憶體型態範圍寄存器&action=edit&redlink=1" target="_blank" rel="noopener">存储器类型范围寄存器</a>（英语：<a href="https://en.wikipedia.org/wiki/Memory_Type_Range_Registers" target="_blank" rel="noopener">Memory Type Range Registers</a>）</li>
</ul>
</li>
</ul>
<blockquote>
<p>cup缓存是个复杂的概率，以下暂时列出基本描述，是不完整的，读者要注意一下。</p>
</blockquote>
<h4 id="cup缓存"><a href="#cup缓存" class="headerlink" title="cup缓存"></a>cup缓存</h4><p>在<a href="https://zh.m.wikipedia.org/wiki/计算机" target="_blank" rel="noopener">计算机</a>系统中，<strong>CPU高速缓存</strong>（英语：CPU Cache，在本文中简称缓存）是用于减少<a href="https://zh.m.wikipedia.org/wiki/中央处理器" target="_blank" rel="noopener">处理器</a>访问内存所需平均时间的部件。在金字塔式<a href="https://zh.m.wikipedia.org/w/index.php?title=存储体系&action=edit&redlink=1" target="_blank" rel="noopener">存储体系</a>中它位于自顶向下的第二层，仅次于<a href="https://zh.m.wikipedia.org/wiki/寄存器" target="_blank" rel="noopener">CPU寄存器</a>。其容量远小于<a href="https://zh.m.wikipedia.org/wiki/内存" target="_blank" rel="noopener">内存</a>，但速度却可以接近处理器的频率。</p>
<p>当处理器发出内存访问请求时，会先查看缓存内是否有请求数据。如果存在（命中），则不经访问内存直接返回该数据；如果不存在（失效），则要先把内存中的相应数据载入缓存，再将其返回处理器。</p>
<p>缓存之所以有效，主要是因为程序运行时对内存的访问呈现局部性（Locality）特征。这种局部性既包括空间局部性（Spatial Locality），也包括时间局部性（Temporal Locality）。有效利用这种局部性，缓存可以达到极高的命中率。</p>
<p>在处理器看来，缓存是一个透明部件。因此，程序员通常无法直接干预对缓存的操作。但是，确实可以根据缓存的特点对程序代码实施特定优化，从而更好地利用缓存。</p>
<h5 id="基本描叙"><a href="#基本描叙" class="headerlink" title="基本描叙"></a>基本描叙</h5><h6 id="缓存的存储结构"><a href="#缓存的存储结构" class="headerlink" title="缓存的存储结构"></a>缓存的存储结构</h6><p>结构上，一个直接映射（Direct Mapped）缓存由若干缓存块（Cache Block，或Cache Line）构成。每个缓存块存储具有连续内存地址的若干个存储单元。在32位计算机上这通常是一个双<a href="https://zh.m.wikipedia.org/wiki/字_(计算机)" target="_blank" rel="noopener">字</a>（dword），即四个字节。因此，每个双字具有唯一的块内偏移量。</p>
<p>每个缓存块有一个索引（Index），它一般是内存地址的低端部分，但不含块内偏移和字节偏移所占的最低若干位。一个数据总量为4KB、缓存块大小为16B的直接映射缓存一共有256个缓存块，其索引范围为0到255。使用一个简单的移位函数，就可以求得任意内存地址对应的缓存块的索引。由于这是一种多对一映射，必须在存储一段数据的同时标示出这些数据在内存中的确切位置。所以每个缓存块都配有一个标签（Tag）。拼接标签值和此缓存块的索引，即可求得缓存块的内存地址。如果再加上块内偏移，就能得出任意一块数据的对应内存地址。</p>
<p>因此，在缓存大小不变的情况下，缓存块大小和缓存块总数成反比关系。下图中所示的缓存块来自一个数据总量为4KB、每个缓存块大小为16B的直接映射缓存，其标签长度为20bits。</p>
<p><a href="https://zh.m.wikipedia.org/wiki/File:CPU缓存_00缓存段结构.png" target="_blank" rel="noopener"><img src="https://upload.wikimedia.org/wikipedia/commons/b/bf/CPU%E7%BC%93%E5%AD%98_00%E7%BC%93%E5%AD%98%E6%AE%B5%E7%BB%93%E6%9E%84.png" alt="一个大小为16字节的缓存块。从属于一个数据总量为4KB的直接映射缓存。"></a></p>
<p>此外，每个缓存块还可对应若干标志位，包括有效位（valid bit）、脏位（dirty bit）、使用位（use bit）等。这些位在保证正确性、排除冲突、优化性能等方面起着重要作用。</p>
<h6 id="运作流程"><a href="#运作流程" class="headerlink" title="运作流程"></a>运作流程</h6><p>下面简要描述一个假想的直接映射缓存的工作流程。这个缓存共有四个缓存块，每个块16字节，即4个字，因此共有64字节存储空间。使用写回（Write back）策略以保证数据一致性。</p>
<p><a href="https://zh.m.wikipedia.org/wiki/File:CPU缓存_01_运作流程.png" target="_blank" rel="noopener"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/CPU%E7%BC%93%E5%AD%98_01_%E8%BF%90%E4%BD%9C%E6%B5%81%E7%A8%8B.png/300px-CPU%E7%BC%93%E5%AD%98_01_%E8%BF%90%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="img"></a></p>
<p>CPU缓存的运作流程（注意内存左侧给出的地址是字地址而不是字节地址）</p>
<p>系统启动时，缓存内没有任何数据。之后，数据逐渐被载入或换出缓存。假设在此后某一时间点，缓存和内存布局如右图所示。此时，若处理器执行数据读取指令，控制逻辑依如下流程：</p>
<ol>
<li>(将地址由高至低划分为四个部分：标签、索引、块内偏移、字节偏移。其中块内偏移和字节偏移各占两位，后者在以下操作中不使用。)</li>
<li>用索引定位到相应的缓存块。</li>
<li>用标签尝试匹配该缓存块的对应标签值。如果存在这样的匹配，称为命中（Hit）；否则称为未命中（Miss）。</li>
<li>如命中，用块内偏移将已定位缓存块内的特定数据段取出，送回处理器。</li>
<li>如未命中，先用此块地址（标签+索引）从内存读取数据并载入到当前缓存块，再用块内偏移将位于此块内的特定数据单元取出，送回处理器。这里要注意的是，（1）读入的数据会冲掉之前的内容。为保证数据一致性，必须先将数据块内的现有内容写回内存。（2）尽管处理器请求的只是一个字，缓存仍必须在读取的时候把整个数据块都填充满。（3）缓存的读取是按缓存块大小为边界对齐的。对于大小为16字节的缓存块，任何因为0x0000、或0x0001、或0x0002、或0x0003造成的未命中，都会导致位于内存0x0000—0x0003的全部四个字被读入块中。</li>
</ol>
<p>在右图中，如此时处理器请求的地址在0x0020到0x0023之间，或在0x0004到0x0007之间，或在0x0528到0x052B之间，或在0x05EC到0x05EF之间，均会命中。其余地址则全部未命中。</p>
<p>而处理器执行数据写入指令时，控制逻辑依如下流程：</p>
<ol>
<li>用索引定位到相应的缓存块。</li>
<li>用标签尝试匹配该缓存块的对应标签值。其结果为命中或未命中。</li>
<li>如命中，用块内偏移定位此块内的目标字。然后直接改写这个字。</li>
<li>如未命中，依系统设计不同可有两种处理策略，分别称为<a href="https://zh.m.wikipedia.org/zh-hans/CPU缓存#按写分配与不按写分配" target="_blank" rel="noopener">按写分配</a>（Write allocate）和<a href="https://zh.m.wikipedia.org/zh-hans/CPU缓存#按写分配与不按写分配" target="_blank" rel="noopener">不按写分配</a>（No-write allocate）。如果是按写分配，则先如处理读未命中一样，将未命中数据读入缓存，然后再将数据写到被读入的字单元。如果是不按写分配，则直接将数据写回内存。</li>
</ol>
]]></content>
      <categories>
        <category>computer theory</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
      </tags>
  </entry>
  <entry>
    <title>        我的博客</title>
    <url>/2021-03-04%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2.html</url>
    <content><![CDATA[<p>自己写下内容需要传播出去吗？</p>
<p>昨晚凌晨时分看到了一篇文章，内容是说某为少年在读书时期就开始自建网站，通过网站的博文评论和外界保持过一段交流的时光。后来，因为生活，学习，工作等诸多不便因素影响之下，导致停更。直到，最近这位少年，参加了一个名为“十年之约”关于持续维护网站博文更新的活动。</p>
<p>对此自己也十分感概和激动。</p>
<p>在公众号也发表过许多文章，但是后来深知自己的目的不太可能实现，从结果上面来看是没有任何交流的评论。那么，就是与自己的初衷完全相反。因此，改为练习自己写作的兴趣。希望可以在半小时内写下1000字的文章。后来，这一目标是达到了，慢慢又开始追求文章的质量。便开始了，漫长的阅读之路。直到现在，这条路，也并不是十分地顺利。原因，无它，多数跟普通的大多数的懒和种种生活工作原因，令到自己沉醉于外界的声音之中，忽略了自己的内心深处的想法。</p>
<p>虽然，后来没有在其他地方发表，但是依然在坚持写下自己的内心里面的声音，可能目的不是十分明确，又或者是一种减压。在别人眼里，我的行为似乎会是一种浪费时间的表现。从自身实际上来看，这其他对于自己从中获得帮助也并不大。但是，自己是很喜欢和别人交流的想法，一直都没有磨灭。毕竟世界之大，很多事物自己都是没有亲身经历，闻所未闻。短短的人生，如果能够结识很多有趣的人，交流彼此的认知。我相信，人生定必更加有趣。</p>
<p>有时候，在阅读新闻，和主流平台所传播出来的声音，是杂而乱。当然，是有优质的内容。但是，在海量的信息面前，是非常难获得的。看着看着，就仿佛有种孤独的感觉。也令到自己越来越觉得，我能否实现自己的小小目标。通过一个平台，和有趣的人交流。哪怕，是闲谈几句，或者是经验之谈。能够让自己在学识上有帮扶的，那就是最好不过的一大乐事了。可惜，这一点要做好，仅仅靠谦虚好学，是远远不够的。</p>
<p>那么，还需要自身的能力，背景，人脉，等等的提升，才会能够引起别人的注视。在提升的过程中，孤独前行的时候依然会消耗着时间。我眼看自己的年龄日渐增长，也令自己感觉到开始慢慢地淹没在人潮之中，按照既定的规律，是会慢慢走向消亡。</p>
<p>在着急的同时，又有了点对未来的期盼。继续为生存的同时，分掉一部分的勇气，继续向外界发出信息。希望，能收获到外界的一些回响。</p>
<p>即将迈入黄金十年的阶段，希望十年后，自己回看这篇文章的时候，会是满怀欢喜和喜悦的泪水。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>        回南天的周末</title>
    <url>/2021-03-06%E5%9B%9E%E5%8D%97%E5%A4%A9%E7%9A%84%E5%91%A8%E6%9C%AB.html</url>
    <content><![CDATA[<p>自从觉得需要多在这里发表一些内容以来，内心就多了一点期待。期待有人到来，愿意在此留言。</p>
<p>外面的天气是与下图相反的，希望能够将这一天记录为温暖的。</p>
<p><img src="https://qiuniu.lookmeseesee.top/WechatIMG163.jpeg" alt="WechatIMG163"></p>
<p><strong>在雨天思考了几个问题：</strong></p>
<p><strong>1.如果在日常生活工作中遇到久久不能解决的问题，就应该要立马换个方法。</strong></p>
<p>当你设定了一个目标，或者完成一个没遇到过的问题。在解决的过程中，会遇到很多解决问题本身以外的干扰。例如，有很多的方法提供给自己选择，这些方法可能也会过时。我提出一个建议，当遇到这样的场景的时候，接受它，是这样的，面对未知不要带着着急心态。</p>
<p>但是，这不是解决问题，分析问题的一个很好的办法。如何是好？利用第一原理这个思维是个好的办法。什么是第一原理，可自行去了解。</p>
<p>回到思考的问题，遇到行不通，是要立马换个方式去解决。这样的思维方式，是应该内化成自己的条件反射。时间是不会停止来等你的。不要认为，这是很少见，我认为这是一个大概率出现在每个人身上的。所以，生命很多时候，就是在这样被消耗着。</p>
<p>雨下一会就会停，而问题也同样最终消失。有区别的是，问题可能会被解决，也有可能被自己放弃。</p>
<p><strong>2.如果发现一样事物，使自己感到不适的时候，要去检视一下自身有什么原因是让这样的情况出现的。</strong></p>
<p>例如，自己在写这篇文章的时候，是很困的。写作的思路是较为之混乱。说明，自己的作息出现了严重的问题。没有正确的睡眠规律导致的问题。所以，对此就要去解决它，让自己的睡眠得到保证，才能避免它的出现。</p>
<p><strong>3.错过了多次改正的机会，就会导致万一的情况变成事实的时候，触手无策。</strong></p>
<p>那天我错过了3次为地铁卡充值的机会。</p>
<p>当时，我使用余额不足的它，滴进站内后，发现了在线充值系统竟然罕有地出了维护。但是我没有重新出站，补充。最后一次使用的时候，我已经发现了它的余额不足。然后，我进站的时候也没有意识要提前充了才进站。结果在出站补卡的过程耗费了时间，导致了上班迟到。</p>
<p>这样的生活小片段，说明了我没有确保做某事前的基本条件成立，这是反映了自己一个思维上不够严谨的问题。</p>
<p>图床刚才是遇到了小问题，以往自己是没有办法去继续下去的，但是之前看了某些书 ，明白到问题是需要拆解分析的，把未知的概念了解之后，一个一个地，一步一步地就很大可能解决掉。</p>
<p><img src="https://qiuniu.lookmeseesee.top/WechatIMG27985.jpeg" alt="WechatIMG27985"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>      关于笔记</title>
    <url>/%E5%85%B3%E4%BA%8E%E7%AC%94%E8%AE%B0.html</url>
    <content><![CDATA[<p>对于思路笔记的整理记录，一直都没有一个合适的流程。<br>    <a id="more"></a><br>在使用电脑的情况下，要将思路记录下来同时发布到线上的过程，能够尽最大的精简和快捷，<br>对于大三方平台的账号，还没有使用。但是，对于写作的重点，应该是注重于内容的书写，对于阅读方面的考虑，可以不用太过于着重。关键在于内容和发布，发布是方便自己阅读。</p>
]]></content>
      <categories>
        <category>point</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>     最重要是动起来</title>
    <url>/%E6%9C%80%E9%87%8D%E8%A6%81%E6%98%AF%E5%8A%A8%E8%B5%B7%E6%9D%A5.html</url>
    <content><![CDATA[<p> 在日常生活和工作当中经常会遇到问题。而的问题的种类有许多，面对各种的问题我们都会有对应的办法去解 <a id="more"></a>决。同时，对应的问题的解决方法也有多种。它们有些是简单，有些是困难。现在说明一种情况：面对问题久攻不下的情况。<br> 何谓久攻不下，从时间的角度来看，就是花了很长时间查阅别人的遇到相同或类似的情况，模仿，复制别人的解决方法。这时候，可能就是一种利用检索，搜索，询问的方式去解决问题。之所以会造成久攻不下的情况，多数是缺乏运气，因为没有从根本上去理解问题。<br> 为何会会用这种方式去解决问题，因为，要从根本上去解决，是需要花很多的精力和基础知识。这样的做法就是耗费更多的时间。</p>
<p>以下是续写，说明一下。</p>
<p>最近看了一本关于学习的书，觉得内容值得借鉴学习。<br>内容的小结已经发布在个人的公众号上面，由于没有完善，只有总结了上半部分。便不公开。<br>讲述是一种关于整体性学习的理论方法，深深地使盲目学习的自己注入了强心针。目前的自己拥有三个平台去发布内容。第一个是 此博客，第二个是个人维护的个人网站，第三个是个人的公众号。<br>此博客，被定位为技术笔记总结，以及工作上的经历心得。<br>以前不写，都是因为太在意美化界面，和写作的便捷上的纠结。结果，错失了许多记录的心得和内容，如此次打字记录之前，还在思考是否用typora还是直接在sublime上写mardown的语法，想了想，为何不直接选择工具-typora去提高写作的效率。而且，灵感会被一秒钟的时间冲散，所以赶紧写下来是最重要的事情。以后要谨记。<br>以后在学习上面，认真的投入实在的时间，是非常的少的。总是有种傻念，觉得简单，觉得很容易就可以补回来，结果证明这是一件非常愚昧无知的事情。<br>记得尚未进入此行业之前，自己就一直有个写作的习惯，后来却丢得一干二净。</p>
<p>那么，这时候的记录是什么呢。<br>就是，不要怕你记录的知识是多么的简单，别人阅读起来觉得你自己原来这么一般的。<br>写吧，毕竟写下来才是自己的，以后还可以迭代的嘛。</p>
<p>下午根据该书的方法，从新快速阅读了一篇vue的文档，接下来还会阅读vue的底层原理相关的知识，扎实地把基础知识落实到位。之后最做总结。</p>
]]></content>
      <categories>
        <category>point</category>
      </categories>
      <tags>
        <tag>观点</tag>
      </tags>
  </entry>
  <entry>
    <title>   华为</title>
    <url>/2019-05-21%E5%8D%8E%E4%B8%BA.html</url>
    <content><![CDATA[<h2 id="任正非采访两万字全纪录"><a href="#任正非采访两万字全纪录" class="headerlink" title="任正非采访两万字全纪录"></a>任正非采访两万字全纪录</h2><p>注：本纪要为2019年5月21日华为创始人、CEO兼董事，任正非 接受包括虎嗅在内的数家中国媒体采访全程纪要，纪要内容由华为官方转写整理</p>
<p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>    <a id="more"></a><br><strong>1、中央电视台 董倩：</strong>首先，我是一个做直播的记者，您是军人出身，严把时间关，我也是严把时间关。时间过得真快，四个月前同样是这个地方，我们做过一次访问，那时我采访您的时候，大家普遍认为华为已经进入了一个低点，大家异常关注，才有了您面对一系列国内外记者的采访。没想到四个月之后，华为今天面对的局势比四个月前更加复杂，甚至更艰难。刚才有记者同行拿出“烂飞机”的照片，同样我也拿到了，这张照片您也非常喜爱，是伤痕累累的照片。</p>
<p><strong>任正非：</strong>我是在“悟空问答”网站上看到这张照片，觉得很像我们公司的情况，发给大家。运营商BG认为自己就是这架飞机，他们就自己拿来广播了。后来梳理下来发现，运营商BG反而还没有大的问题，因为有十几年的准备充分。我们现在的情况就是一边飞一边修飞机，争取能够飞回来。</p>
<p><strong>董倩：</strong>这架飞机之所以能够飞回来，是因为要害部位没有受到伤害，例如油箱、发动机，只是机翼非要害部位受到了伤害。有没有可能飞的时候要害部位受到攻击，那怎么飞回来？</p>
<p><strong>任正非：</strong>我讲两个故事，二战时的德国和日本。德国因为不投降，最后被炸得片瓦未存，除了雅尔塔会议留下准备开会，其余地方全被炸成平地。日本也受到了强烈轰炸，如果不投降，美军也要全部炸平，最终日本采取了妥协的方法，保留天皇，日本投降，没有被完全摧毁，但是大量的工业基础被摧毁了。当时有一个著名的口号“什么都没有了，只要人还在，就可以重整雄风”，没多少年德国就振兴了，所有房子都修复得跟过去一样。日本的经济也快速恢复，得益于他们的人才、得益于他们的教育、得益于他们的基础，这点是最主要的。所有一切失去了、不能失去的是“人”，人的素质、人的技能、人的信心很重要。</p>
<p><strong>董倩：</strong>美国时间的昨天，发了一个对华为90天的延迟禁令期，换句话说华为有了90天的临时执照，您怎么看？90天可以做什么？如果新闻是真的，90天如果取消怎么看待这个反复？</p>
<p><strong>任正非：</strong>首先，90天对我们没有多大意义，我们已经准备好了。我们最重要的还是把自己能做的事情做好，美国政府做的事不是我们能左右的。借此机会要讲一下，我们还是要非常感谢美国公司的，三十年来美国公司伴随着我们公司成长，做了很多贡献，教明白了我们怎么走路。大家知道，华为绝大部分的顾问公司都是美国公司，典型的有IBM、埃森哲等，有几十家。</p>
<p>第二，美国大量的零部件、器件厂家这么多年来给了我们很大支持。特别是在最近的危机时刻，体现了美国企业的正义与良心。前天晚上，徐直军半夜两三点打电话给我，报告了美国供应商努力备货的情况，我流泪了，感到“得道多助、失道寡助”，今天，美国的企业还在和美国政府沟通审批这个事情。</p>
<p>我们被列入实体清单，美国公司卖产品给华为都必须要拿去批准。美国是法制国家，美国企业不能不遵守法律，实体经济要遵守法律。媒体也不要老骂美国企业，大家多为美国企业说话，要骂就骂美国政客。我觉得有时候不分青红皂白，一竿子打过去打的都是矮的人，其实高的人打不着。媒体应该要理解，美国企业和我们是共命运的，我们都是市场经济的主体。</p>
<p>美国政客做这个工作可能低估了我们的力量。我就不多说了，因为何庭波的员工信说得很清楚，国外、国内的主流媒体都刊登了。刚才说到烂飞机，我们有一些边缘产品没有“备胎”，这些产品本来迟早就要淘汰的，这些有影响。但在最先进的领域不会有多少影响，至少5G 不会影响，不仅不影响，别人两三年也不会追上我们的。</p>
<p><strong>2、《人民日报》冯华：</strong>我想问一个关于芯片的问题。我注意到您在18日接受日本媒体采访时表示“华为不需要美国芯片，华为没问题”。华为公司致员工的一封信被刷屏，信中说公司是有底气、有准备的。请问华为的底气从何而来，做了哪些准备？</p>
<p><strong>任正非：</strong>第一，我们永远需要美国芯片。美国公司现在履行责任去华盛顿申请审批，如果审批通过，我们还是要购买它，或者卖给它(不光买也要卖，使它更先进)。因此，我们不会排斥美国，狭隘地自我成长，还是要共同成长。如果真出现供应不上的情况，我们没有困难。因为所有的高端芯片我们都可以自己制造。在和平时期，我们从来都是“1+1”政策，一半买美国公司的芯片，一半用自己的芯片。尽管自己芯片的成本低得多的多，我还是高价买美国的芯片，因为我们不能孤立于世界，应该融入世界。我们和美国公司之间的友好是几十年形成的，不是一张纸就可以摧毁的。我们将来还是要大规模买美国器件的，只要它能争取到华盛顿的批准。现在时间很匆忙，一时半会估计批不准，缓冲一下是可以的。他们能获得批准的话，我们还是会保持跟美国公司的正常贸易，要共同建设人类信息社会，而不是孤家寡人来建设信息社会。</p>
<p>日本媒体整理稿子时有一点偏激，我们能做和美国一样的芯片，不等于说我们就不买了。</p>
<p><strong>3、新华社 王攀：</strong>您之前说华为不想做独行侠，需要合作。现在又提到可以做好两手准备。我可不可以理解为，现在美国的贸易保护主义，根据禁令实际上会打断全球的供应链，使得整个市场感到混乱？第二，过去一段时间以来，美方质疑华为的公司治理、财务问题等各种各样的问题，您认为反对华为的声音主要纠结于华为的哪些方面？为什么要针对华为？</p>
<p><strong>任正非：</strong>政治家怎么想的我真不知道。我觉得不能因为我们领先了美国就要挨打，因为5G并不是原子弹，而是造福人类社会的。</p>
<p>5G的容量是4G的20倍，是2G的1万倍；耗电每个比特相比4G下降了10倍；体积下降到1/3，下降了70%。5G基站只有一点点大，20公斤，就像装文件的手提箱那么大，不需要铁塔了，可以随意地装在杆子上、挂在墙上；我们还有耐腐蚀材料，几十年不会腐蚀，可以把5G装在下水道里。这样的方便对欧洲最适合，欧洲有非常老的城区，不能像中国这样安装大铁塔。当然中国的大铁塔也不浪费，可以把5G基站挂在上面。但是不需要新建铁塔了。每个站点不需要吊车等，在工程费用上在欧洲还可以降低一万欧元。不仅是铁塔，以前的基站大需要吊车，把吊车开进去还需要封路。现在5G基站我们用人手提就上去了，因此很简单。第二，5G带宽的能量非常大，能提供非常多的高清内容，传播8K电视很简单。宣传上说费用下降了10倍，实际上可以下降了100倍，这样老百姓也能看高清电视，文化就会快速提升。国家发展要靠文化、哲学、教育，这是发展国家的基础。因此，5G改变一个社会，它还有非常短的时延，可以用于工业的很多东西。</p>
<p>董老师关心的是发动机打掉没有？我们是边缘的翅膀有可能有洞，但核心部分我们完全是以自己为中心，而且是真领先世界。越高端，“备胎”越充分。</p>
<p><strong>王攀：</strong>您是不是觉得国际市场秩序被打乱？</p>
<p><strong>任正非：</strong>不会。欧洲不会跟它走，美国企业大多数反而跟我们沟通很密切。</p>
<p><strong>4、《环球时报》陈青青：</strong>刚才谈到对华为的影响，看到海思这封信之后，从舆论反应来讲非常热血。芯片行业的从业者以一个比较客观的态度来看待国产芯片，包括国产的核心零部件和美国、外国企业的差距。您觉得华为的自主产品和研发究竟走到哪里？包括信里提到的，保证接下来能连续不间断的供应？有没有一个临界点，位于何处？</p>
<p><strong>任正非：</strong>为什么不洗一个“冷水澡”呢？我认为，我们最重要的是要要冷静、沉着。热血沸腾、口号满天飞，最后打仗时不行也没用，最终要能打赢才是真的。</p>
<p>我们首先要肯定美国在科学技术上的深度、广度，都是值得我们学习的，我们还有很多欠缺的地方，特别是美国一些小公司的产品是超级尖端的。我们仅仅是聚焦在自己的行业上，做到了现在的领先，而不是对准美国的国家水平。就我们公司和个别的企业比，我们认为已经没有多少差距了；但就我们国家整体和美国比，差距还很大。这与我们这些年的经济上的泡沫化有很大关系，P2P、互联网、金融、房地产、山寨商品……等等泡沫，使得人们的学术思想也泡沫化了。一个基础理论形成需要几十年的时间，如果大家都不认真去做理论，都去喊口号，几十年以后我们不会更加强大。所以，我们还是要踏踏实实做学问。</p>
<p><strong>5、《澎湃新闻》周玲：</strong>关于芯片的问题。看到何总发的公开信以后，很受鼓舞。我看资料海思是2004年成立的，经过这么多年发展，在很多方面已经有自己的芯片。当时是怎么推演的，您个人或者华为当时如何决定做自研芯片？包括何总讲到“极限生存”的假设，推演到目前为止，您前两天接受媒体采访说到“我们已经不需要美国芯片了”，这个过程能不能描述一下？当初的推演到现在的结果，符合当初的设想吗？如果美国芯片完全不能供应，为客户提供服务的能力如何？</p>
<p><strong>任正非：</strong>其实我们牺牲了个人、家庭，牺牲了陪伴父母……，这些都是为了一个理想——站到世界最高点。今天大家憋不住了，就喊出口号，要“争雄世界”、“世界第一”。以前我们是不允许喊的，为了这个理想，我们与美国迟早有冲突。为了避免这个冲突，2000年初的时候，我们也很犹豫，能不能戴顶“牛仔帽”，我们曾经准备以100亿美元把华为卖给一家美国公司，合同签订了，所有手续都办完了，就等对方董事会批准。所有谈判人员都在酒店买了花衣服，在沙滩上比赛跑步、乒乓球，等待批准。在这个过程中，美国公司董事会换届，新董事长比较短视，拒绝了这项收购，收购就没有完成。当时准备卖给美国公司，我们的想法是，一群中国人戴着一顶美国“牛仔帽”打遍全世界。这个想法没能实现之后，我们高层领导表决，还卖不卖？少壮派一致表决“不卖”，我也不能违背。我告诉他们，迟早我们要与美国相遇的，那我们就要准备和美国在“山顶”上交锋，做好一切准备，从那时起，就考虑到美国和我们在“山顶”相遇的问题，做了一些准备。但最终，我们还是要在山顶上拥抱，一起为人类社会做贡献的。</p>
<p><strong>周玲：</strong>包括华为其他管理层也释放出“有能力继续为客户服务”的信息，会不会因为美国事件对原来的大客户、对业务造成影响，我们怎么应对？</p>
<p><strong>任正非：</strong>我们肯定能继续为客户服务，我们的量产能力还是很大的，并没有因为被美国列入实体清单受到多少影响，我们在全球的竞标还是在前进。增长速度会减慢，但不会有想象中的那么慢。我们一季度销售收入同比增长39%，四月份降到25%，预计今年底还会下降一些，但是不会造成我们公司负增长，或者对产业发展带来伤害。</p>
<p><strong>6、《科技日报》刘艳：</strong>如果美国断供发生，对这个产业会带来什么样的影响？前两天看到方舟子发了一个微博“如果备胎好用，何必等到胎破了再用？”，这个观点您怎么看？</p>
<p><strong>任正非：</strong>如果都用“备胎”，就是体现了你们所说的“自主创新”，自主创新最主要目的是想做孤家寡人，我们想朋友遍天下。因此，没有像他想象的“备胎好用，怎么不用”，他不理解我们的战略思维。我们不愿意伤害朋友，要帮助他们有良好的财务报表，即使我们有调整，也要帮助。</p>
<p>我刚才也讲到，我们没有和美国公司表明不用它们的器件，而是希望美国公司继续能给我们供货，我们共同为人类服务。在早期，我们还把芯片这方面的开发心得告诉对方，甚至研究成果，我们自己不生产，交给对方生产，要不然全世界的供应商怎么对我们那么好。“备胎好用，为什么不用？”备胎、备胎，胎不坏，为什么要用？</p>
<p><strong>刘艳：</strong>万一真的出现断供情况，对产业有什么影响？</p>
<p><strong>任正非：</strong>对于我们公司，不会出现极端断供的情况，我们已经做好准备了。我年初判断这个事情的出现可能是两年以后，因为总要等美国和我们的官司法庭判决以后，美国才会对我们实施打击，无论结论怎样，（美国）都会对我们打击。这样我们还有两年时间，足够准备。由于孟晚舟被捕，就把“导火索”时间推前了。</p>
<p>大家都知道，我们春节也在加班，我春节也在慰问员工。春节加班期间，仅仅是保安、清洁工、餐厅服务员……，在国内就有5000名服务人员在供应我们的“战士”，他们可以拿多倍工资，公司采购食品的价格都翻一番，还给服务员一些小费。我们很多员工春节连家都不回，打地铺睡，就是要抢时间奋斗。五一节也是这样的，很多人没有回家。</p>
<p><strong>7、《网易》杨霞清：</strong>谈到备胎计划，华为实施备胎计划这么多年来投入了多少资金？如果备胎计划一直不启用，会一直投入钱到这个备胎计划吗？</p>
<p><strong>任正非：</strong>实在是太多了，我说不清楚。“正胎”和“备胎”的预算和人力编制是一起拨给他们的，以前预算分配以“正胎”为主，现在以“备胎”为主。具体多少，我是搞不清楚的，每次汇报都是满满的几页纸，我不会过问每个零部件，只是在大概念上过一过。落到下面的计划，这个零部件中还有哪几个关键环节，是一点点来的。要不怎么会有八、九万的研发工程师呢？</p>
<p><strong>8、《财新周刊》张而驰：</strong>美国管制之后，华为在日本、欧洲、台湾地区的企业，估计会帮到华为很多。美国政府如果管制不成功，下一步会不会对台积电这种企业施压？华为毕竟是一个芯片企业，并不具备整个产业链方面的能力。</p>
<p><strong>任正非：</strong>如果外面不屈服的人多了，后面跟着不屈服的人就更多了，我们不要太操心这些，毕竟没有发生。</p>
<p><strong>张而驰：</strong>Google事件，欧洲地区用户很担心，未来华为手机不能用安卓最新的系统。在这方面，如何去应对？</p>
<p><strong>任正非：</strong>Google是一家好公司，而且一家高度负责任的公司，它也在说服美国政府解决这个问题。我们也在讨论变通的救济方案，专家们还在做这个事情，现在我还不能完全回答你。</p>
<p><strong>9、《腾讯网》高宇雷：</strong>您觉得现在这种严峻的形势大概会持续几年？这对于华为的发展历史会是转折点吗？</p>
<p><strong>任正非：</strong>你应该问特朗普，问我就问错了。我认为，这件事有两面性，一方面我们会受到一些影响，另一方面，会刺激中国系统性地、踏踏实实地发展电子工业。国家发展工业，过去的方针是砸钱，但钱砸下去不起作用。我们国家修桥、修路、修房子……已经习惯了只要砸钱就行。但是芯片砸钱不行，得砸数学家、物理学家、化学家……，但是我们有几个人在认真读书？博士论文真知灼见有多少呢？这种状况下，完全依靠中国自主创新，很难成功。为什么不跨国创新呢？可以在很多国家中建立创新基地。哪个地方有能力，就到哪个地方去，我们可以在当地去建一个研究所。</p>
<p>当然，中国现在回来了很多人才，这是很重要的。但是中国的个人所得税比外国高很多，如果来到中国，要多缴这么多税，“雷锋”精神是不可持续的，雷锋是把一切都献给国家、献给党。但是，毕竟这些顶级专家是从外国回到中国，不仅没有优惠，税收还高很多。最近听说大湾区可以降到15%，实施措施是什么？是不是要在大湾区有户口，是否要在大湾区有工作？换一个地方就不行，这个政策有什么用？科学家本身就是流动的，只在这里上班八小时，还是科学家吗？我们要创造一些外国科学家回国的路。</p>
<p>第一次世界人才大转移，是苏联的三百万犹太人转移到以色列，以色列成为了一个科技高地。第二次人才大转移又来了，美国排外，大量人才进入不了机密研究。美国著名媒体写了一篇文章反问美国“中国如果发明了致癌的药物，也危害国家安全吗?”美国癌中心辞退了三个华人科学家，中国人发明的癌症药，难道也危害国家安全了吗？他反问美国。很多科学家在美国丧失了工作信心，为什么不拥抱他们进来呢？他们问“怎么进来？孩子上学难，没户口买不了车，还要缴很高的税收。”应该调整我们的政策，拥抱这个世界。美国两百年前是印第安人的不毛之地，就是政策对了，今天是世界霸主。我们国家有五千年文明，有这么好的基础，应该拿出政策来拥抱世界人才来中国创业。</p>
<p>大家要想到，东欧国家都比较贫穷，但是美国大量的领袖、科学家、金融家……都是东欧人，我们为什么不大规模吸引东欧人到中国来，或者在东欧建立各种研究基地？所以，以中国为中心建立理论基地要突破美国的重围，眼前这个方式比较难，因为中国在基础理论上不够，这些年好一些了。我曾在全国科学大会上讲了数学的重要性，听说现在数学毕业生比较好分配了。我们有几个人愿意读数学的？我不是学数学的，我曾经说，我退休以后想找一个好大学，学数学。校长问我，学数学干什么？我说，想研究热力学第二定律。他问，研究用来做什么？我说，想研究宇宙起源。他说，我很欢迎你！但是我到现在还不能退休，还去不了。我们那时是工科学生，学的是高等数学，最浅的数学。中国要踏踏实实在数学、物理、化学、神经学、脑科学……各方面努力去改变，我们可能在这个世界上能站起来。</p>
<p>中国过去的哲学体系是玄学，即使有佛教，也是梵文，唐僧应该翻译成汉语，但是没有翻。西方推行的是形而上学和机械唯物论，产生了物理、化学、数学、几何学……各种学科，所以工业发达，建立了工业社会，占领了全世界。现在玄学没有说没用，搞虚拟世界，中国的游戏业发展很快，人类社会的很多生产方式也可能会虚拟化。人类在人工智能的科学家中，有50%左右是华人，如果他们受到排挤，拥抱他们进入中国，他们就会在底层平台上创新，给我们提供了一个基础。</p>
<p>我认为，如果能够真真实实把优秀人才引进来，对我们改革是好的。如果还是强调自主创新，就会浪费非常多宝贵时间。</p>
<p><strong>10、《每日经济新闻》郭荣村：</strong>鸿蒙系统有没有在华为内部小范围使用？</p>
<p><strong>任正非：</strong>这个问题抱歉今天回答不了。我们能做操作系统，但不一定是替代别人的做法，因为我们在人工智能、万物互联中本身也是需要，但是到底哪些用了、哪些没用，我不是很清楚。</p>
<p><strong>郭荣村：</strong>现在很多的文章是“华为震惊体”，华为震惊了全球。</p>
<p><strong>任正非：</strong>我们公司员工都是傻傻的，一个都没有被吓到，我们觉得很平常。网上文章一般很夸大，就像网上说英飞凌不给我们供货了，哪有这回事？这是有人编的。所以，如果真想了解华为的事情，就请看我们的心声社区。在心声社区上，即使骂公司的帖子也不会被封，反而是人力资源部要去看看他骂得怎么样，如果骂得很对，就开始调查，再看看前三年他的业绩，业绩也很好的话，就调到公司秘书处来，帮助处理一些具体问题，培训他、锻炼他，也就是给他一个到总参谋部来“洗澡”的机会，半年以后把他放下去，这些种子将来迟早是要当领袖的。总说我们好的人，反而是麻痹我们，因为没有内容。心声社区骂我们的内容都是很具体的，我们要对具体去分析。如果没有自我批判精神，我们就不可能活到今天。</p>
<p><strong>11、《财经杂志》谢丽容：</strong>现在大家都很关心华为的“备胎”计划，您从十年前就开始谈国际形势对华为的一些比较有忧患意识的影响。</p>
<p><strong>任正非：</strong>对于“备胎”计划的讲话，总裁办邮件都是公开的，从什么时候开始讲的，我不记得了，但是反复讲过，只是社会不引起重视。现在美国打我们一下，“备胎”这个词就被重视了。</p>
<p><strong>谢丽容：</strong>这么多年的忧患意识战略倾向和具体的业务连续性，宏观和微观层面的结合。这么多年一直考虑这个事情，当预想变成现实时，而且打击比大家想象中严重，您有没有一些新的想法？我们已经看到太多关于中美贸易摩擦对华为的影响，真正挑战来的时候，有没有新的想法？</p>
<p><strong>任正非：</strong>第一，业务连续性和“备胎”是一致的，备胎就是保证在车子抛锚时换一个轮胎还能开。连续性也是一步步实现的，其实很多东西已经投产了。投产的时候不排外，外面的货订一半。我曾经有篇文章说，每年至少买高通5000万套芯片，因此我们从来没有去排斥和抵制。</p>
<p>世界上最大的备胎就是原子弹，原子弹有什么用？二战后一次也没有用过。但是中国升官的官员基本都有两弹背景，一是做两弹有能力，二是忠诚于国家的事业，技术可靠又有能力，就当一个部长或者省长。40岁左右就能当省长，让我们很羡慕，我们40岁还在找工作。“备胎”现在变成一个新名词，在我们公司是很正常的行为。何庭波也被炒红了，在美国发禁令的那天晚上发的，她憋不住了。这些年她很难受，做那么多年都不能把脑袋昂起来。</p>
<p><strong>谢丽容：</strong>也就是说，您认为备胎一直在，备胎用不用还不好说？</p>
<p><strong>任正非：</strong>备胎一定有用的，因为是结合我们的解决方案设计的，不是脱离解决方案做的。直到它能用的时候，才开始投入使用，滚动着用。</p>
<p><strong>12、谢丽容：</strong>现在大家对华为有两派很鲜明的情绪：第一，很鲜明的爱国主义，把华为的支持上升到支持爱国的高度上；第二，华为绑架了全社会的爱国情绪，要是不挺华为就不爱国。现在情绪越来越严重了。</p>
<p><strong>任正非：</strong>那我的小孩用苹果，就是不爱华为了？不能这么说。我经常讲这样的话，余承东很生气，认为老板总为别人宣传，不为自己宣传。我讲的是事实，不能说用华为产品就爱国，不用就是不爱国。华为产品只是商品，如果喜欢就用，不喜欢就不用，不要和政治挂钩。华为毕竟是商业公司，我们在广告牌上从来没有“为国争光”这类话。只是最近的誓师大会有时候瞎喊几句，但是我们会马上出文件制止他们瞎喊口号，大家开庆功会、发奖章都没有问题，茶余饭后说两句过头话没问题，但是千万不能煽起民粹主义的风。</p>
<p>我经常举一些例子，其实就是想泼华为公司的冷水，不能使用民粹主义，这是害国的。因为国家未来的前途在“开放”。这次中美会谈完了以后，中央电视台讲到“我们要开放、要改革”，我好高兴。实际上，我们还是开放晚了、改革晚了，WTO对人家是有承诺的，我们得到好处以后就要去兑现。如果早一些去兑现，做一些贡献，就能团结更多的朋友。中国的钱太多，为什么只存美国，不存一些到欧洲、俄罗斯、非洲……各个国家？如果说担心他们不还，他们是以国家信用抵押的，今年不还，一百年后还，不行吗？中国又不着急钱，这样就分散了风险。对于农产品，为什么非买一家？可以买买乌克兰的农产品，乌克兰就不会那么困难。乌克兰是俄罗斯重武器的“粮仓”，买食品粮食时，是不是也可以买重武器“粮食”呢？我们的重武器一定要自力更生吗？没必要，打赢就行。你们可以看看绍伊古的总司令报告，短短的报告，写得非常好。</p>
<p><strong>13、《科技日报》刘艳：</strong>刚才谈到做芯片光靠砸钱不行，又谈到需要物理学家、数学家。作为一个商业公司，华为在此前的场合，无论是华为公司还是您个人，多次谈到“基础研究与基础教育”，包括还有一些广告。针对基础研究和基础教育，华为有哪些具体的动作？这会对华为未来的发展提供什么样的支撑？</p>
<p><strong>任正非：</strong>我们在全世界有26个研发能力中心，拥有在职的数学家700多人，物理学家800多人，化学家120多人。我们还有一个战略研究院，拿着大量的钱，向全世界著名大学的著名教授“撒胡椒面”，对这些钱我们没有投资回报的概念，而是使用美国“拜杜法案”原则，也就是说，受益的是大学。这样，从我们“喇叭口”延伸出去的科学家就更多了。</p>
<p>大家今天讲5G标准对人类社会有多么厉害，怎么会想到，5G标准是源于十多年前土耳其Arikan教授的一篇数学论文？Arikan教授发表这篇论文两个月后，被我们发现了，我们就开始以这个论文为中心研究各种专利，一步步研究解体，共投入了数千人。十年时间，我们就把土耳其教授数学论文变成技术和标准。我们的5G基本专利数量占世界27%左右，排第一位。土耳其教授不是华为在编员工，但是我们拿钱支持他的实验室，他可以去招更多的博士生，我们给博士生提供帮助。我们在日本支持一位大学教授，他的四个博士生全到我们公司来上班，上班地点就在他的办公室，而且他又可以再招四个博士生，等于有八个博士帮做他研究，所有论文等一切都归属他，不归属我们。如果我们要用他的东西，需要商业交易，这就是美国的“拜杜法案”原则，我们就是通过这样的“喇叭口”，延伸出更多的科学家。</p>
<p>上周我们召开了世界科学家大会，我没有去现场，通过视频转播到我的会议室。来了一批科学青年给我做技术翻译，都是博士，很厉害，他们给我解释这些论文对未来人类社会有什么意义。我们不断有这种世界性的交流，我们自己吸收能量，他们也吸收了我们的需求，不断滚动传播。</p>
<p>西方公司在人才争夺上，比我们看得长远，发现你是人才，就去他们公司实习，专门有人培养你，这不是我们大学毕业找工作的概念。我们扩大了与美国公司争夺人才的机会窗，但我们的实力还不够。对世界各国的优秀大学生，从大二开始，我们就给他们发offer。这些孩子超级聪明，举一个例子，新西伯利亚大学连续六年拿到世界计算机竞赛冠军、亚军，但是所有冠军、亚军都被Google用五、六倍的工资挖走了，从今年开始，我们要开出比Google更高的薪酬挖他们来，在俄罗斯的土地上创新，我们要和Google争夺人才。我们支持科学家的创新，对科学家不要求追求成功，失败也是成功，因为他们把人才培养出来了。只有这样，我们才有可能源源不断地前进。</p>
<p><strong>14、《界面》林腾：</strong>我去参观了华为实验室，有很多新鲜的发明，比如防腐蚀设备、热传导……，我发现都是高中化学的原理，但是运用起来非常神奇。这是不是您眼中的基础科学和基础教育的一种表现形式，这种基础科学的积累，能够在当下关键节点上给公司带来多大的帮助？</p>
<p><strong>任正非：</strong>其实原子弹的核反应链式方程，初中生都学过，但是做成原子弹可不那么容易。基础科学看起来道理很简单，实施起来非常难。所以，在国外某项东西可能看起来是很小的发明，但是发明中套发明，再套发明，是数千项专利、上万项专利支撑了一个小小的零件。</p>
<p><strong>15、《新浪》韩雪晖：</strong>现在谈加强数学与基础学科的投入，您认为现在华为的投入在全世界范围内大概处于一个什么样的水平？您以什么样的机缘，认识到投入基础学科的重要性？您对未来的投入有什么样的目标和预期？</p>
<p><strong>任正非：</strong>举一个例子，P30手机的照相就是数学。现在的图像不是照出来的，是数学算出来的。因为人的眼睛相当于有一亿个镜头，相机就一个镜头，我们手机通过一个镜头进来的感光点，用数学的方式分解成几千万个视觉镜头，再重新还原出来。我们公司数学家的口号是“把手机做的比人类眼睛还好”，我还在公司讲话批判过，我觉得没有必要，但是他们顽固不化，没有办法。他们说“手机照月亮，可以照一千公里”，可能是真的，因为它是数学，把微弱的信号可能还原。</p>
<p>我去法国尼斯研究所见他们，就说“尼斯的海是蓝的，天是蓝的，数学家的公式为什么也是蓝的？”原来图像偏蓝色基调，现在好像纠正过来了。手机之所以进步这么快，得益于我们的战略“备胎”，因为我们网络建立的战略备胎没有用，就划给了终端，终端一下如鱼得水，每三个月换一代，主要是数学家的贡献，当然还有物理学家做光的三色传感器。</p>
<p>所以，如果电子工业还停留在买别人零部件来组装，不可能的。当然，他们也有数学，只是数学是别的公司做的，在零部件中加钱卖给他们。在这个方面，我们应该是领导世界的，站在世界最前面的。</p>
<p><strong>16、《环球网》朱梦颖：</strong>一段时间以来，美国不仅自己打压华为，还拉拢欧洲盟友对华为施压，封锁华为，如果美国持续强硬要求欧洲盟友们关闭对华为的大门，您是否会亲自到英国唐宁街10号、法国爱舍利宫等，以更直接有效的方式推开那扇威胁对华为关闭的大门？</p>
<p><strong>任正非：</strong>唐宁街10号，我以前经常去喝下午茶。他们问我，如何学习与国际接轨？我说，下午茶。所以，他们为了接待我，在唐宁街喝下午茶。我们与各国领导人都是有沟通的，每个国家有独自的利益，美国不会有那么强大的力量号召所有人都跟它走。</p>
<p><strong>17、《凤凰网》于浩：</strong>去年一直比较关心手机企业对于无障碍的支持，科技进步对残疾人士帮助非常大。华为是一家比较有理想的企业，上周5月16日全球无障碍日，华为作为一家领先的科技公司，在无障碍方面做了哪些努力？之后有什么计划？</p>
<p><strong>任正非：</strong>我曾在日本试戴我们公司的眼镜，可以看到几千公里以外员工的操作，对他的操作给予指导；或者戴上眼镜以后，眼镜上有所有的图纸，对与不对全都有指导，这是已经能做到的。有没有进入市场，我不知道。</p>
<p>对残障人的支持，理论上将来是能够提供的，现在具体进行到什么阶段，我还不知道，我让他们打电话问问。理论上可以通过对脑神经刺激感觉，能做到这点。我戴的是无线的眼镜，能看几千公里以外员工进行的工程。当然，现在我讲的不算，因为看的是科学家给我的演示项目，还不是商品。</p>
<p><strong>18、《凤凰网》于浩：</strong>苹果一直比较关注基础教育，做得很好。很多ipad、iphone对于孩子学习很有帮助。华为非常重视基础教育，包括基础学科，华为做了哪些努力？不能光说不做，我想知道对于教育这块的看法。</p>
<p><strong>任正非：</strong>提高全民族文化素质是国家的基本责任，任何一个企业都不可能担负起一个民族素质提升的责任来。不能说提到了教育就要去做教育。</p>
<p>中国将来和美国竞赛，唯有提高教育，没有其他路。教育手段的商品是另外一个事情，我认为最主要还是要重视教师，因为教师得到被尊重了以后，大家都想做教师。深圳教师得到了尊重，深圳老师挣钱多，253个人竞争一个教师岗位。我们帮助清华附中建设清澜山中学，校长说将来能做到中国第一的学校，因为收费高。清澜山只招收两千多个学生，对全社会开放，华为员工抢着送孩子进去，送不进去找我，我说我管不了你们。</p>
<p>只有教师的政治地位提升，经济待遇提升了，我认为才可能使得教育得到较大发展。我个人为什么感受很深？我父母是乡村教师，在贵州最偏僻的少数民族地区从事乡村教育工作，父母这一辈子做教师的体会对孩子们的教育就是一句话“今生今世不准当老师”，如果老师都不让自己的孩子当老师，国家是后继无人的。我亲身经历了他们政治地位低、受人歧视、经济待遇差的窘境，我们自己跟着他们，也亲身体会了这个苦，所以没有选择去当老师。</p>
<p><strong>19、《中国经营报》李正豪：</strong>我有两个问题：第一，在公司规划中，当前消费者业务是最大的一块，接着是运营商业务、企业业务。在您心里，未来一段时间比如说五年或者十年以后,三块业务会达到什么样的营收占比？第二，关于海思的定位，在当前局势下，你怎么设计海思在华为体系中未来定位问题？</p>
<p><strong>任正非：</strong>海思是华为的一个助战队伍，跟着华为主战队伍前进，就如坦克队伍中的加油车、架桥机、担架队一样，是这样的定位。三个板块，不是哪个板块挣钱多就地位高，只有网络联接部门才能称霸世界，美国打的是这个部门，“烂飞机”说的也是这个部门。现在梳理下来，发现这个部门困难少，因为准备时间长，反而别的部门困难多。在5G、光传输、核心网等领域，不会受到打击，还会长期领先世界很多年。</p>
<p><strong>20、《第一财经日报》李娜：</strong>最近海思集结令刷屏，不停地招聘全球员工，海思未来什么时候会独立？</p>
<p><strong>任正非：</strong>永远不会独立，它就是主战部队里的“加油车”、“担架队”、“架桥队”，不是主战部队，怎么会独立呢？网络联接部门是主战部门，将来销售额不一定是最高，因为“珠穆朗玛峰”可能容纳不了这么多产值，但是“珠穆朗玛峰”对世界意义很大，是一个战略高地。美国就是为了争夺战略高地，争夺不到，所以使用行政手段，我们怎么会见钱眼开，放弃这个战略高地呢？我们不会喧宾夺主。</p>
<p><strong>21、《第一财经日报》李娜：</strong>华为虽然有连续性作业管理的准备，但是面对一个服务器、基站，涉及的零部件太多了，您的乐观来自于哪里？</p>
<p><strong>任正非：</strong>把问题梳理出来，每个存在的问题都要去解决。</p>
<p><strong>22、《人民日报》冯华：</strong>问一个关于研发的问题，华为在研发投入非常大，今后华为在研发上重点方向有哪些？有哪些技术储备？</p>
<p><strong>任正非：</strong>我们这三十年都对着同一个“城墙口”冲锋，几十人、几百人对着这个“城墙口”，几万人、十几万人还是攻这个“城墙口”，总会把这个“城墙口”攻开的。而且我们炮击这个“城墙口”的“弹药量”，现在是每年200亿美元的研发了，全世界没有一个上市公司敢像我们这样对同一个“城墙口”投入这么多的炮击量。</p>
<p>我们仅仅围绕着“疏导信息流量”做努力，终端就是一个“水龙头”，CNBG就是一个“管道”，越这么做，我们越可能领导世界，越容易在世界上占有一定的合理地位，而且炮击量还会越来越大。如果我们财务受一点挫折，还不会影响科技上的投入，因为员工都不贪钱，生活费都够了。很多科研人员的老婆省钱，我还批评；有人问我，你们华为公司谁是雷锋？你们去奢侈品商店看，买几个包就走的人，问一下她的老公是哪里的？华为的。顺着来找工号，那就是雷锋，不用评了。老公挣钱多，老婆不花，老公怎么还有动力去挣钱呢？我们持续还在同一个领域前进，不会换轨道。</p>
<p>外面网传我们造车，我们不会做的。因为我们的车联网基本上是世界最主要车企的供应商，将来以车载计算、车载电子为主，我们可能产业很大。与别人合作，一起实现了无人驾驶，人家送我们一台车，车上印了华为标记，不等于华为要造车。这只是传说，我们不会随便换轨道的。</p>
<p><strong>23、《搜狐》韩笑：</strong>您对基础教育很重视，未来有没有可能以某些形式参与到基础教育工作呢？</p>
<p><strong>任正非：</strong>基础教育是国家的责任，企业要做好企业自身的事情。我们是主战部队，“坦克大军”在前进时，拖着几个孩子、拿着几个识字本，就不可能冲得上“上甘岭”。为人类建立这么庞大的网络，就是我们最大的社会责任，全世界30亿人口是我们联接起来的。特别是非洲地区，因为不赚钱，西方国家不去，是我们去联接起来的。如果华为不存在了，才是对世界的威胁。</p>
<p>我们不会自己去做教育，因为我们的主战部队还要缩减，要把一些次要的组织砍掉，让他们转为民兵组织私有化，跟着我们前进。就像淮海战役一样，民工推着独轮车送粮食，但是要给钱的。今年春节期间员工加班时，有五千多人提供服务，就是民兵组织，春节不仅买东西价格翻倍，还给服务人员一定奖励，及时兑现。</p>
<p><strong>24、《21世纪经济报道》袁一泓：</strong>在我们看来，华为的管理哲学、管理思想是任总的管理哲学和管理思想，您认为华为的管理哲学和管理思想的精髓是什么？国际的管理哲学长期为西方主导，您是否认为，中国的管理哲学、管理思想是不是到了向世界输出的时候了？市面上有大量的书籍写华为秘籍，存在华为的秘籍吗？华为模式可以复制吗？</p>
<p><strong>任正非：</strong>华为没有哲学，我个人没有学过哲学，也没有认真读过哲学书。外面的书，作者我也没见过，不认识，也许是他编的吧。外面流传的华为哲学是大家随便说的，没有什么特别的东西。我认为，如果说华为公司有哲学，就一点“以客户为中心，为客户创造价值”。因为钱在客户口袋里，有三种方法可以拿到这个钱 第一，抢，这是犯罪；第二，偷，也不行，要在派出所待两三天才能被放出来；第三，客户心甘情愿把钱给你，你必须要提供好的商品，为他提供需要的服务。所以，秘密就这一条。</p>
<p>你们看，我们园区的小咖啡厅都做得很好，为什么？不要做假，踏踏实实认真做。以前我们的咖啡厅，五、六个华为员工拿着高工资、股票，在那里做咖啡，还亏损。我说你们创业吧，一个人一个店创业，现在能挣七八十万。我们机关有人说要去查“以前不挣钱，现在挣钱了，搞什么名堂挣钱？”我说，去查一次，就裁一个人，为什么？你的人太多了，不干正事。他只要缴了房租水电，卫生质量好，员工喜欢去消费，你管那么多闲事干什么？所以，我们的后勤机构压缩得很小，为全世界170个国家、18万员工的后勤保障人员，只有703个。</p>
<p><strong>25、新华社 王攀：</strong>最近看到一篇您在员工持股会上讲话，华为通过了治理章程文件，您称之为里程碑式的进步，同时还有关于华为公司的治理结构，华为的治理方向是什么？</p>
<p><strong>任正非：</strong>其实我们的治理结构和治理章程，全在网上公布过。董事会换届选举经历了一年多，有九万多人参加了，不断学习、不断传播，只是媒体不太感兴趣。你提的这个问题，今天我没法完整地给你解释，这是一个体系。</p>
<p><strong>王攀：</strong>华为未来想发展成什么样的企业，或者什么样的方向？</p>
<p><strong>任正非：</strong>除了不让资本进来，其他什么都可以讨论。</p>
<p><strong>26、中央电视台 张鸥：</strong>有一个很强烈的感受，任总有非常浓厚的居安思危的意识，芯片十几年前就有备胎计划了，特别好奇这种危机意识最初是来自哪里？</p>
<p><strong>任正非：</strong>总是挨打，就觉得有危机了。</p>
<p><strong>27、《36氪》宋长乐：</strong>刚才大家问了很多问题，都说华为有备胎计划，还有对现在的情势很乐观。现阶段您最担心的事情是什么？这次事件牵涉到您的家人，在日常与家人沟通相处的过程中，对您的决策有没有什么影响？</p>
<p><strong>任正非：</strong>抓我的家人，就是想影响我的意志，我家人给我的鼓舞就是鼓舞我的意志。女儿写给我的信说，她会长期做好思想准备，她也很乐观，我就放心了，减轻了很大压力。我要超越个人、超越家庭、超越华为来思考这个世界上的问题，否则我就不客观了。</p>
<p>我与外国记者沟通，他们是很直率的。公共关系部把全文印成了书，今天都送给你们。为什么要这么多沟通？如果站在狭窄的观点来看，我们与西方媒体是对抗的，也许与你们也是对抗的。我应该超越自身的观点来沟通，平等讨论问题。</p>
<p>华为公司高层领导绝大多数都没有站在自身利益、企业利益来考虑问题，我们是世界性的，世界上接受我们、声援我们的朋友是很多的。</p>
<p><strong>28、中央电视台 董倩：</strong>我特别关注自主知识产权、自主创新问题，很多人认为自主知识产权、自主创新才是我们未来一条活路。您刚才讲海思作为备胎持久生存，就是有自主创新作为基础，但是您又讲“飞机”上非重要地方该放弃就放弃，不要浪费时间、浪费精力，为什么有这么大的差异？</p>
<p><strong>任正非：</strong>自主创新作为一种精神是值得鼓励的，站在人类文明的基础上创新才是正确的。所有科学家都是自主创新，为什么？他们做一些莫名其妙的题目，谁也搞不懂。但是我们要看到，科技创新是需要站在前人的肩膀上前进的，比如我们的海思并非从源头开始自主创新，也给别人缴纳了大量知识产权费用，有些是签订了交叉许可协议，有些协议是永久授权的，你中有我，我中有你，在别人的基础上形成了我们自己的创新。</p>
<p>我们同意鼓励自主创新，但是要把定义讲清楚。相同的东西，你自己做出来了也不能用，也要给人家原创交钱，这是法律，谁先申请归谁。无线电最早是波波夫发明，但是俄罗斯为了保密，压制了这个东西的公布；意大利的马可尼先申请，所以无线电的发明权归“马可尼”。飞机的发明者不是莱特兄弟，他们只是完成了飞行。其实真正的发明者是茹柯夫斯基，他的流体力学公式推演了让翅膀如何升起来，奠定了升力流体力学。我们的飞机喷气发动机到今天不过关，但是喷气发动机是谁发明的？中国人。邓小平到英国引进斯贝发动机时，斯贝同意把发动机卖给我们。邓小平问军用的发动机卖不卖？英国人回答说卖。其实中国想买民用发动机，主要做民航机的备件，后来英国人军用发动机也卖，也就是现在轰炸机6用的发动机。邓小平站起来向英国科学家致敬，英国科学家吓坏了，赶紧站起来回礼，说“感谢中国科学家的伟大发明”。邓小平回来查是谁发明的，是吴仲华，这人在什么地方？一查这个人在湖北养猪，赶紧调回北京去做热物理研究所的所长。我们为什么不借着吴仲华的研究，一步步深入，为什么在喷气发动机上不能进行理论突破呢？现在飞机发动机设计叫实验科学，不叫理论科学，而飞机一定是理论科学。你们看绍伊古关于飞机的讲话，美国飞机很精密，飞机时间是4000-5000小时；俄罗斯飞机没有那么发达，只能飞1000小时，绍伊古就问，战争时期飞机能飞满1000小时吗？大多数没到1000小时就打掉了，那何必要搞4000-5000小时，还那么贵，于是从实战的需求就确定了他们设计飞机的原则。他说，飞机飞得不快、金属表面不平，俄罗斯就在翅膀形成一层层流膜，解决了高速空气的润滑作用，这样俄罗斯飞机也能飞得很快。F22隐形飞机的隐形原理也是五十年代俄罗斯数学家发明的，俄罗斯数学家说钻石切面是有隐身功能，俄罗斯研究半天觉得这个东西没用，为什么？因为做不到，没有意义，所以批准论文公开发表。美国人读了以后，如获至宝，花二十年时间把F22隐形飞机做出来了，当然现在我们的米波雷达又把F22看见了。</p>
<p>其实中国五十年代也有很多原创科学家，但是现在都是毛毛糙糙、泡沫化的学风，这种学风怎么能奠定我们国家的基础科研竞争力呢？所以，还是要改造学风。</p>
<p><strong>谢丽容：</strong>您刚才提到一个事情特别重要，自主创新的定义到底是什么? 您反对的是封闭式、重复性的自主创新？</p>
<p><strong>任正非：</strong>自主创新如果是一种精神，我支持；如果是一种行动，我就反对。</p>
<p><strong>谢丽容：</strong>如果您这么来定义，大家一定会把海思拿出来反驳您？</p>
<p><strong>任正非：</strong>海思也是站在别人的肩膀上的创新。</p>
<p><strong>朱广平：</strong>自主创新不等于全是自己创新。创新最重要的是在一个系统中掌握最核心的一部分，而不是重复去造很多别人已经造好的“轮子”，那是没有意义的。任总一直强调数学，数学的核心是解决“知其然和知其所以然”的问题。比如说，你可以很容易做出一把锄头来，但是锄头背后的这些原理，你是否了解？什么样的形状是最好的？所有的这些东西，你可以做实验，但是实验背后的原理到底是什么？怎么证明你的实验和理论之间有多大差别，极限在哪里？这都要靠理论来证明。</p>
<p><strong>董倩：</strong>我要反驳您。在汽车制造业方面，有人说李书福是中国汽车行业非常棒的人，他可以用资金去撬动沃尔沃，又有人说他是短腿巨人，因为不掌握发动机，发动机被世界上绝大多数汽车公司掌握，而我们不掌握，这种情况下自主创新难道不是关键而且重要的吗？</p>
<p><strong>任正非：</strong>我并不反对李书福，但减震弹片钢圈、轮胎……是自主创新吗？就讲讲德国怎么造车。有一次我到德国斯图加特，工程院院长带我去参观一年级学生入学的几周学习。每个人发一块铁板，给一个齿轮的图纸，所有人都要用锉刀做出这个齿轮来，做出齿轮来还不能打分，要拿到减速箱去跑，跑完才能打分。这就德国汽车的基础。欧洲车和中国车有什么区别，为什么卖那么贵？就是可靠性高。大家都可以造出车来，但是不是最好的车另当别论。造车要用到大量的人类科技文明，也不是自主创新的概念。</p>
<p><strong>朱广平：</strong>自主创新不是全部自己重复做，而是找到自己的长处在哪里。所谓的卡脖子都是在补短板，问题是你的长板在哪？</p>
<p><strong>任正非：</strong>短板买别人就行了，何必要自己做短板呢？</p>
<p><strong>董倩：</strong>如果你自己没有，想买别人的但不能买，就不行了？</p>
<p><strong>任正非：</strong>不是每个人都会碰到我们这样的极端情况，多数人不必要走这种道路，应该借助人类文明前进。如果说自主创新，钢板的材料从哪来的？也是别人创新，不是你自主的。</p>
<p><strong>29、中央电视台 董倩：</strong>您现在的状况是偶发的个案，还是说在未来中国企业是一个经常发生的常态？</p>
<p><strong>任正非：</strong>我从来没有研究过我们国家的具体社会问题，现在也是让公共关系逼着对外，拿我来当“盾牌”到处“挡枪子”，我就上战场，我老了，打死了就算了，不在乎了。因此，我的主要精力是研究公司内部存在的问题和关注世界相关领域技术，确定我们战略上哪些有错误的。我跟自己的家人关系都处理不好，我跟儿女交往太少了，跟太太交往也少。她说“你就关心你的公司，不关心家人”，如果我再关心社会，可能我的家就没有了。所以，我对社会无法评价，我也没有精力去研究国内其他企业。</p>
<p><strong>30、《财经周刊》张而弛：</strong>美国国防部提出的频谱担忧，有办法解除吗？</p>
<p><strong>任正非：</strong>我不是正在解除吗？</p>
<p><strong>31、《虎嗅》李赓：</strong>收到了一份您之前接受外面采访的册子，我仔细读了，看到外面问的一些问题，对于我们来说是一些很匪夷所思的问题。其实可以看到，包括都有一些国与国之间相互了解和意识形态的问题，您觉得怎么去改进？会不会考虑华为未来改变在国外的一些姿态、一些传播？或者说，在全球化上会做一些什么样的改进呢？</p>
<p><strong>任正非：</strong>我们不会通过传播解决，还是通过给客户提供优质服务来解决我们的形象。我们已经很先进，客户一用就知道多厉害了。举一个例子，韩国LG董事长找我说，他要开300兆的LTE，当时我还反对，他带了两个翻译来说服我，我说100兆就够了，300兆没必要，他还是坚持300兆。我们就卖300兆设备给他。过不了多长时间，保罗教皇访问韩国，在1.3平方英里土地上，韩国集中了30万人，每个人举起手机用300兆拍摄往外传，网络没瘫痪。第二个例子，哈吉保障，之前每个运营商都瘫痪，我们接手以后哈吉保障一次也没有瘫痪过。四、五百万穆斯林祷告前一瞬间，所有人都要关手机，祷告完以后，所有人同时开手机，我们的网络没有瘫痪，很顺利。这都是我们在世界形象的榜样，不会通过媒体传播的方式来改变我们形象。</p>
<p>至于在国外的投资，是因为我们需要。比如，我们在英国投资光芯片工厂，主要为了将来以英国作为这些芯片的出口中心。我们在德国和日本都有这样的工厂，根据需要来确定的，不是为了纯粹说明什么形象，我们不需要形象，只需要订单。</p>
<p><strong>32、《观察者网》温刚：</strong>昨天我们参观了华为股权结构的展厅，有两个感受，产生了两个问题。第一，华为的股权结构走上了一条跟东亚地区主要科技公司完全不同的道路，例如三星电子以及台积电，外国机构和外国人占股比例高达50%以上，三星电子和台积电的股权结构，使西方资本可以从东亚的顶尖科技公司获得资本性的收益，您如何看待差异以及资本性收益这个话题？第二，华为股权结构是华为自己探索一条适合华为自己道路的结构模式，而且华为在过去几年跟西方媒体有过沟通。昨天听下来，目前很多西方媒体都有一些误解，认为并不是全民持股，而是全民的薪酬奖励计划。这就体现了西方的两面性，一方面西方的科技公司比较重视人才、重视技术，有令人尊敬的一面；但另一方面，跟自己不同的模式，会抱有很大误解或者不理解，您认为西方误解的根源在哪里？</p>
<p><strong>任正非：</strong>我们对资本不感兴趣，所以就没有研究，西方媒体愿意的话，他们可以去研究，反正我们不会让外面资本进入公司。公司现在的问题是赚钱太多，因为我们不能把价格降低，降低以后，就把所有下面的公司全挤死了，就成为“西楚霸王”，最终也是要灭亡的，所以我们不能在产业中这样做。苹果是榜样，永远是做一把大“伞”，让下面小厂家都能活。如果苹果卖萝卜白菜价，全世界就没有其他手机了。我们钱多，用一部分投入战略，但是不横向扩张，就给大学和科学家给予支持。我们开科学家大会，能把全世界这么多顶尖科学家请来，这也是奇迹。</p>
<p>因此，我们不需要资本进来，资本贪婪的本性会破坏我们理想的实现。</p>
<p><strong>温刚：</strong>西方对于华为股权结构的误解根源在哪里？</p>
<p><strong>任正非：</strong>西方不是今天才开始误解的，误解中国都几十年了。只要我们在中国是合法合规的就行了。</p>
<p><strong>33、《财新周刊》张而弛：</strong>无论是上次孟晚舟在加拿大被拘押事件，还是这次美国出口管制，美国表面理由是司法部对伊朗的案子。为了解开华为面临的困局，华为会愿意跟美国政府、商务部、司法部去谈吗？</p>
<p><strong>任正非：</strong>我们不是已经起诉美国政府了吗？通过律师与它在法庭上谈，它也要出示证据。</p>
<p><strong>张而驰：</strong>所以，您不会私下去谈？</p>
<p><strong>任正非：</strong>我也没有私下的管道。你给我特朗普的电话谈？</p>
<p><strong>34、《网易》杨霞清：</strong>想问一个比较轻松的问题。您去年和小女儿姚安娜和母亲姚凌拍了全家福，令外界非常惊讶。您作为父亲也好，作为丈夫也好，给自己打几分呢？您平时有多少时间去陪家人？您的女儿在哈佛大学读书，未来希望她从事什么样的工作？</p>
<p><strong>任正非：</strong>其实我这辈子很对不起小孩，我大的两个小孩，在他们小时候，我就当兵去了，11个月才能回一次家。我回家的时候，他们白天上学，晚上做作业，然后睡觉，第二天一早又上学去了。其实我们没有什么沟通，没有建立起什么感情。小女儿其实也很艰难，因为那时我们公司还在垂死挣扎之中，我基本十几个小时都在公司，要么就在出差，几个月不回家。当时为了打开国际市场，证明我们不是在中国搞腐败成功的，在国外一待就是几个月，小孩基本上很少有往来，很亏欠他们。其实小孩们都是靠自己的努力，自己对自己要求很高。</p>
<p>小女儿在中学的时候，每个星期要跳15小时舞，跳完舞回来才能做作业，晚上一点多才能休息。大学以后基本上做作业到晚上两点多钟，有时候做算法时会做到四、五点钟。小孩很热爱文艺，有人邀请她参加名媛会时，她跟爸爸妈妈商量说她要出席，当时我的态度是支持。因为如果打击这一次，未来她人生的其他路走不顺时，就会说爸爸妈妈堵了这条路，我们还不如挺身而出支持她，她想怎么办就怎么办。人家提出来，要照全家福，我第一个表态坚决支持，发表我们家全家福。我太太还以为我会躲闪的，我认为要支持儿女，都对不起儿女了，还不支持她一下？她好好去学习，自己掌握自己的人生命运。</p>
<p><strong>杨霞清：</strong>能不能谈一谈你的太太？</p>
<p><strong>任正非：</strong>我的人生有两次婚姻，三个小孩。我的前妻性格很刚烈，在文化革命中曾经是重庆三十万红卫兵的政委，是一个叱咤风云的人。我是连红卫兵都参加不了的逍遥派，大学毕业没有女朋友，别人给我们介绍，她能看上我，我真的不理解，她是天上飞的“白天鹅”，我是地上的“小蛤蟆”，那时除了学习好，家庭环境也不好，我父亲还在“牛棚”里，她怎么就看上我了？我们一起走了二十多年，后来就分开了。现在的太太很温柔、很能干，用二十多年时间专心培养小孩，很有成就。我和姚凌办结婚证这些都是前妻帮忙的，小孩上户口也是前妻帮助的。我前妻与我现在的太太关系也很融洽。</p>
<p><strong>35、《人民日报》冯华：</strong>对于Google停止合作，华为已经出了声明，想请您再评价一下，在操作系统方面会对华为有什么样的影响？</p>
<p><strong>任正非：</strong>应该是有影响的。Google是一家非常好的公司，Google在想办法，我们也在想办法，在讨论救济措施。</p>
<p><strong>36、《环球时报》陈青青：</strong>我看到海思一直在发各种招聘的信息，包括公众号和微信。现在中国企业都面临这样一个问题，阿里巴巴、腾讯等都需要有更多的高端人才，包括国际人才加入到创新行业中，不知道华为能够拿出什么来，吸引更多的高端人才来补充这样一支队伍？薪资待遇有没有具体的标准？</p>
<p><strong>任正非：</strong>使命感。物质待遇肯定会有具体的措施，主要还是给他们使命感，有做成事的机会，让科学家发挥自由度。</p>
<p><strong>陈青青：</strong>前几个月我去欧洲华为各个分公司走了走，看到很多外籍员工对华为的文化非常理解，我自己也在读华为的一些书，我很好奇，是什么样的力量让一个这么明显特征的中国民营企业成长为能够有国际上共通企业文化的国际性企业？</p>
<p><strong>任正非：</strong>你在外面看到的书，多数是不真实的，因为他们根据网上资料编的。但是我们不反对，因为他们也要生存。你们可以看华为公司的心声社区，这个比较真实。至于外籍员工，与我们没有本质差别，因为外籍员工也要为客户服务，我们也是为客户服务，价值观怎么不同呢？</p>
<p><strong>陈青青：</strong>现在外界对中国，包括这段时间讨论“996”，中国的企业文化有很多与西方工作价值观相冲突，就很好奇，华为内部是怎么统一和协调的？</p>
<p><strong>任正非：</strong>工作价值观，我们还是遵守这些国家的劳动法，来保护他们的合理时间。但是毕竟他们有使命感，没有使命感，他们做不出成绩来。我们的外国科学家其实比中国科学家还拼命，很多科学家三十多岁还没结婚。</p>
<p><strong>37、《科技日报》刘艳：</strong>您刚才谈到华为主战部队越来越精干，你们作为一个商业公司怎么看裁员？裁员这个问题在中国市场比较敏感，但是实际上ICT行业很多公司目前准备裁员或者已经进入裁员，华为从1987年到现在没有大规模裁员。</p>
<p><strong>任正非：</strong>其实外面离职的华为员工已经比在职员工多，怎么走出去的？自愿走出去，也是走出去。任何一个业务做得不好，是主官的责任，不是员工的责任，员工在前进过程中也有很多技能，当我们裁掉部门时要给员工有出路。比如，最近表彰了业软部门，他们提出有一万人要走红地毯，我批了同意，后来是几千人走了红地毯。2017年，我们在上海战略务虚会讨论决定缩减业软领域，没有做出成绩来。裁减掉他们时，我还担心有问题，悄悄给人力资源讲先涨一点工资再走，他们没有做出成绩，职级太低了，去其他部门会吃亏。两年后我视察时，发现很多人多没有等到涨工资就奔赴新战场了，终端、云的成功，与这被裁减的一万多员工有很大关系。他们奔赴到战略机会点去，既升职升级，又找到了作战机会。裁减的这两年，社会上一点声音没有，公司一点怨声载道都没有，一万多人的转岗完成了。现在很多部门也在裁减，然后把大部分富余人员转岗到主要的战略主攻部队去，少量平庸才会劝退。现在是这样的结构性调整，裁掉部门不是裁掉员工。</p>
<p><strong>38、《澎湃》周玲：</strong>余承东讲，任总之前用的iphone，现在用华为自己的高端手机，您个人用的是P30吗？</p>
<p><strong>任正非：</strong>那太先进了，我每次用的是落后手机。先进手机需要重新学习，浪费时间，我不需要新功能。</p>
<p><strong>周玲：</strong>您一直对CNBG业务比较偏爱？</p>
<p><strong>任正非：</strong>不是，对谁爱才骂谁，不爱怎么骂他？余承东挨骂也很疯狂。</p>
<p><strong>周玲：</strong>怎么看CBG这块业务的成长？</p>
<p><strong>任正非：</strong>它毕竟是辅助产业，目的就是赚钱，把钱输送到过来，帮助CNBG称霸世界。CNBG拿到钱就冲锋，占领“珠穆朗玛峰”。即使没有粮食种，占住高峰也是对的，就是这个原则，不是偏爱。</p>
<p><strong>周玲：</strong>我认为，余承东本人还是非常有能力的。</p>
<p><strong>任正非：</strong>我没有说他没有能力啊。媒体都在帮余承东说话，你们现场给余承东打个电话。（虎嗅注：以下余承东的内容为电话对话内容。）</p>
<p><strong>周玲：</strong>您对CBG这几年的发展给个总结性的讲法。</p>
<p><strong>任正非：</strong>我们在肯定一个部门的时候，不能以表扬为主，而是要校正它不正确的地方，使得它往正确的路上走。我们内部自我批判很厉害，常务董事会内部有时候都会吵架，争论到最后达成共识。</p>
<p><strong>余承东：</strong>希望老板多支持，老板一些话可能被大家误读、误解。有些人会拿着老板的话来狂搞我们。</p>
<p><strong>任正非：</strong>余承东，你今天的腰杆没撑直。</p>
<p><strong>张而弛：</strong>您给CBG定的1500亿美元？</p>
<p><strong>任正非：</strong>他们自己定的，而且肯定是达不到的。</p>
<p><strong>张而弛：</strong>您还是对他们寄予厚望的。</p>
<p><strong>任正非：</strong>人们需求进入饱和曲线，他们在饱和曲线开车，追赶者的差距会逐渐缩小。比如，一秒钟下两部电影的难度很大，但是一秒钟下一部和两部电影的差距不大，技术投入很大，差距没有拉很大。爬坡阶段领先很快，饱和曲线很难说。因此，以后不能肯定。</p>
<p><strong>39、《财经杂志》谢丽容：</strong>关于股权的问题，我之前做了一些外围的采访。华为员工很关心一个问题，过去这么多年华为股票一直在上升，他们购买了大量的华为内部股，获得了很丰盛的收益。但是他们现在关心一个问题，未来的不确定性在增加，假设公司遇到了一些问题，分红和收益会不会产生一些影响？</p>
<p><strong>任正非：</strong>那当然了，因为购买内部股是自愿的，退出也是自愿的，机制是开放的，不是捆绑的。华为内部股收益也会下降。我们的蓝军首先批评过公司“连续三十年，分红都超过30%，还想分到什么时候”？因此，我每年都在批评常务董事会利润增长太大，战略投入不够。他们去年的检讨放在我桌子上，我还没批。今年特朗普批了制裁，我们的利润可能会减少一点吧。</p>
<p><strong>谢丽容：</strong>既要同甘，也要共苦？</p>
<p><strong>任正非：</strong>我们理解一部分员工的思想，员工可以拿走属于自己的东西。</p>
<p><strong>谢丽容：</strong>你刚才有提到，只要不让资本进来，什么样的未来发展路径都可以讨论的。关于资本这个问题挺敏感的，之前有各种各样的传言。</p>
<p><strong>任正非：</strong>不要相信传言，永远没有资本进来，这是我们公司高层所有人一致达成的意见。我们为理想而奋斗，不为金钱而奋斗。</p>
<p><strong>40、《36氪》宋长乐：</strong>关于操作系统的事情，具体是哪个部门负责的？之后会不会开源，吸引一些开发者进来？</p>
<p><strong>任正非：</strong>我说不清楚是哪个部门负责，我们试试做吧。做一个操作系统的技术难度不大，难度大的是生态，怎么建立起一个生态？这是一个大事情，慢慢来。</p>
<p><strong>41、《界面》林腾：</strong>昨天去看了股权室，我也很震惊，华为公司与员工的权益高度绑定。您只持有1.4%，只有一票否决权，现在很多创始人都是同股同权或者同股要更多的权力，您在华为的影响力巨大的，内核的本质是什么？</p>
<p><strong>任正非：</strong>我们年初完成了投票选举新一届持股员工代表会，是经历了一年多酝酿，然后一股一票的投票出来的。酝酿了一年多，为什么社会不知道呢？我也不知道为什么员工会自觉保密到这样的程度。选出的持股员工代表，他就不能代表股票了，他是代表人，一人一票投票表决公司决议。董事会以人数来投票表决决议，常务董事会是在董事会授权下操作日常运作。</p>
<p><strong>42、《梨视频》闫鹏飞：</strong>任总从来没有用过一票否决权，您有没有在某个时刻其实很想用它，或者未来有什么情况可以用一票否决权？</p>
<p><strong>任正非：</strong>本来我的一票否决权有一个截止时期，准备到期就不要了，但我们在通过新章程时，正好碰到英国脱欧事件，如果像脱欧那样民主投票，可能就让一个的企业的命运葬送了，所以就保留了一票否决权，暂时由我来管。等到我们有一部分团队退出，到核心精英团队形成了小集体以后，我就放弃我个人的权力，把权力让渡给由7个人组成的核心精英团队，出现重大问题时进行否决，业务上的事情一般不需要动用。</p>
]]></content>
      <categories>
        <category>skill</category>
      </categories>
      <tags>
        <tag>work-skill</tag>
        <tag>华为</tag>
      </tags>
  </entry>
</search>
